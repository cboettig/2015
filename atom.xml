<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lab Notebook - </title>
  <link href="//.xml" rel="self"/>
  <link href="/"/>
  <updated>2015-09-23T17:16:07+00:00</updated>
  <id>http://www.carlboettiger.info/</id>
  <author>
    <name>Carl Boettiger</name>
    <email>cboettig@gmail.com</email>
  </author>

   
 <entry>
   <title>Nimble Model Construction</title>
   <link href="http://www.carlboettiger.info/2015/08/27/nimble-model-construction.html"/>
   <updated>2015-08-27T00:00:00+00:00</updated>
   <id>/08/27/nimble-model-construction</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;lazyeval&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can we declare the &lt;code&gt;nimbleCode&lt;/code&gt; parts in sections? Such as defining the model and priors in separate, reusable code blocks? Here’s a “model” block:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;model &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
  for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N){
    theta[i] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(alpha,beta)
    lambda[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[i]*t[i]
    x[i] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dpois&lt;/span&gt;(lambda[i])
  }
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We may also wish to define the priors separately, and with specified list of hyperparameters for the priors. Perhaps the need to use &lt;code&gt;quote&lt;/code&gt; and to specify each line as a list item, instead of as a block defined with &lt;code&gt;{&lt;/code&gt;, is not ideal, but non-standard evaluation is a bit of a wild west still.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;hyperparameters &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lambda =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.0&lt;/span&gt;)

priors &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
  alpha ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dexp&lt;/span&gt;(lambda)
  beta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(a,b)
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having done so, we can construct a &lt;code&gt;nimbleCode&lt;/code&gt; block by passing our chosen hyperparameters to the priors and concatenating the model and priors.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;P &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.expression&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(priors, lazyeval::interp, &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; hyperparameters)[-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])
pumpCode &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(model, P)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result appears to work as a functional &lt;code&gt;nimbleCode&lt;/code&gt; block; though note the resulting expression is not quite identical to the one we would typically write (e.g. without commas):&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pumpCode&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;expression({
    for (i in 1:N) {
        theta[i] ~ dgamma(alpha, beta)
        lambda[i] &amp;lt;- theta[i] * t[i]
        x[i] ~ dpois(lambda[i])
    }
}, alpha ~ dexp(1), beta ~ dgamma(0.1, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we just specify the rest of the model:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pumpConsts &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, 
                   &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;94.3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;15.7&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;62.9&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;126&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;5.24&lt;/span&gt;,
                         &lt;span class=&quot;fl&quot;&gt;31.4&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.05&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.05&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;2.1&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;10.5&lt;/span&gt;))
pumpData &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;22&lt;/span&gt;))
pumpInits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
                  &lt;span class=&quot;dt&quot;&gt;beta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,
                  &lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;, pumpConsts$N))

pump &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; pumpCode, 
                    &lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;pump&amp;#39;&lt;/span&gt;, 
                    &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; pumpConsts,
                    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; pumpData, 
                    &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; pumpInits)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then verify that it runs.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(pump)
mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(pump, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
mcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(mcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(samples[ , &lt;span class=&quot;st&quot;&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt;], samples[ , &lt;span class=&quot;st&quot;&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(alpha), &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(beta))&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-08-27-nimble-model-construction/unnamed-chunk-7-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;(The plot shows the same correlation issue that arises without using a block sampler that is illustrated in the manual.)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>a drat repository for rOpenSci (draft for ropensci blog)</title>
   <link href="http://www.carlboettiger.info/2015/08/03/a-drat-repository-for-ropensci.html"/>
   <updated>2015-08-03T00:00:00+00:00</updated>
   <id>/08/03/a-drat-repository-for-ropensci</id>
   <content type="html">&lt;p&gt;We’re happy to announce the launch of a CRAN-style repository for rOpenSci at &lt;a href=&quot;http://packages.ropensci.org&quot; class=&quot;uri&quot;&gt;http://packages.ropensci.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains the latest nightly builds from the master branch of all rOpenSci packages currently on GitHub. This allows users to install development versions of our software without specialized functions such as &lt;code&gt;install_github()&lt;/code&gt;, allows dependencies not hosted on CRAN to still be resolved automatically, and permits the use of &lt;code&gt;update.packages()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;using-the-repository&quot;&gt;Using the repository&lt;/h2&gt;
&lt;p&gt;To use, simply add &lt;code&gt;packages.ropensci.org&lt;/code&gt; to your existing list of R repos, such as:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;repos =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;http://packages.ropensci.org&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;getOption&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;repos&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(If you don’t have any default CRAN mirrors selected yet by &lt;code&gt;getOption(&amp;quot;repos&amp;quot;)&lt;/code&gt;, you may want to add one now). You can also include this line in specific &lt;code&gt;install.packages()&lt;/code&gt; requests:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;install.packages&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;taxize&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;repos =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;http://packages.ropensci.org&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;http://cran.rstudio.com&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;design&quot;&gt;Design&lt;/h2&gt;
&lt;p&gt;Our goal in creating a CRAN-style package repository (yes, it’s confusing that we use the word “repository” to describe both an individual package source in a GitHub &lt;em&gt;repo&lt;/em&gt; as well as a collection of package binaries on a CRAN-like &lt;em&gt;repo&lt;/em&gt;… sorry) was to provide users with a way to install the latest development versions of rOpenSci packages that offerred an easier and more seamless alternative to the widely used method of &lt;code&gt;devtools::install_github()&lt;/code&gt;. This would be particularly useful for updating all packages at once, or installing development versions that depended on other versions of packages not yet released to CRAN. As an added benefit, we also wanted a system that would allow us to compute anonmyzed download statistics, analogous to what RStudio provides for it’s CRAN mirror. Getting this all to work required the introduction of a few additional technologies.&lt;/p&gt;
&lt;h3 id=&quot;drat-and-drat.builder&quot;&gt;&lt;code&gt;drat&lt;/code&gt; and &lt;code&gt;drat.builder&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;While the basic structure of a CRAN-like R repository is simple, used both platforms such as rForge as well as individual developers, kudos really goes to Dirk Eddelbuettel’s &lt;a href=&quot;https://github.com/eddelbuettel/drat&quot;&gt;drat&lt;/a&gt; package for really making this automated, simple, and fun. While &lt;code&gt;drat&lt;/code&gt; makes it easy to toss individual packages into a CRAN-like repo (which we often refer to as a &lt;code&gt;drat&lt;/code&gt; repo), we needed an easy &amp;amp; automatic way to add a whole list of packages, given their GitHub repos. Rich FitzJohn’s new &lt;a href=&quot;https://github.com/richfitz/drat.builder&quot;&gt;drat.builder&lt;/a&gt; package does precisely this; handling the downloading of packages with some clever record-keeping to avoid building and adding packages which have not changed since the last time the &lt;code&gt;drat&lt;/code&gt; repo was built. The sources for building the rOpenSci packages repository can be found in our “drat” GitHub repo: &lt;a href=&quot;https://github.com/ropensci/drat&quot; class=&quot;uri&quot;&gt;https://github.com/ropensci/drat&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;dynamic-package-lists-ropkgs&quot;&gt;Dynamic package lists: &lt;code&gt;ropkgs&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;With rOpenSci, we wanted to take this one step further. No one wants to have to maintain one more list that must be updated every time a package is successfully on-boarded to the project. Scott Chamberlain’s work with &lt;a href=&quot;https://github.com/ropensci/ropkgs&quot;&gt;ropkgs&lt;/a&gt; provides a convenient way to query the rOpenSci software suite, automatically generating a list of available rOpenSci packages, and filtering them on relevant metadata, such as those that are in good status and installable condition, like so:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ropkgs&amp;quot;&lt;/span&gt;)
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ro_pkgs&lt;/span&gt;()
good &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$packages$status ==&lt;span class=&quot;st&quot;&gt; &amp;quot;good&amp;quot;&lt;/span&gt;
installable &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$packages$installable
pkgs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$packages$name[installable &amp;amp;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;good]&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;the-magic-of-continuous-integration-circleci&quot;&gt;the magic of continuous integration: CircleCI&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;ropkgs&lt;/code&gt;, &lt;code&gt;drat&lt;/code&gt; and &lt;code&gt;drat.builder&lt;/code&gt;, we now have everything we need to automate the building of the CRAN-like package repository. Now we just need some computing resource that can do the hard work of pulling down all the GitHub packages, building the repository, and securely sending off the binaries somewhere they can be downloaded. Continuous Integration systems turn out to be perfect for this. My favorite CI platform at the moment is &lt;a href=&quot;https://circleci.com&quot;&gt;CircleCi&lt;/a&gt;, for several reasons particularly relevant here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it has a rich API which includes support for &lt;code&gt;POST&lt;/code&gt; requests which can trigger a build without making commits to GitHub&lt;/li&gt;
&lt;li&gt;it supports custom Docker containers, allowing us to just download a container with most or all the dependencies we need to build packages, etc., without having to wait for them to install manually from source first.&lt;/li&gt;
&lt;li&gt;it has a convient web interface for providing secure credentials we’ll need to publish the binary repository to GitHub or Amazon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Circle has other advantages too, like great live help and the ability to ssh into your CI run to troubleshoot when all else fails, but otherwise works like most other CI platforms. More on that another day. You can see the daily builds here: &lt;a href=&quot;https://circleci.com/gh/ropensci/drat/tree/gh-pages&quot;&gt;CircleCi&lt;/a&gt;, which are triggered by a simple &lt;code&gt;POST&lt;/code&gt; request running as a cron job. The &lt;a href=&quot;https://github.com/ropensci/drat/blob/gh-pages/circle.yml&quot;&gt;circle.yml&lt;/a&gt; configuration file appears in the project’s drat repo – check out how simple it is!&lt;/p&gt;
&lt;h3 id=&quot;publishing-to-amazon&quot;&gt;Publishing to Amazon&lt;/h3&gt;
&lt;p&gt;The last step would be getting download logs; which is somewhat more complicated than it sounds. &lt;code&gt;drat&lt;/code&gt; convienently already handles pushing packages to GitHub’s gh-pages, a free and easy way to provide static hosting. This is free and easy, but isn’t ideal, particularly for large and frequently updated package collections. Also, it is impossible to get download logs from this approach. To avoid these issues, we settled on pushing our package repository to a static site hosted through Amazon’s S3 data storage “buckets.” It’s not free, but for at most a few gigs of space we’ll need it’s still very cost effective. In particular, S3 buckets can generate their own log files, which provides a way to count package downloads.&lt;/p&gt;
&lt;p&gt;Secure communication with Amazon S3 system is accomplished using the very nacsent / actively developing &lt;a href=&quot;https://github.com/cloudyr/aws.s3&quot;&gt;aws.s3&lt;/a&gt; R package from the awesome &lt;a href=&quot;https://cloudyr.github.io/&quot;&gt;cloudyr&lt;/a&gt; project.&lt;/p&gt;
&lt;h3 id=&quot;parsing-the-download-logs&quot;&gt;Parsing the download logs&lt;/h3&gt;
&lt;p&gt;Amazon’s S3 logs are rather raw and require some good ol data tidying work to transform them into the conveniently parsed, tidied and IP-address-anonymized format used by RStudio’s download logs. Eventually this too can be accomplished by the CircleCI builds, but at the moment is too computationally intensive for them. A script for this workflow can be found in the project repo, &lt;a href=&quot;https://github.com/ropensci/drat/blob/gh-pages/parse_s3_logs.R&quot;&gt;parse_s3_logs.R&lt;/a&gt;. As the data accumulate we should be able to start publishing the tidy logs.&lt;/p&gt;
&lt;p&gt;This project is still in it’s early days, and as ever, we welcome feedback, problems or ideas on the &lt;a href=&quot;https://github.com/ropensci/drat/issues&quot;&gt;issues tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now go ahead and install or update some packages from the shiny new &lt;a href=&quot;http://packages.ropensci.org&quot; class=&quot;uri&quot;&gt;http://packages.ropensci.org&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gpdp Via Mdptoolbox Cont</title>
   <link href="http://www.carlboettiger.info/2015/07/30/gpdp-via-mdptoolbox-cont.html"/>
   <updated>2015-07-30T00:00:00+00:00</updated>
   <id>/07/30/gpdp-via-mdptoolbox-cont</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;knitr::opts_chunk$&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;comment=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;)
&lt;span class=&quot;co&quot;&gt;#devtools::install_github(&amp;quot;cboettig/gpmanagement@b3b765cbceb51c9b0b8cb2724e395353ec365df9&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;MDPtoolbox&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;gpmanagement&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;lazyeval&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;true-model&quot;&gt;True model&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)
f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function (x, h){
  &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x) {
    x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h)
    x *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(p[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
  })
}

sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;
pdfn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, mu, &lt;span class=&quot;dt&quot;&gt;sigma =&lt;/span&gt; sigma_g){
  &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(x, &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(mu), &lt;span class=&quot;dt&quot;&gt;sdlog =&lt;/span&gt; sigma)
}

z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
Tobs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;

W &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Tobs

x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(Tobs)
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;
for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;))
  x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;z_g&lt;/span&gt;() *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x[t], &lt;span class=&quot;dt&quot;&gt;h=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, W), 
                        &lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;), x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)])), 
                  &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, W), 
                        x[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:Tobs]))
xObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;obs$x
yObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;obs$y
xPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.1&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(xObs), &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(x), x) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-4-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;p&gt;Now the GP estimation from NIMBLE. Updated to compute the prior for the length scale using Daniel’s scaling argument.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt; priors_template &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
        rho ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, X)
        sigGP ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
        sigOE ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
        })  

nimbleCodeSub &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(code, .values){
  &lt;span class=&quot;kw&quot;&gt;as.expression&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(code, lazyeval::interp, &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; .values)[-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])
}
  
priors &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCodeSub&lt;/span&gt;(priors_template, 
                        &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;X =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diff&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(xObs))/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;))) )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Note that at this time all nimble run calls must be made in one block since we cannot cache nimble pointers).&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_setup&lt;/span&gt;(xObs, yObs, xPred, &lt;span class=&quot;dt&quot;&gt;priors =&lt;/span&gt; priors)

## Fit the GP
&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(fit$Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100000&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 53.882   0.035  53.989 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(fit$Cmcmc$mvSamples)

## Perform prediction
&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(fit$Cpred$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(samples))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 81.951   0.024  82.063 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Extract variables for future use
E &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit$Cpred$&lt;span class=&quot;kw&quot;&gt;getE&lt;/span&gt;()
C &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit$Cpred$&lt;span class=&quot;kw&quot;&gt;getC&lt;/span&gt;()
samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Posteriors&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tidyr::&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)
&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-7-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; xObs, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; yObs)
pred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; xPred, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; E, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; E -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C)), &lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; E +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C)))
ggplot2::&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(pred) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x,&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; ymin, &lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; ymax), &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;grey80&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y), &lt;span class=&quot;dt&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; obs, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(x,y)) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; xPred, &lt;span class=&quot;dt&quot;&gt;true =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(xPred,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(x,true), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;coord_cartesian&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(xObs, xPred)), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(yObs,E))) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() &lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-8-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;decision-theory&quot;&gt;Decision theory&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;states &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;xPred &lt;span class=&quot;co&quot;&gt;# Vector of all possible states&lt;/span&gt;
actions &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;states &lt;span class=&quot;co&quot;&gt;# Vector of actions: harvest&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s consider a slight variation of the most trivial utility function: one which explicitly adds a cost to completely exhausting the stock (or reducing the stock by more than, say 95% in this case.) This should be somewhat similar to the impact of no discount rate.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Utility function&lt;/span&gt;
discount =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.99&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;#get_utility &amp;lt;- function(x,h) pmin(x,h)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#R &amp;lt;- outer(states, actions, get_utility)&lt;/span&gt;

R &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(actions, function(h){
      &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(states, function(x){
  if(h &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.95&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x)
    h
  else 
     -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(states)
  })
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Implementing policy&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;z &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;meanlog =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sdlog =&lt;/span&gt; sigma_g)

simulate_policy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(states, actions, policy, f, z, s0, &lt;span class=&quot;dt&quot;&gt;steps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;utility =&lt;/span&gt; function(s,a) &lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;){
  s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(steps)
  a &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(steps)
  u &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(steps)
  s[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s0
  for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(steps&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    
    a[t] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[policy[&lt;span class=&quot;kw&quot;&gt;which.min&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s[t]))]]
    s[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;z&lt;/span&gt;() *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(s[t], a[t])
    u[t] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;utility&lt;/span&gt;(s[t], a[t]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;discount ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t
  }
  
  &lt;span class=&quot;co&quot;&gt;# Final action determined but not implemented&lt;/span&gt;
  a[steps] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[policy[&lt;span class=&quot;kw&quot;&gt;which.min&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s[t]))]]

  &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;time =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:steps, &lt;span class=&quot;dt&quot;&gt;state =&lt;/span&gt; s, &lt;span class=&quot;dt&quot;&gt;action =&lt;/span&gt; a, &lt;span class=&quot;dt&quot;&gt;utility =&lt;/span&gt; u)
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;gp-model&quot;&gt;GP model&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gp_matrix &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(states, actions, E, C){
  
  transition &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(actions)))
  K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)
  sigmas &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C))
  
  for (k in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)) {
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(actions)) {
      nextpop &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;E[k] -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[i]
      if(nextpop &amp;lt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) {
        transition[k, , i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, K -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
      } else {
        transition[k, , i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(states, nextpop, sigmas[i]) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(states, nextpop, sigmas[i]))
      }
    }
  }
  transition
}

P_gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_matrix&lt;/span&gt;(states, actions, E, C)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mdp_check&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;P =&lt;/span&gt; P_gp, &lt;span class=&quot;dt&quot;&gt;R =&lt;/span&gt; R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mdp_value_iteration&lt;/span&gt;(P_gp, R, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount, &lt;span class=&quot;dt&quot;&gt;epsilon =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.00001&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;max_iter =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;5e3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;V0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MDP Toolbox: iterations stopped, epsilon-optimal policy found&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[gp$policy],  &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-14-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;reps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(reps) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;simulate_policy&lt;/span&gt;(states,actions, gp$policy, f, z, &lt;span class=&quot;dt&quot;&gt;s0 =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;steps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;utility =&lt;/span&gt; pmin, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount)[&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;state&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;utility&amp;quot;&lt;/span&gt;)]) -&amp;gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;sims 

&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(sims$utility)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 2.421142&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(sims) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(time, state, &lt;span class=&quot;dt&quot;&gt;group =&lt;/span&gt; reps), &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;darkblue&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-16-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;simulate-under-the-true-model&quot;&gt;Simulate under the true model&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;reps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(reps) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;simulate_policy&lt;/span&gt;(states, actions, gp$policy, f, z, &lt;span class=&quot;dt&quot;&gt;s0 =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;steps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;utility =&lt;/span&gt; pmin, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount)[&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;state&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;utility&amp;quot;&lt;/span&gt;)]) -&amp;gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;sims 

&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(sims$utility)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 2.394725&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Average utility is approximate here since it does not include penalty; since a function and not a matrix is requred by this function at this time.)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(sims) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(time, state, &lt;span class=&quot;dt&quot;&gt;group =&lt;/span&gt; reps), &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;darkblue&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-18-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;comparison-to-true-model&quot;&gt;Comparison to true model&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;P &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;transition_matrix&lt;/span&gt;(states, actions, f, pdfn)
&lt;span class=&quot;co&quot;&gt;#get_utility &amp;lt;- function(x,h) pmin(x,h)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#R &amp;lt;- outer(states, actions, get_utility)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mdp_check&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;P =&lt;/span&gt; P, &lt;span class=&quot;dt&quot;&gt;R =&lt;/span&gt; R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mdp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mdp_value_iteration&lt;/span&gt;(P, R, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount, &lt;span class=&quot;dt&quot;&gt;epsilon =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;max_iter =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;5e3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;V0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MDP Toolbox: iterations stopped, epsilon-optimal policy found&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[mdp$policy],  &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-21-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Note that the altered award structure has almost no effect on the optimal policy given the true model, other than to avoid harvesting directly to zero even when the stock cannot persist, due to the explicit penalty for doing so.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;reps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(reps) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;simulate_policy&lt;/span&gt;(states,actions, mdp$policy, f, z, &lt;span class=&quot;dt&quot;&gt;s0 =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;steps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;utility =&lt;/span&gt; pmin, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount)[&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;state&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;utility&amp;quot;&lt;/span&gt;)]) -&amp;gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;sims 

&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(sims$utility)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 9.796826&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(sims) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(time, state, &lt;span class=&quot;dt&quot;&gt;group =&lt;/span&gt; reps), &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;darkblue&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-30-gpdp-via-mdptoolbox-cont/unnamed-chunk-23-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Mdptoolbox Allen Model</title>
   <link href="http://www.carlboettiger.info/2015/07/29/mdptoolbox-allen-model.html"/>
   <updated>2015-07-29T00:00:00+00:00</updated>
   <id>/07/29/mdptoolbox-allen-model</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;MDPtoolbox&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;quietly =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;quietly =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# state space limit&lt;/span&gt;
states &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;:K &lt;span class=&quot;co&quot;&gt;# Vector of all possible states&lt;/span&gt;
actions &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;states &lt;span class=&quot;co&quot;&gt;# Vector of actions: harvest&lt;/span&gt;


sigma_g =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)

f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function (x, h){
  &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x) {
    x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h)
    x *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(p[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
  })
}

pdfn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, mu, &lt;span class=&quot;dt&quot;&gt;sigma =&lt;/span&gt; sigma_g){
  &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(x, &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(mu), &lt;span class=&quot;dt&quot;&gt;sdlog =&lt;/span&gt; sigma)
}

&lt;span class=&quot;co&quot;&gt;# Utility function&lt;/span&gt;
discount =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.95&lt;/span&gt;
get_utility &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x,h) {
    &lt;span class=&quot;kw&quot;&gt;pmin&lt;/span&gt;(x,h)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;R &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(states, actions, get_utility)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;transition_matrix &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(states, actions, f, pdfn){
  &lt;span class=&quot;co&quot;&gt;# Initialize&lt;/span&gt;
  transition &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(actions)))
  
  K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)
  
  for (k in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)) {
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(actions)) {
  
  &lt;span class=&quot;co&quot;&gt;# Calculate the transition state at the next step, given the &lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;# current state k and action i (harvest H[i])&lt;/span&gt;
        nextpop &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(states[k], actions[i])
        
        ## Population always extinct if this is negative. since multiplicitive shock z_t * f(n) &amp;lt; 0 for all f(n) &amp;lt; 0
        if(nextpop &amp;lt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
          transition[k, , i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
    &lt;span class=&quot;co&quot;&gt;# Implement demographic stochasticity &lt;/span&gt;
        else {
  
        &lt;span class=&quot;co&quot;&gt;# Cts distributions need long-tailed denominator as normalizing factor:&lt;/span&gt;
          fine_states &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(states), &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(states), &lt;span class=&quot;dt&quot;&gt;by =&lt;/span&gt; states[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;states[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])
        N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;pdfn&lt;/span&gt;(fine_states, nextpop))  
          transition[k, , i] &amp;lt;-&lt;span class=&quot;kw&quot;&gt;pdfn&lt;/span&gt;(states, nextpop) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N
          
            &lt;span class=&quot;co&quot;&gt;# We need to correct this density for the final capping state (&amp;quot;Pile on boundary&amp;quot;) (discrete or cts case)&lt;/span&gt;
          &lt;span class=&quot;co&quot;&gt;# this can be a tiny but negative value due to floating-point errors. so we take max(v,0) to avoid&lt;/span&gt;
        transition[k, K, i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(transition[k, -K, i]), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
        }
    } 
  }
  transition
}

P &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;transition_matrix&lt;/span&gt;(states, actions, f, pdfn)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;using-toolbox&quot;&gt;Using toolbox&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mdp_check&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;P =&lt;/span&gt; P, &lt;span class=&quot;dt&quot;&gt;R =&lt;/span&gt; R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mdp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mdp_value_iteration&lt;/span&gt;(P, R, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount, &lt;span class=&quot;dt&quot;&gt;epsilon =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;max_iter =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;5e3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;V0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MDP Toolbox: iterations stopped, epsilon-optimal policy found&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[mdp$policy],  &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-29-mdptoolbox-allen-model/unnamed-chunk-6-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;compare-to-reed&quot;&gt;Compare to Reed&lt;/h2&gt;
&lt;p&gt;From Reed (1979) we know that the optimal solution is a constant-escapement rule when the growth function in convex. Note that this condition is violated by the growth function with alternative stable states (Allen/Ricker-Allee model), resulting in a very different optimal policy:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[f&amp;#39;(s^*) = 1/\alpha\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For growth-rate function &lt;span class=&quot;math&quot;&gt;\(f\)&lt;/span&gt;, where &lt;span class=&quot;math&quot;&gt;\(\alpha\)&lt;/span&gt; is the discount factor and &lt;span class=&quot;math&quot;&gt;\(s^*\)&lt;/span&gt; the stock size for the constant escapement. Analytic solutions are clearly possible for certain growth functions, but here I’ve just implemented a generic numerical solution.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fun &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;discount
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optimize&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;f =&lt;/span&gt; fun, &lt;span class=&quot;dt&quot;&gt;interval =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,K))
S_star &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$minimum

exact_policy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(states, 
                       function(x) 
                        if(x &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S_star) &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
                        else x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S_star)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;actions[mdp$policy],  &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# The difference between Bellman and the analytical solution is small:&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;lines&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;exact_policy)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-29-mdptoolbox-allen-model/unnamed-chunk-8-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Fastgp Explore</title>
   <link href="http://www.carlboettiger.info/2015/07/29/fastgp-explore.html"/>
   <updated>2015-07-29T00:00:00+00:00</updated>
   <id>/07/29/fastgp-explore</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(FastGP)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(mvtnorm)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(MASS)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(rbenchmark)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;demo-of-elliptical-slice-sampling&quot;&gt;Demo of elliptical slice sampling&lt;/h2&gt;
&lt;p&gt;Relevant Parameters:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;A &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#amplitude of the sin function used for our signal&lt;/span&gt;
T &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#period of the sin function used as our signal&lt;/span&gt;
sigma &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#variance parameter in the covariance function&lt;/span&gt;
phi &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#decay parameter for the exponential kernel&lt;/span&gt;
N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;#number of time points &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A function that creates a signal, which can be toggled for multiple shapes. In the present iteration we use a sin function with variable period.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;signal &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(t) {
  &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(A*&lt;span class=&quot;kw&quot;&gt;sin&lt;/span&gt;(t/T))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define our covariance matrix using the exponential kernel&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;S &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(sigma*&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;dist&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;/phi))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate a copy of the signal on the time scale of 1…N&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mvrnorm&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Sigma =&lt;/span&gt; S , &lt;span class=&quot;dt&quot;&gt;tol =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e-6&lt;/span&gt;)
s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;signal&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N)+t)+&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(N,&lt;span class=&quot;dt&quot;&gt;sd=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(.&lt;span class=&quot;dv&quot;&gt;001&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;log-lik functions&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;log_lik &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(w,s){
  &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;dmvnorm&lt;/span&gt;(s, &lt;span class=&quot;dt&quot;&gt;mean =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;signal&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N)+w),&lt;span class=&quot;dt&quot;&gt;sigma=&lt;/span&gt;.&lt;span class=&quot;dv&quot;&gt;001&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N),&lt;span class=&quot;dt&quot;&gt;log=&lt;/span&gt;T))
}

&lt;span class=&quot;co&quot;&gt;#rcpp based log-lik function&lt;/span&gt;
log_lik_rcpp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(w,s){
  &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;kw&quot;&gt;rcpp_log_dmvnorm&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;S =&lt;/span&gt; .&lt;span class=&quot;dv&quot;&gt;001&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N),&lt;span class=&quot;dt&quot;&gt;mu=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;signal&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N)+w),s,&lt;span class=&quot;dt&quot;&gt;istoep=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;X &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N),&lt;span class=&quot;dt&quot;&gt;nrow=&lt;/span&gt;N)
Sig &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma*&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;kw&quot;&gt;rcpp_distance&lt;/span&gt;(X,&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(X)[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;],&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(X)[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;/phi)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and here we go:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mcmc_samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ess&lt;/span&gt;(log_lik_rcpp,s,Sig,&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Running elliptical slice sampling...&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;par&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mfrow=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;colMeans&lt;/span&gt;(mcmc_samples), &lt;span class=&quot;dt&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(t, &lt;span class=&quot;dt&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lwd=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;colMeans&lt;/span&gt;(mcmc_samples) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(mcmc_samples, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, sd), &lt;span class=&quot;dt&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;dashed&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;colMeans&lt;/span&gt;(mcmc_samples) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(mcmc_samples, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, sd), &lt;span class=&quot;dt&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;dashed&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-29-fastgp-explore/unnamed-chunk-9-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;test &lt;code&gt;ess&lt;/code&gt; with rcpp likelihood versus non rcpp likelihood&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;benchmark&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;ess&lt;/span&gt;(log_lik_rcpp,s,Sig,&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;ess&lt;/span&gt;(log_lik,s,Sig,&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;),&lt;span class=&quot;dt&quot;&gt;replications=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;Running elliptical slice sampling...&amp;quot;
[1] &amp;quot;Running elliptical slice sampling...&amp;quot;
[1] &amp;quot;Running elliptical slice sampling...&amp;quot;
[1] &amp;quot;Running elliptical slice sampling...&amp;quot;
[1] &amp;quot;Running elliptical slice sampling...&amp;quot;
[1] &amp;quot;Running elliptical slice sampling...&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;                                              test replications
1 ess(log_lik_rcpp, s, Sig, 1000, 250, 100, FALSE)            2
2       ess(log_lik, s, Sig, 1000, 250, 100, TRUE)            2
  elapsed relative user.self sys.self user.child sys.child
1  19.480    1.000    19.592    0.636          0         0
2  33.818    1.736    46.504   87.208          0         0&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Mdptoolbox Ex 2</title>
   <link href="http://www.carlboettiger.info/2015/07/14/mdptoolbox-ex-2.html"/>
   <updated>2015-07-14T00:00:00+00:00</updated>
   <id>/07/14/mdptoolbox-ex-2</id>
   <content type="html">&lt;p&gt;Adapted from Marescot et al. appendix 5, to Reed optimal control problem, including direct comparison against (semi) analytic optimum.&lt;/p&gt;
&lt;h2 id=&quot;step-1-define-objectives&quot;&gt;step 1: define objectives&lt;/h2&gt;
&lt;p&gt;This is a conceptual step which does not require coding&lt;/p&gt;
&lt;h2 id=&quot;step-2-define-states&quot;&gt;step 2: define states&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# state space limit&lt;/span&gt;
states &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;:K &lt;span class=&quot;co&quot;&gt;# Vector of all possible states&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;step-3-define-control-actions&quot;&gt;step 3: define control actions&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Vector of actions: harvest&lt;/span&gt;
H &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;states&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;step-4-define-dynamic-model-with-demographic-parameters&quot;&gt;step 4: define dynamic model (with demographic parameters)&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)
f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h){
  A &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] 
  B &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] 
  s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(x-h, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
  A *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;B *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s)
}

sigma_g =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;step-5-define-utility&quot;&gt;step 5: define utility&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Utility function&lt;/span&gt;
get_utility &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x,h) {
    &lt;span class=&quot;kw&quot;&gt;pmin&lt;/span&gt;(x,h)
}&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;step-6-solve-bellman-equation-with-value-iteration&quot;&gt;step 6: solve bellman equation with value iteration&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Initialize transition matrix&lt;/span&gt;
transition &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(H)))

&lt;span class=&quot;co&quot;&gt;# Initialize utility matrix&lt;/span&gt;
utility &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(H)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Fill in the transition and utility matrix&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# Loop on all states&lt;/span&gt;
for (k in &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;:K) {

    &lt;span class=&quot;co&quot;&gt;# Loop on all actions&lt;/span&gt;
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(H)) {

&lt;span class=&quot;co&quot;&gt;# Calculate the transition state at the next step, given the &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# current state k and the harvest H[i]&lt;/span&gt;
        nextpop &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(k, H[i])
        if(nextpop &amp;lt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
          transition[k&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, , i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
    &lt;span class=&quot;co&quot;&gt;# Implement demographic stochasticity by drawing &lt;/span&gt;
  &lt;span class=&quot;co&quot;&gt;# probability from a density function&lt;/span&gt;
        else {

&lt;span class=&quot;co&quot;&gt;# We need to correct this density for the final capping state (&amp;quot;Pile on boundary&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# For discrete probability distribution, this is easy if `states` includes all possible&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# discrete states below the capping state (e.g. all non-negative integers less than K).  &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# For a continuous distribution, this is more problematic as we have to first normalize the densities.&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# EDIT: this can be negative, due to floating-point errors. so we take max(v,0) to avoid&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;# Get long-tailed denominator as normalizing factor (continuous distributions only):&lt;/span&gt;
          fine_states &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(states), &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(states), &lt;span class=&quot;dt&quot;&gt;by =&lt;/span&gt; states[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]-states[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])
        N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(fine_states, &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(nextpop), &lt;span class=&quot;dt&quot;&gt;sdlog =&lt;/span&gt; sigma_g))

      transition[k&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, , i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(states, &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(nextpop), &lt;span class=&quot;dt&quot;&gt;sdlog =&lt;/span&gt; sigma_g) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N
      
        &lt;span class=&quot;co&quot;&gt;# We need to correct this density for the final capping state (&amp;quot;Pile on boundary&amp;quot;)&lt;/span&gt;
        transition[k&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, K&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(transition[k&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, -(K&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;), i]), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)

        }
        
        &lt;span class=&quot;co&quot;&gt;# Compute utility&lt;/span&gt;
        utility[k&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;get_utility&lt;/span&gt;(k, H[i])

    } &lt;span class=&quot;co&quot;&gt;# end of action loop&lt;/span&gt;
} &lt;span class=&quot;co&quot;&gt;# end of state loop&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Discount factor&lt;/span&gt;
discount &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.95&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;# Action value vector at tmax&lt;/span&gt;
Vtmax &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states))

&lt;span class=&quot;co&quot;&gt;# Action value vector at t and t+1&lt;/span&gt;
Vt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states))
Vtplus &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states))

&lt;span class=&quot;co&quot;&gt;# Optimal policy vector&lt;/span&gt;
D &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states))

&lt;span class=&quot;co&quot;&gt;# Time horizon&lt;/span&gt;
Tmax &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;solution-calculated-explicitly&quot;&gt;Solution calculated explicitly:&lt;/h2&gt;
&lt;p&gt;The backward iteration consists in storing action values in the vector &lt;code&gt;Vt&lt;/code&gt; which is the maximum of utility plus the future action values for all possible next states. Knowing the final action values, we can then backwardly reset the next action value &lt;code&gt;Vtplus&lt;/code&gt; to the new value &lt;code&gt;Vt&lt;/code&gt;. We start The backward iteration at time &lt;code&gt;T-1&lt;/code&gt; since we already defined the action value at &lt;code&gt;Tmax&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;for (t in (Tmax -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;):&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) {

&lt;span class=&quot;co&quot;&gt;# We define a matrix Q that stores the updated action values for &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# all states (rows)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# actions (columns)&lt;/span&gt;
    Q &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(states), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(H)))
    
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(H)) {
    
&lt;span class=&quot;co&quot;&gt;# For each harvest rate we fill for all states values (row) &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# the ith column (Action) of matrix Q&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# The utility of the ith action recorded for all states is &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# added to the product of the transition matrix of the ith &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# action by the action value of all states &lt;/span&gt;
        Q[,i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;utility[, i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;discount *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(transition[,,i] %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Vtplus)
    
    } &lt;span class=&quot;co&quot;&gt;# end of the harvest loop&lt;/span&gt;

    &lt;span class=&quot;co&quot;&gt;# Find the optimal action value at time t is the maximum of Q&lt;/span&gt;
    Vt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(Q, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, max)

&lt;span class=&quot;co&quot;&gt;# After filling vector Vt of the action values at all states, we &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# update the vector Vt+1 to Vt and we go to the next step standing &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# for previous time t-1, since we iterate backward&lt;/span&gt;
    Vtplus &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Vt

} &lt;span class=&quot;co&quot;&gt;# end of the time loop&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;# Find optimal action for each state&lt;/span&gt;
for (k in &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;:K) {
&lt;span class=&quot;co&quot;&gt;# We look for each state which column of Q corresponds to the &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# maximum of the last updated value &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# of Vt (the one at time t + 1). If the index vector is longer than 1 &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# (if there is more than one optimal value we chose the minimum &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# harvest rate)&lt;/span&gt;
    D[k +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;H[(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(Q[k +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ] ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Vt[k +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])))]
}&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;plot-solution&quot;&gt;plot solution&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;D, &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-14-mdptoolbox-ex-2/unnamed-chunk-9-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;proof-of-optimality-compare-with-analytical-solution&quot;&gt;proof of optimality: compare with analytical solution&lt;/h2&gt;
&lt;p&gt;From Reed (1979) we know that the optimal solution is a constant-escapement rule:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[f&amp;#39;(s^*) = 1/\alpha\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For growth-rate function &lt;span class=&quot;math&quot;&gt;\(f\)&lt;/span&gt;, where &lt;span class=&quot;math&quot;&gt;\(\alpha\)&lt;/span&gt; is the discount factor and &lt;span class=&quot;math&quot;&gt;\(s^*\)&lt;/span&gt; the stock size for the constant escapement. Analytic solutions are clearly possible for certain growth functions, but here I’ve just implemented a generic numerical solution.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fun &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;discount
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optimize&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;f =&lt;/span&gt; fun, &lt;span class=&quot;dt&quot;&gt;interval =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,K))
S_star &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$minimum

exact_policy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(states, 
                       function(x) 
                        if(x &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S_star) &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
                        else x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S_star)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;D, &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# The difference between Bellman equation solution and the analytical &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# solution is small:&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;lines&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;exact_policy)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-14-mdptoolbox-ex-2/unnamed-chunk-11-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;using-toolbox&quot;&gt;Using toolbox&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;MDPtoolbox&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;mdp_check&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;P =&lt;/span&gt; transition, &lt;span class=&quot;dt&quot;&gt;R =&lt;/span&gt; utility)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mdp_value_iteration&lt;/span&gt;(transition, utility, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; discount, &lt;span class=&quot;dt&quot;&gt;epsilon =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;max_iter =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;5e3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;V0 =&lt;/span&gt; Vtmax)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MDP Toolbox: iterations stopped, epsilon-optimal policy found&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;D, &lt;span class=&quot;dt&quot;&gt;xlab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;lines&lt;/span&gt;(states, states -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;H[out$policy], &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-07-14-mdptoolbox-ex-2/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Gp Nimble V2</title>
   <link href="http://www.carlboettiger.info/2015/06/19/gp-nimble-v2.html"/>
   <updated>2015-06-19T00:00:00+00:00</updated>
   <id>/06/19/gp-nimble-v2</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#  devtools::install_github(&amp;quot;cboettig/gpmanagement&amp;quot;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;gpmanagement&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;  &lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;)
  Tobs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;
  f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function (x, h, p){
    &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x) {
        x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h)
        x *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(p[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])/p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    })
  }
  p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)
  sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;
  z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)
  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(Tobs)
  x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;
  for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;))
    x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;z_g&lt;/span&gt;() *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x[t], &lt;span class=&quot;dt&quot;&gt;h=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;p=&lt;/span&gt;p)
  obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
                          &lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;), x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)])), 
                    &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
                          x[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:Tobs]))
  xObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;obs$x
  yObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;obs$y
  xPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;  fit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_setup&lt;/span&gt;(xObs, yObs, xPred)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] RW_block sampler: rho, sigGP, sigOE,  adaptive: TRUE,  adaptScaleOnly: FALSE,  adaptInterval: 200,  scale: 1,  propCov: identity&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;  Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit$Cmcmc 
  Cpred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit$Cpred
  Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit$Cmodel
  
  &lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100000&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 25.548   0.024  25.734 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples)
  ## basic sanity check
  testthat::&lt;span class=&quot;kw&quot;&gt;expect_identical&lt;/span&gt;(Cmodel$&lt;span class=&quot;kw&quot;&gt;getNodeNames&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;topOnly =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;colnames&lt;/span&gt;(samples))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;predict from GP model using posterior MCMC samples&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(Cpred$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(samples))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 26.604   0.004  26.680 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;extract predictions: E and C&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;  E &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Cpred$&lt;span class=&quot;kw&quot;&gt;getE&lt;/span&gt;()
  C &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Cpred$&lt;span class=&quot;kw&quot;&gt;getC&lt;/span&gt;()
  
obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; xObs, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; yObs)
pred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; xPred, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; E, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; E -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C)), &lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; E +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C)))
ggplot2::&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(pred) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x,&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; ymin, &lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; ymax), &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;grey80&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y), &lt;span class=&quot;dt&quot;&gt;size=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; obs, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(x,y)) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;coord_cartesian&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(xObs, xPred)), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(yObs,E))) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-06-19-gp-nimble-v2/unnamed-chunk-7-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Further exploration of RAM Legacy Stock Assessment data</title>
   <link href="http://www.carlboettiger.info/2015/06/18/RAM-explore.html"/>
   <updated>2015-06-18T00:00:00+00:00</updated>
   <id>/06/18/RAM-explore</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;suppressPackageStartupMessages&lt;/span&gt;({
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;RPostgreSQL&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;devtools&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
})

## Perform this in data_raw to keep package dependencies minimal
mydb &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;src_postgres&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dbname =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;srdb&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;host=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;nautilus-vm.mathstat.dal.ca&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;user =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;srdbuser&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;password =&lt;/span&gt;  &lt;span class=&quot;st&quot;&gt;&amp;quot;srd6us3r!&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;port =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5432&lt;/span&gt;)

timeseries &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries&amp;quot;&lt;/span&gt;)))
values &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries_values_view&amp;quot;&lt;/span&gt;)))
units &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries_units_view&amp;quot;&lt;/span&gt;)))
assessment &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessment&amp;quot;&lt;/span&gt;)))
area &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.area&amp;quot;&lt;/span&gt;)))
stock &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.stock&amp;quot;&lt;/span&gt;)))
method &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessmethod&amp;quot;&lt;/span&gt;)))
assessor &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessor&amp;quot;&lt;/span&gt;)))
management  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.management&amp;quot;&lt;/span&gt;)))
taxonomy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.taxonomy&amp;quot;&lt;/span&gt;)))
lmerefs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.lmerefs&amp;quot;&lt;/span&gt;)))
lmestock &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.lmetostocks&amp;quot;&lt;/span&gt;)))
biometrics  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.biometrics&amp;quot;&lt;/span&gt;)))
bioparams &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.bioparams&amp;quot;&lt;/span&gt;)))
tsmetrics &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.tsmetrics&amp;quot;&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;north-atlantic-cod-data&quot;&gt;North Atlantic Cod data&lt;/h2&gt;
&lt;p&gt;Select North Atlantic Cod, &lt;em&gt;Gadus morhua&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;cod_ids &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;assessment %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(stock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(scientificname==&lt;span class=&quot;st&quot;&gt;&amp;quot;Gadus morhua&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unlist&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unname&lt;/span&gt;() &lt;span class=&quot;co&quot;&gt;# we need a char string, not a data.frame&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Note we could have selected on the &lt;code&gt;tsn==164712&lt;/code&gt; to be less ambiguous but also less semantic, or on &lt;code&gt;commonname==&amp;quot;Atlantic cod&amp;quot;&lt;/code&gt; to be more reader friendly but even more ambiguous. Fortunately the common and scientific names are well aligned with the &lt;code&gt;tsn&lt;/code&gt; ids in this case and we get the same set of 22 stock assessments.)&lt;/p&gt;
&lt;p&gt;Before we can combine across these, we must verify that each assessment measures the quantities of interest using the same units, or otherwise correct those that do not:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;units %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, catch_landings_unit) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(catch_landings_unit) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(catch_landings_unit))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [1 x 2]

  catch_landings_unit length(catch_landings_unit)
1                  MT                          21&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;units %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, total_unit) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(total_unit) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(total_unit))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [3 x 2]

  total_unit length(total_unit)
1        E03                  1
2         MT                 18
3         NA                  2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All catches are in metric tons, so no concern there.&lt;/p&gt;
&lt;p&gt;Landing data we can plot immediately:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(tsyear) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;catch =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(catch_landings, &lt;span class=&quot;dt&quot;&gt;na.rm=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## all units are metric tons
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, catch)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Catch/Landings (MT)&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-4-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Note that missing data is removed, such that any assessment without catch data is treated as zero catch. This could be the case (maybe not all assessments correspond to unique catch zones.) We also assume catch reported in one assessment is not also reported in a different assement (e.g. no double-counting). Lastly, we must bear in mind that this is catch/landings data, which may include bycatch, underreporting, etc.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;handling-unit-conversions&quot;&gt;Handling unit conversions&lt;/h2&gt;
&lt;p&gt;The units for &lt;code&gt;total&lt;/code&gt; are more problematic. The &lt;code&gt;NA&lt;/code&gt; simply indicates stocks that do not have the an estimate for &lt;code&gt;total&lt;/code&gt;, but we also see one assessment has totals in &lt;code&gt;E03&lt;/code&gt; (thousands) instead of metric tons.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;Sidebar&lt;/em&gt; how do we know for sure that &lt;code&gt;E03&lt;/code&gt; is abundance counts in thousands of fish?&lt;/p&gt;
&lt;p&gt;The database does not provide metadata for these unit definitions directly. the &lt;code&gt;values&lt;/code&gt; data and its associated &lt;code&gt;units&lt;/code&gt; metadata are actually derived tables from the raw &lt;code&gt;timeseries&lt;/code&gt; table and the associated &lt;code&gt;tsmetrics&lt;/code&gt; unit metadata, so we would have to dive in there to confirm this interpretation of &lt;code&gt;E03&lt;/code&gt; in this case.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# tidy up the tsmetrics table:&lt;/span&gt;
unit_defs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tsmetrics %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;tsid =&lt;/span&gt; tsunique) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(tsid, tslong, tsunitslong) 

&lt;span class=&quot;co&quot;&gt;# Find the assessid of the cod stock assessment that measures total in units of E03&lt;/span&gt;
who &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;units %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, total_unit) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(total_unit==&lt;span class=&quot;st&quot;&gt;&amp;quot;E03&amp;quot;&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# Find that assessid in the timeseries table, where units are written in different notation&lt;/span&gt;
ts_who &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;who$assessid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, tsid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt;(tsid)

&lt;span class=&quot;co&quot;&gt;# Join the tables to see the definitions&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(ts_who, unit_defs)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [5 x 4]

                      assessid   tsid
1 NAFO-SC-COD3M-1959-2008-BAUM SSB-MT
2 NAFO-SC-COD3M-1959-2008-BAUM TN-E03
3 NAFO-SC-COD3M-1959-2008-BAUM  R-E03
4 NAFO-SC-COD3M-1959-2008-BAUM  F-1/T
5 NAFO-SC-COD3M-1959-2008-BAUM  TC-MT
Variables not shown: tslong (chr), tsunitslong (chr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we can confirm &lt;code&gt;E03&lt;/code&gt; is in this case &lt;code&gt;TN-E03&lt;/code&gt; (total number, in thousands).&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Converting this to metric tons will require an average weight for cod. FishBase gives us a maximum weight (in grams):&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;rfishbase::&lt;span class=&quot;kw&quot;&gt;species&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Gadus morhua&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fields=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Weight&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error in loadNamespace(name): there is no package called &amp;#39;rfishbase&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wikipedia says the average is 5-12 kilograms, so let’s take 8.5 Kg for sake of argument. Clearly a more programmatic and more accurate solution is needed here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sidenote&lt;/em&gt; the database has some very limited data on biometrics by assessment, including some assessments that record a maximum (but not an average) weight (sometimes pulled from FishBase anyway). Even pooling across all Atlantic Cod assessments we can’t find even a maximum weight.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Find the unit code for max weight&lt;/span&gt;
biometrics %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(biolong ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Maximum weight&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(biounique) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unlist&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unname&lt;/span&gt;() -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;max_weight
&lt;span class=&quot;co&quot;&gt;# show the unit code:&lt;/span&gt;
max_weight&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MAX-WGT-g&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Look up all max weight values for illustration: (not filtering on cod_ids since there are no hits)&lt;/span&gt;
bioparams %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(bioid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;max_weight)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [17 x 5]

                                  assessid     bioid  biovalue
1      INIDEP-ARGANCHOSARG-1992-2007-Parma MAX-WGT-g        51
2      INIDEP-ARGANCHONARG-1989-2007-Parma MAX-WGT-g        48
3       INIDEP-ARGHAKESARG-1985-2008-Parma MAX-WGT-g   5300.00
4       INIDEP-ARGHAKENARG-1985-2007-Parma MAX-WGT-g   5900.00
5  INIDEP-PATGRENADIERSARG-1983-2006-Parma MAX-WGT-g      2940
6            ICCAT-ALBANATL-1929-2005-WORM MAX-WGT-g     60000
7         ICCAT-ATBTUNAEATL-1969-2007-WORM MAX-WGT-g    684000
8         ICCAT-ATBTUNAWATL-1969-2007-WORM MAX-WGT-g    684000
9   AFSC-SABLEFEBSAIGA-1956-2008-MELNYCHUK MAX-WGT-g      6200
10           IPHC-PHALNPAC-1988-2009-Parma MAX-WGT-g available
11     AFSC-REYEROCKBSAI-1974-2009-STANTON MAX-WGT-g      2047
12            NEFSC-ATHAL5YZ-1800-2007-COL MAX-WGT-g    337000
13     NEFSC-SCUPNWATLC-1960-2007-TERCEIRO MAX-WGT-g      3000
14     NEFSC-MONKGOMNGB-1964-2006-RICHARDS MAX-WGT-g    337000
15      NEFSC-SURFMATLC-1965-2008-JACOBSON MAX-WGT-g      600+
16   CSERG-ANCHOVYKILKACS-1991-2007-JENSEN MAX-WGT-g      18.4
17        ASMFC-PANDALGOM-1960-2009-IDOINE MAX-WGT-g        23
Variables not shown: bioyear (chr), bionotes (chr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;e03_to_MT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;7.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e-3&lt;/span&gt;

tmpA &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;who$assessid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;total_mt =&lt;/span&gt; total *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e03_to_MT)

everyone_else &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids[!(cod_ids %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;who$assessid)]
tmpB &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;everyone_else) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;total_mt =&lt;/span&gt; total)

std_values &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;bind_rows&lt;/span&gt;(tmpA,tmpB)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Not sure if there is a more consise way to change the values in a given column for a subset of the rows). Well, perhaps it would be simpler to treat non-standard units as missing data, but at least this illustrates a mechanism for handling the conversion.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;biomass &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;std_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(tsyear) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;biomass =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(total_mt, &lt;span class=&quot;dt&quot;&gt;na.rm=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## WARNING -- should check units!
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(biomass &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) 

biomass_dropped &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;everyone_else) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(tsyear) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;biomass =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(total, &lt;span class=&quot;dt&quot;&gt;na.rm=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## WARNING -- should check units!
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(biomass &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) 

biomass_wrong &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(tsyear) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;biomass =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(total, &lt;span class=&quot;dt&quot;&gt;na.rm=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## WARNING -- should check units!
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(biomass &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) 

&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(biomass, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, biomass)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt;biomass_wrong, &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt;biomass_dropped, &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Biomass (MT)&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;)
  
&lt;span class=&quot;co&quot;&gt;# they may look identical but they aren&amp;#39;t:&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(biomass_dropped$biomass, biomass$biomass)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-9-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;In this case, the contribution is negligible (red vs black). Even failing to convert units (blue) makes a hardly visible difference, though in general the difference could have been quite large.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids, total &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, total, &lt;span class=&quot;dt&quot;&gt;color=&lt;/span&gt;assessid)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Biomass (MT)&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Year&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-10-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;stock-recruitment-time-series&quot;&gt;Stock-recruitment &amp;amp; time-series&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]]) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;()
values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid==&lt;span class=&quot;st&quot;&gt;&amp;quot;AFWG-CODNEAR-1943-2006-MINTO&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;()

values %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(r), !&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(ssb)) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;() +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)


values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cod_ids) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(total)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, total)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, ssb), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-11-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-11-2.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-11-3.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-11-4.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Note that the spawning stock biomass, red, can often be significantly less than the total stock (black).&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;herring &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;assessment %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(stock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(commonname==&lt;span class=&quot;st&quot;&gt;&amp;quot;Herring&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unlist&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unname&lt;/span&gt;() &lt;span class=&quot;co&quot;&gt;# we need a char string, not a data.frame&lt;/span&gt;

values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herring) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(r), !&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(ssb)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)

values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herring) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(total)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, total)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, ssb), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-12-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-12-2.png&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;anchovy &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;assessment %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(stock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(commonname==&lt;span class=&quot;st&quot;&gt;&amp;quot;Anchovy&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unlist&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unname&lt;/span&gt;() &lt;span class=&quot;co&quot;&gt;# we need a char string, not a data.frame&lt;/span&gt;

values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;anchovy) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(r), !&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(ssb)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)

values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;anchovy) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(total)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, total)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, ssb), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-13-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-13-2.png&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;bluefin &amp;lt;-
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;assessment %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(stock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(commonname==&lt;span class=&quot;st&quot;&gt;&amp;quot;Atlantic bluefin tuna&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unlist&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;unname&lt;/span&gt;() &lt;span class=&quot;co&quot;&gt;# we need a char string, not a data.frame&lt;/span&gt;

values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bluefin) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(r), !&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(ssb)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssb, r)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)


values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bluefin) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(!&lt;span class=&quot;kw&quot;&gt;is.na&lt;/span&gt;(total)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, total)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, ssb), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~assessid, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-14-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-06-18-RAM-explore/unnamed-chunk-14-2.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Daniel Gp Example</title>
   <link href="http://www.carlboettiger.info/2015/06/16/daniel-gp-example.html"/>
   <updated>2015-06-16T00:00:00+00:00</updated>
   <id>/06/16/daniel-gp-example</id>
   <content type="html">&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Randomly generate some sinusoidal data&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;
y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sin&lt;/span&gt;(x/&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)
ind &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next three lines are the only inputs required.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;xObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[ind]                ## input
yObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[ind]                ## input
xPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(x, &lt;span class=&quot;dv&quot;&gt;101&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;120&lt;/span&gt;)        ## input&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some initial processing&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;nObs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(xObs)
nPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(xPred)
f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;
diffOO &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(xObs,  xObs,  f)
diffPP &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(xPred, xPred, f)
diffPO &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(xPred, xObs,  f)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;nimble-function-for-gp-prediction&quot;&gt;NIMBLE function for GP prediction&lt;/h3&gt;
&lt;p&gt;Here’s the main function for doing the prediction from the GP model.&lt;/p&gt;
&lt;p&gt;It takes the MCMC samples as a &lt;em&gt;runtime&lt;/em&gt; argument, so this can be iterated with running the MCMC for different numbers of iterations, initial values, or even different datasets!&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleFunction&lt;/span&gt;(
    &lt;span class=&quot;dt&quot;&gt;setup =&lt;/span&gt; function(model, params) {
        calcNodes &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;model$&lt;span class=&quot;kw&quot;&gt;getDependencies&lt;/span&gt;(params, &lt;span class=&quot;dt&quot;&gt;determOnly =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
        nPred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(model$SigPP)[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
        E &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(nPred, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
        C &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(nPred, nPred))
    },
    &lt;span class=&quot;dt&quot;&gt;run =&lt;/span&gt; function(&lt;span class=&quot;dt&quot;&gt;samples =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;double&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)) {
        E &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;E *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
        C &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;C *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
        nSamples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(samples)[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
        for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nSamples) {
            &lt;span class=&quot;kw&quot;&gt;values&lt;/span&gt;(model, params) &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[i,]
            &lt;span class=&quot;kw&quot;&gt;calculate&lt;/span&gt;(model, calcNodes)
            intermediate &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;model$SigPO %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;inverse&lt;/span&gt;(model$SigOO)
            Etemp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;intermediate %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;asCol&lt;/span&gt;(model$yObs)
            Ctemp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;model$SigPP -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;intermediate %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(model$SigPO)
            E &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;E +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Etemp
            C &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;C +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Ctemp
        }
        E &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;E /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;nSamples
        C &amp;lt;&amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;C /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;nSamples
    },
    &lt;span class=&quot;dt&quot;&gt;methods =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(
        &lt;span class=&quot;dt&quot;&gt;getE =&lt;/span&gt; function() { &lt;span class=&quot;kw&quot;&gt;returnType&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;double&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)); &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(E[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]) },
        &lt;span class=&quot;dt&quot;&gt;getC =&lt;/span&gt; function() { &lt;span class=&quot;kw&quot;&gt;returnType&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;double&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)); &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(C[, ]) }
    )
)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;gp-model&quot;&gt;GP model&lt;/h3&gt;
&lt;p&gt;GP model defined here. Basically the same as your original, but I renamed some paramters more to my liking =)&lt;/p&gt;
&lt;p&gt;This is &lt;em&gt;not&lt;/em&gt; as elegant as I had hoped. It still requires repeating (essentially) the same code three times. I discovered some limitations of NIMBLE while trying other approaches.&lt;/p&gt;
&lt;p&gt;Bottom line:&lt;br /&gt;- This achieves relatively nice simplicity.&lt;br /&gt;- There’s an efficiency hit to the MCMC sampling, but it doesn’t seem too bad.&lt;br /&gt;- This works.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   rho ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
   sigGP ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
   sigOE ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
   SigOO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs ] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigGP^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*diffOO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs ]/rho^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigOE^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*IOO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs ]
   SigPP[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigGP^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*diffPP[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred]/rho^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigOE^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*IPP[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred]
   SigPO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs ] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigGP^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;*diffPO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nPred,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs ]/rho^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
   yObs[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(mu[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; SigOO[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nObs])
})

constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nObs=&lt;/span&gt;nObs, &lt;span class=&quot;dt&quot;&gt;nPred=&lt;/span&gt;nPred, &lt;span class=&quot;dt&quot;&gt;diffOO=&lt;/span&gt;diffOO, &lt;span class=&quot;dt&quot;&gt;diffPP=&lt;/span&gt;diffPP, &lt;span class=&quot;dt&quot;&gt;diffPO=&lt;/span&gt;diffPO,
                  &lt;span class=&quot;dt&quot;&gt;IOO=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(nObs), &lt;span class=&quot;dt&quot;&gt;IPP=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(nPred), &lt;span class=&quot;dt&quot;&gt;mu=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,nObs))

data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;yObs =&lt;/span&gt; yObs)

inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;rho =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigGP =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigOE =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)

Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(code, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;create-compile-and-run&quot;&gt;Create, compile, and run&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## MCMC specification with no samplers
spec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;nodes =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;)

## this will be used for some checking, and setting up block sampler:
params &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Rmodel$&lt;span class=&quot;kw&quot;&gt;getNodeNames&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;topOnly =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)

## NOTE: the next line shouldn&amp;#39;t work for you, since the MCMC API has changed.
## you can rebuild from source off nimble branch &amp;#39;devel&amp;#39;.
## otherwise, using last public release of NIMBLE (0.3-1), use this line instead:
## spec$addSampler(&amp;#39;RW_block&amp;#39;, control = list(targetNodes = params))
spec$&lt;span class=&quot;kw&quot;&gt;addSampler&lt;/span&gt;(params, &lt;span class=&quot;st&quot;&gt;&amp;#39;RW_block&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] RW_block sampler: rho, sigGP, sigOE,  adaptive: TRUE,  adaptScaleOnly: FALSE,  adaptInterval: 200,  scale: 1,  propCov: identity&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can debate about univariate vs. block sampling at some point.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## MCMC function
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(spec)

## GP prediction function
## also uses the &amp;#39;params&amp;#39; variable for specialization
Rpred &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gpPred&lt;/span&gt;(Rmodel, params)

## compile everything
Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
Cmcmc  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Rmodel)
Cpred  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rpred, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Rmodel)

## MCMC sampling
## 100,000 iterations
&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100000&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 49.068   0.016  49.057 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;About 25 seconds on my computer&lt;/p&gt;
&lt;p&gt;That can be improved if necessary&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples)

## quick check
if(!&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(params, &lt;span class=&quot;kw&quot;&gt;colnames&lt;/span&gt;(samples))) &lt;span class=&quot;kw&quot;&gt;stop&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;problem&amp;#39;&lt;/span&gt;)

## predict from GP model using posterior MCMC samples
&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(Cpred$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(samples))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 64.236   0.000  64.188 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;About 40 seconds on my computer&lt;/p&gt;
&lt;p&gt;Again, could streamline the gpPred() function if necessary&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## extract predictions: E and C
E &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Cpred$&lt;span class=&quot;kw&quot;&gt;getE&lt;/span&gt;()
C &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Cpred$&lt;span class=&quot;kw&quot;&gt;getC&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;output&quot;&gt;Output&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;E&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  [1]  1.048953470  1.063690923  1.056571565  1.025025296  0.967727602
  [6]  0.885088092  0.779046134  0.652750089  0.510403944  0.357145489
 [11]  0.198827230  0.041501513 -0.109026506 -0.247533773 -0.369716151
 [16] -0.472313950 -0.553105378 -0.610874554 -0.645461105 -0.657719603
 [21] -0.649076810 -0.621198765 -0.575868588 -0.514737033 -0.439105417
 [26] -0.349971602 -0.248371381 -0.135451833 -0.012707283  0.117353661
 [31]  0.251084159  0.383920114  0.510567530  0.625303732  0.722419735
 [36]  0.796925448  0.845259818  0.865448082  0.857113606  0.821872152
 [41]  0.763535592  0.687360014  0.599297100  0.505480001  0.411259520
 [46]  0.320288380  0.234175561  0.152695050  0.074286902 -0.003167262
 [51] -0.081466127 -0.161638385 -0.243673849 -0.325876291 -0.404833854
 [56] -0.476477835 -0.536583186 -0.580993801 -0.606153844 -0.609554981
 [61] -0.590206477 -0.548974521 -0.488316837 -0.411928777 -0.324540013
 [66] -0.231641132 -0.139114920 -0.052860394  0.021550784  0.079331411
 [71]  0.117042000  0.132978712  0.127078948  0.100689033  0.056355647
 [76] -0.002485485 -0.071873133 -0.147591543 -0.225248038 -0.300383786
 [81] -0.368679284 -0.425886710 -0.467685571 -0.489815787 -0.488669528
 [86] -0.462038368 -0.409587331 -0.332776473 -0.234523765 -0.119090537
 [91]  0.008395849  0.142692615  0.278921123  0.412628846  0.539726698
 [96]  0.656454950  0.759426449  0.845730518  0.912939607  0.959256645
[101]  0.984015990  0.987978885  0.972988593  0.941606557  0.896909969
[106]  0.842215301  0.780777080  0.715559458  0.649099436  0.583448236
[111]  0.520171088  0.460385520  0.404821033  0.353887176  0.307741235
[116]  0.266350221  0.229544512  0.197062243  0.168584714  0.143763668&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(C)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  [1] 1.2679882 1.2064883 1.1541432 1.1116728 1.0784248 1.0524884
  [7] 1.0317576 1.0147224 1.0007923 0.9900904 0.9827438 0.9787769
 [13] 0.9777564 0.9783522 0.9785871 0.9766328 0.9714366 0.9630053
 [19] 0.9522229 0.9402332 0.9284669 0.9183767 0.9109672 0.9068412
 [25] 0.9062843 0.9093517 0.9158928 0.9254797 0.9372421 0.9497874
 [31] 0.9614992 0.9705821 0.9757483 0.9766685 0.9740220 0.9691475
 [37] 0.9633160 0.9577090 0.9532083 0.9500621 0.9480639 0.9471172
 [43] 0.9473233 0.9485876 0.9506984 0.9530274 0.9546481 0.9549896
 [49] 0.9542985 0.9535398 0.9539394 0.9568409 0.9630692 0.9727686
 [55] 0.9850166 0.9979048 1.0093360 1.0177498 1.0224490 1.0235779
 [61] 1.0216894 1.0172186 1.0108482 1.0037543 0.9975825 0.9940451
 [67] 0.9942810 0.9988192 1.0071728 1.0181157 1.0297591 1.0394083
 [73] 1.0443944 1.0429170 1.0346484 1.0209019 1.0041130 0.9869394
 [79] 0.9713413 0.9580174 0.9466908 0.9370265 0.9291060 0.9233148
 [85] 0.9204774 0.9213396 0.9262437 0.9349512 0.9465634 0.9595347
 [91] 0.9721773 0.9829212 0.9902883 0.9935894 0.9933386 0.9913798
 [97] 0.9906718 0.9946403 1.0070336 1.0312845 1.0694759 1.1218007
[103] 1.1866870 1.2612294 1.3418003 1.4247225 1.5067538 1.5853383
[109] 1.6586720 1.7256456 1.7857277 1.8388290 1.8851737 1.9251909
[115] 1.9594282 1.9884878 2.0129814 2.0334994 2.0505931 2.0647637&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Black dots are the original ‘xObs’ and ‘yObs’&lt;/p&gt;
&lt;p&gt;Red dots are the predictions made at each ‘xPred’&lt;/p&gt;
&lt;p&gt;Red lines are plus/minus one standard error&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-06-16-daniel-gp-example/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Lazy Evaluation Thoughts</title>
   <link href="http://www.carlboettiger.info/2015/06/03/lazy-evaluation-thoughts.html"/>
   <updated>2015-06-03T00:00:00+00:00</updated>
   <id>/06/03/lazy-evaluation-thoughts</id>
   <content type="html">&lt;p&gt;This is just a draft of my reply to Gavin’s &lt;a href=&quot;http://www.fromthebottomoftheheap.net/2015/06/03/my-aversion-to-pipes/&quot;&gt;thought-provoking post&lt;/a&gt; pushing back on pipes and NSE in R.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Gavin, really nice post and discussion here. I am still conflicted about some these issues myself.&lt;/p&gt;
&lt;p&gt;For me, the issues of NSE are somewhat separate and above my concern with pipes. I agree completely with your observation that intermediate assignment is easier to read than nested assignment, and not that much harder to read than a pipe chain. However I also agree with other commenters that not having to think about intermediate assignment variables is nice (e.g. I usually do something like replacing &lt;code&gt;the_data&lt;/code&gt; with &lt;code&gt;tmp&lt;/code&gt; or some such in each occurrence after the first in your example to make this more explicit). But for the most part I do not find the pipe syntax to be problematic in the same way that NSE is – indeed I can use the pipe operator with the SE versions of the same functions, or with any other SE R function.&lt;/p&gt;
&lt;p&gt;NSE to me is a whole different can of worms. It does make the syntax much more consise and more semantic, (even while it obfuscates what is a string, a numeric, or a variable). But this whole “don’t use it in programming” thing seems very impractical to me. When I first started R, I got the same advice – only it was for R itself – use it interactively, but for real programming write everything in C. Then maybe add some R wrappers on top. Um.. yeah, I actually did that for a few years… long ago. Most of the time I don’t even know if I’m programming or not. Sure, it’s easy to use the SE versions when working on some function you know will be part of an R package, but NSE has bitten me several times in various research scripts. Stupid things perhaps – where I have done things like changing a filter argument to a variable with the same name as a column (&lt;code&gt;filter(x == .5)&lt;/code&gt; into a &lt;code&gt;filter(x == x)&lt;/code&gt;) – but very difficult to debug since they do not throw errors.&lt;/p&gt;
&lt;p&gt;Nevertheless, both the performance and consise abstractions of common manipulation tasks make it hard to walk away from &lt;code&gt;dplyr&lt;/code&gt; and friends. However, I find the syntax required to use the SE versions of the dplyr functions immensely cumbersome and opaque (e.g. http://www.carlboettiger.info/2015/02/06/fun-standardizing-non-standard-evaluation.html). Some of these can be written more concisely with a different SE syntax, but having 4 different ways to introduce a variable value, not all of which cover all the same cases, is even worse to me than just sticking with the most complex. No doubt I lack appreciation of the complexity here, but it seems like it should be possible to have a syntax that is nearly as consise as the NSE but where I can replace values with variables (e.g. &lt;code&gt;filter(&amp;quot;Y&amp;quot; == &amp;quot;X&amp;quot;)&lt;/code&gt; to &lt;code&gt;filter(y == x)&lt;/code&gt;) without needing something like&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(query), function(level){
value &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;query[[level]]
&lt;span class=&quot;kw&quot;&gt;interp&lt;/span&gt;(~y ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x, 
&lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as.name&lt;/span&gt;(level), &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; value))
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Anyway, apologies for the rant – just trying to say I share your hesitation regarding NSE but pipes don’t bother me. (I do think lazy eval on pipes is a win btw – e.g. try testing out the same long pipe-string analysis on data coming from a remote database; say, just to check that the first 10 rows of output look right before evaluation the whole database)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Diagrammer</title>
   <link href="http://www.carlboettiger.info/2015/05/15/diagrammer.html"/>
   <updated>2015-05-15T00:00:00+00:00</updated>
   <id>/05/15/diagrammer</id>
   <content type="html">&lt;p&gt;Exploring ways for using &lt;code&gt;DiagrammeR&lt;/code&gt; to generate graphs/plots that can be exported to svg and included in knitr documents.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;devtools::&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;rich-iannone/DiagrammeR&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;DiagrammeR&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;n &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;archive&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;share&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;discover&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;use&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;attribute&amp;quot;&lt;/span&gt;)

nodes &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;create_nodes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nodes =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Repository&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Roles&amp;quot;&lt;/span&gt;, n, &lt;span class=&quot;st&quot;&gt;&amp;quot;Researcher&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt; Roles&amp;quot;&lt;/span&gt;), 
                      &lt;span class=&quot;dt&quot;&gt;shape =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;, 
                      &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;PowderBlue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Linen&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)),
                      &lt;span class=&quot;dt&quot;&gt;style =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;filled&amp;quot;&lt;/span&gt;)
edges &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;create_edges&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;from =&lt;/span&gt; n, 
                      &lt;span class=&quot;dt&quot;&gt;to =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(n[-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], n[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]),
                      &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;penwidth =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)

graph &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;create_graph&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nodes =&lt;/span&gt; nodes, &lt;span class=&quot;dt&quot;&gt;edges =&lt;/span&gt; edges, 
                      &lt;span class=&quot;dt&quot;&gt;graph_attrs =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;layout = circo&amp;quot;&lt;/span&gt;))
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;render_graph&lt;/span&gt;(graph)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Render as SVG&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;basename &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;quot;figure1&amp;quot;&lt;/span&gt;
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;render_graph&lt;/span&gt;(graph, &lt;span class=&quot;dt&quot;&gt;output =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;SVG&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;writeLines&lt;/span&gt;(out, &lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.svg&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Render as pdf, for inculsion in pdf/tex files.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Not Run
&lt;span class=&quot;kw&quot;&gt;system&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;inkscape --export-png &amp;quot;&lt;/span&gt;, basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.png&amp;quot;&lt;/span&gt;, 
&lt;span class=&quot;co&quot;&gt;#              &amp;quot;-w &amp;quot;, width, &amp;quot; -h &amp;quot;, height, &lt;/span&gt;
              &lt;span class=&quot;st&quot;&gt;&amp;quot; --export-dpi 300 &amp;quot;&lt;/span&gt;, 
              basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.svg&amp;quot;&lt;/span&gt;)) 

&lt;span class=&quot;kw&quot;&gt;system&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;inkscape --export-pdf &amp;quot;&lt;/span&gt;, basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.pdf &amp;quot;&lt;/span&gt;, basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.svg&amp;quot;&lt;/span&gt;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Embed in post? maybe? This could be more elegant:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(basename, &lt;span class=&quot;st&quot;&gt;&amp;quot;.svg&amp;quot;&lt;/span&gt;)
target &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(knitr::opts_chunk$&lt;span class=&quot;kw&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;fig.path&amp;quot;&lt;/span&gt;), f)
&lt;span class=&quot;kw&quot;&gt;file.rename&lt;/span&gt;(f, target)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;![](&amp;quot;&lt;/span&gt;, target, &lt;span class=&quot;st&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Gp Compare</title>
   <link href="http://www.carlboettiger.info/2015/05/13/GP-compare.html"/>
   <updated>2015-05-13T00:00:00+00:00</updated>
   <id>/05/13/GP-compare</id>
   <content type="html">&lt;p&gt;Original go at nimble gp model, but this requires rather manual manipulation of parameter posteriors to get the GP posteriors.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;MASS&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;mcmc&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nonparametricbayes&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;pdgControl&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;sample-data&quot;&gt;sample data&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;)
Tobs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;
f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;RickerAllee
sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;
z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)
h_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x_grid
profit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x,h) &lt;span class=&quot;kw&quot;&gt;pmin&lt;/span&gt;(x, h)
delta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.01&lt;/span&gt;
OptTime &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# stationarity with unstable models is tricky thing&lt;/span&gt;
xT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;co&quot;&gt;# terminal condition&lt;/span&gt;
x0 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;co&quot;&gt;# simulation under policy starts from&lt;/span&gt;
MaxT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# timeout for value iteration convergence&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(Tobs)
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;
nz &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;))
  x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;z_g&lt;/span&gt;() *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x[t], &lt;span class=&quot;dt&quot;&gt;h=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;p=&lt;/span&gt;p)
obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,nz), 
                        &lt;span class=&quot;kw&quot;&gt;pmax&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;), x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(Tobs&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)])), 
                  &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,nz), 
                        x[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:Tobs]))
&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;time =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:Tobs, &lt;span class=&quot;dt&quot;&gt;x=&lt;/span&gt;x), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(time,x)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-13-GP-compare/unnamed-chunk-4-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;gp-model&quot;&gt;GP Model&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({

   l ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) 
   sigma.n ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
   sigma.k  ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
   Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.k ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;diff[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                      &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]
   y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(Mu[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N])  

})&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
diff &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(obs$x, obs$x, function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;diff =&lt;/span&gt; diff, &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.k =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define our mcmc procedure in Nimble&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Rmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
226.792   0.456 227.077 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_log10&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-13-GP-compare/unnamed-chunk-11-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;calculating-transition-probabilities&quot;&gt;Calculating transition probabilities&lt;/h2&gt;
&lt;p&gt;Several ways we might go about this.&lt;/p&gt;
&lt;p&gt;Technically all policies could be updated in response to new information, though this requires repeating the estimation process, or at least a Bayesian updating step (e.g. passive learning). Typically these steps are separated into estimating the policy and then implementing the policy separately, so we will focus on this case.&lt;/p&gt;
&lt;p&gt;The transition probability is conditional&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Should be able to extract this from nimble...
predict &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
function (posteriors, obs, x_predict) {
    out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(posteriors)), 
      function(sample) {
      
        l &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sample[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
        sigma.k &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sample[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]
        sigma.n &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sample[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]
       
        
        SE &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function (Xi, Xj, l) sigma.k *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(Xi -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Xj) ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
        cov &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(X, Y) &lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(X, Y, SE, l)
            
        cov_xx_inv &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;solve&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(obs$x, obs$x) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)))
        Ef &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(x_predict, obs$x) %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cov_xx_inv %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;obs$y
        Cf &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(x_predict, x_predict) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(x_predict, obs$x) %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;            &lt;/span&gt;cov_xx_inv %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(obs$x, x_predict)
        &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Ef =&lt;/span&gt; Ef, &lt;span class=&quot;dt&quot;&gt;Cf =&lt;/span&gt; Cf, &lt;span class=&quot;dt&quot;&gt;Vf =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(Cf))
    })
    Ef_posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(out, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Ef&amp;quot;&lt;/span&gt;)
    Cf_posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(out, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Cf&amp;quot;&lt;/span&gt;)
    Vf_posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(out, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Vf&amp;quot;&lt;/span&gt;)
    E_Ef &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rowMeans&lt;/span&gt;(Ef_posterior)
    E_Cf &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(Cf_posterior, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, sum)/&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(Cf_posterior)[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], 
        &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(Cf_posterior)[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
    E_Vf &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(E_Cf)
    Cf_posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(out, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Cf&amp;quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Ef_posterior =&lt;/span&gt; Ef_posterior, &lt;span class=&quot;dt&quot;&gt;Vf_posterior =&lt;/span&gt; Vf_posterior, 
        &lt;span class=&quot;dt&quot;&gt;Cf_posterior =&lt;/span&gt; Cf_posterior, &lt;span class=&quot;dt&quot;&gt;E_Ef =&lt;/span&gt; E_Ef, &lt;span class=&quot;dt&quot;&gt;E_Cf =&lt;/span&gt; E_Cf, 
        &lt;span class=&quot;dt&quot;&gt;E_Vf =&lt;/span&gt; E_Vf)
}

gp_posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;predict&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample_n&lt;/span&gt;(samples, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;), obs, x_grid)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;matrices_gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_transition_matrix&lt;/span&gt;(gp_posterior$Ef_posterior, gp_posterior$Vf_posterior, x_grid, h_grid) 
opt_gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(matrices_gp, x_grid, h_grid, MaxT, xT, profit, delta, reward)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error: object &amp;#39;reward&amp;#39; not found&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;comparison&quot;&gt;Comparison&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;s2.p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)  
d.p =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)
gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_mcmc&lt;/span&gt;(obs$x, &lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;obs$y, &lt;span class=&quot;dt&quot;&gt;n=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;s2.p =&lt;/span&gt; s2.p, &lt;span class=&quot;dt&quot;&gt;d.p =&lt;/span&gt; d.p)
gp_dat &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_predict&lt;/span&gt;(gp, x_grid, &lt;span class=&quot;dt&quot;&gt;burnin=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;300&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;matrices_gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gp_transition_matrix&lt;/span&gt;(gp_dat$Ef_posterior, gp_dat$Vf_posterior, x_grid, h_grid) 
opt_gp &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(matrices_gp, x_grid, h_grid, MaxT, xT, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;matrices_true &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f_transition_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g)
opt_true &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(matrices_true, x_grid, h_grid, &lt;span class=&quot;dt&quot;&gt;OptTime=&lt;/span&gt;MaxT, xT, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;policy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;GP =&lt;/span&gt; opt_gp$D, &lt;span class=&quot;dt&quot;&gt;exact =&lt;/span&gt; opt_true$D)
sets &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;expand.grid&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;reps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;exact&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;GP&amp;quot;&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(reps, model)

sim_fn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df){
  &lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(df$reps)
  &lt;span class=&quot;kw&quot;&gt;ForwardSimulate&lt;/span&gt;(f, p, x_grid, h_grid, x0, 
                  &lt;span class=&quot;dt&quot;&gt;D =&lt;/span&gt; policy[[&lt;span class=&quot;kw&quot;&gt;as.character&lt;/span&gt;(df$model)]], 
                  z_g, &lt;span class=&quot;dt&quot;&gt;profit=&lt;/span&gt;profit, &lt;span class=&quot;dt&quot;&gt;OptTime =&lt;/span&gt; OptTime)
  
}
sims &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sets %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sim_fn&lt;/span&gt;(.))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;colorkey &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;#000000&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#E69F00&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#56B4E9&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#009E73&amp;quot;&lt;/span&gt;, 
               &lt;span class=&quot;st&quot;&gt;&amp;quot;#F0E442&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#0072B2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#D55E00&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;#CC79A7&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(sims) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(time, fishstock, &lt;span class=&quot;dt&quot;&gt;group=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;interaction&lt;/span&gt;(reps,model), &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;model), &lt;span class=&quot;dt&quot;&gt;alpha=&lt;/span&gt;.&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~model) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_colour_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values=&lt;/span&gt;colorkey, &lt;span class=&quot;dt&quot;&gt;guide=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-13-GP-compare/unnamed-chunk-16-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;policies_plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(policy){
  policy_df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;GP&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;exact&amp;quot;&lt;/span&gt;))  %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(model) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;stock =&lt;/span&gt; x_grid, 
                  &lt;span class=&quot;dt&quot;&gt;escapement =&lt;/span&gt; x_grid -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h_grid[policy[[&lt;span class=&quot;kw&quot;&gt;as.character&lt;/span&gt;(.$model)]]]))

  &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(policy_df, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(stock, escapement, &lt;span class=&quot;dt&quot;&gt;color=&lt;/span&gt;model)) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~model) +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;stock size, x(t)&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;escapement, S(t)&amp;quot;&lt;/span&gt;)  +
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_colour_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values=&lt;/span&gt;colorkey, &lt;span class=&quot;dt&quot;&gt;guide=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
}

&lt;span class=&quot;kw&quot;&gt;policies_plot&lt;/span&gt;(policy)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-13-GP-compare/unnamed-chunk-17-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sims %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;net_profit =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(profit)) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sims&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Ram Legacy Database Explore</title>
   <link href="http://www.carlboettiger.info/2015/05/08/ram-legacy-database-explore.html"/>
   <updated>2015-05-08T00:00:00+00:00</updated>
   <id>/05/08/ram-legacy-database-explore</id>
   <content type="html">&lt;h2 id=&quot;accessing-the-database&quot;&gt;Accessing the database&lt;/h2&gt;
&lt;p&gt;Connect to the database (connection info is &lt;a href=&quot;http://ramlegacy.marinebiodiversity.ca/ram-legacy-stock-assessment-database/accessing-the-live-database&quot;&gt;public&lt;/a&gt;), works fine:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;RPostgreSQL&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mydb &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;src_postgres&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dbname =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;srdb&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;host=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;nautilus-vm.mathstat.dal.ca&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;user =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;srdbuser&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;password =&lt;/span&gt;  &lt;span class=&quot;st&quot;&gt;&amp;quot;srd6us3r!&amp;quot;&lt;/span&gt;, 
                     &lt;span class=&quot;dt&quot;&gt;port =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5432&lt;/span&gt;)
mydb&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;src:  postgres 8.4.10 [srdbuser@nautilus-vm.mathstat.dal.ca:5432/srdb]
tbls: area, assessment, assessmethod, assessor, biometrics,
  bioparams, brptots, fishbasesaupcodes, geometry_columns, lmerefs,
  lmes, lmetostocks, management, mostrecent, recorder, referencedoc,
  reference_point_units_view, reference_point_values_view, risfields,
  risfieldvalues, spatial_ref_sys, stock, taxonomy, timeseries,
  timeseries_units_view, timeseries_values_view, tsmetrics,
  tsrelative_explicit_view&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the expected mechanism for accessing a complete table seems to fail:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;st&quot;&gt;&amp;quot;stock&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error in postgresqlExecStatement(conn, statement, ...): RS-DBI driver: (could not Retrieve the result : ERROR:  relation &amp;quot;stock&amp;quot; does not exist
LINE 1: SELECT * FROM &amp;quot;stock&amp;quot; WHERE 0=1
                      ^
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Filed as a bug report in &lt;a href=&quot;https://github.com/rstats-db/RPostgres/issues/32&quot;&gt;RPostgres/#32&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Meanwhile, direct sql queries work (note we need the full table address, e.g. &lt;code&gt;dbname.tablename&lt;/code&gt;.)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.stock&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: postgres 8.4.10 [srdbuser@nautilus-vm.mathstat.dal.ca:5432/srdb]
From: &amp;lt;derived table&amp;gt; [?? x 8]

      stockid    tsn scientificname   commonname
1        COD1 164712   Gadus morhua Atlantic cod
2    COD2J3KL 164712   Gadus morhua Atlantic cod
3  COD2J3KLIS 164712   Gadus morhua Atlantic cod
4       COD3M 164712   Gadus morhua Atlantic cod
5      COD3NO 164712   Gadus morhua Atlantic cod
6      COD3Ps 164712   Gadus morhua Atlantic cod
7   COD3Pn4RS 164712   Gadus morhua Atlantic cod
8       COD4T 164712   Gadus morhua Atlantic cod
9     COD4VsW 164712   Gadus morhua Atlantic cod
10    COD4TVn 164712   Gadus morhua Atlantic cod
..        ...    ...            ...          ...
Variables not shown: areaid (chr), stocklong (chr), inmyersdb (int),
  myersstockid (chr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since these tables easily fit into memory, it is generally faster to just import them into R rather than leaving &lt;code&gt;dplyr&lt;/code&gt; to just work with them remotely. The &lt;code&gt;dplyr::collect()&lt;/code&gt; function does this. So we create local copies of each table of interest like so:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;timeseries &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries&amp;quot;&lt;/span&gt;)))
values &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries_values_view&amp;quot;&lt;/span&gt;)))

units &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.timeseries_units_view&amp;quot;&lt;/span&gt;)))
assessment &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessment&amp;quot;&lt;/span&gt;)))
area &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.area&amp;quot;&lt;/span&gt;)))
stock &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.stock&amp;quot;&lt;/span&gt;)))
method &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessmethod&amp;quot;&lt;/span&gt;)))
assessor &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.assessor&amp;quot;&lt;/span&gt;)))
management  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.management&amp;quot;&lt;/span&gt;)))
taxonomy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.taxonomy&amp;quot;&lt;/span&gt;)))

lmerefs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.lmerefs&amp;quot;&lt;/span&gt;)))
lmestock &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.lmetostocks&amp;quot;&lt;/span&gt;)))


biometrics  &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.biometrics&amp;quot;&lt;/span&gt;)))
bioparams &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.bioparams&amp;quot;&lt;/span&gt;)))

tsmetrics &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;collect&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;tbl&lt;/span&gt;(mydb, &lt;span class=&quot;kw&quot;&gt;sql&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SELECT * FROM srdb.tsmetrics&amp;quot;&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Many of the tables contain observations of variables that describe each given assessment (&lt;code&gt;assessid&lt;/code&gt;), including the species &lt;code&gt;stock&lt;/code&gt; assessed, &lt;code&gt;area&lt;/code&gt; assessed, the method used, and so forth. Since these all follow the same schema of a row being a unique stock assessment and a column being an attribute of that assessment, it makes sense to combine this into a single metadata table. (Especially as these datasets fit so easily into memory anyway.)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;meta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;assessment %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;methodshort =&lt;/span&gt; assessmethod) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(method) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(stock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(area) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(units) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(assessor) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(management) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(taxonomy) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;all_areas &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;stock %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(stockid, areaid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(area) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;right_join&lt;/span&gt;(lmestock) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(lmerefs)

&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(all_areas, function(x) &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;levels&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(x))))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;           stockid             areaid            country 
               391                174                 10 
          areatype           areacode           areaname 
                24                167                167 
 alternateareaname         lme_number stocktolmerelation 
                 5                 34                  5 
          lme_name 
                34 &lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bioparams&lt;/code&gt;: Fixed parameter values of a study.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;biometrics&lt;/code&gt;: definitions of said parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The column is called &lt;code&gt;biounique&lt;/code&gt; in &lt;code&gt;biometrics&lt;/code&gt; table but &lt;code&gt;bioid&lt;/code&gt; in &lt;code&gt;bioparams&lt;/code&gt; table, so we fix that:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;parameters &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;biometrics %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;bioid =&lt;/span&gt; biounique) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(bioparams) &lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tsmetrics&lt;/code&gt; defines the factor levels and the units used in &lt;code&gt;timeseries&lt;/code&gt; &lt;code&gt;tsid&lt;/code&gt; column.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;tsmetrics &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tsmetrics %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;tsid =&lt;/span&gt; tsunique)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example, we can see what measurements are available&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ids &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;NWFSC-COWCODSCAL-1900-2007-BRANCH&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt;(tsid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(tsid)
ids&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [7 x 1]

      tsid
1   SSB-MT
2    R-E03
3   F-1/yr
4    TB-MT
5    TC-MT
6    TL-MT
7 STB1+-MT&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking up these ids in the &lt;code&gt;tsmetrics&lt;/code&gt; table tells us what these seven time series are:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;inner_join&lt;/span&gt;(ids, tsmetrics) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(tsshort, tslong, tsunitsshort, tsunitslong)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [7 x 4]

  tsshort
1     SSB
2       R
3       F
4      TB
5      TC
6      TL
7   STB1+
Variables not shown: tslong (chr), tsunitsshort (chr), tsunitslong
  (chr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;cowcod &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;NWFSC-COWCODSCAL-1900-2007-BRANCH&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(tsmetrics) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(tsyear, tsvalue, &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;tsid)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;() 
cowcod&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-08-ram-legacy-database-explore/unnamed-chunk-12-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;cowcod +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_log10&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-05-08-ram-legacy-database-explore/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;(Note TC (total catch) and TL (total landings) are equivalent in this context, implying neglible discards.)&lt;/p&gt;
&lt;p&gt;Unfortunately, there is a lot of heterogeneity in the metrics measured by each assessment: &lt;code&gt;tsmetrics&lt;/code&gt; defines 151 units, (though only 93 appear in timeseries)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;unique&lt;/span&gt;(tsmetrics$tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 151&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;table&lt;/span&gt;(timeseries$tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 93&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most are variations differing only by units, as we see from the most commonly used metrics:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(tsid) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt;(assessid) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summarize&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;occurs =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;n&lt;/span&gt;()) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;left_join&lt;/span&gt;(tsmetrics) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;arrange&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;desc&lt;/span&gt;(occurs)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(tsid, tslong, tsunitsshort, occurs)
unit_occurs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [93 x 4]

                      tsid
1                    TB-MT
2                   SSB-MT
3                    R-E03
4                    TC-MT
5                    TL-MT
6                    F-1/T
7                   F-1/yr
8                 ER-ratio
9  Yield-SSB-dimensionless
10                 YEAR-yr
..                     ...
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are all variations of the same several variables, but measured in different units. For instance, we see many series use a catch to biomass ratio (ER) instead of a fishing mortality.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;grepl&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;^SSB&amp;quot;&lt;/span&gt;, tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [12 x 4]

                tsid
1             SSB-MT
2        SSB-E03eggs
3      SSB-STDDEV-MT
4           SSB-1-MT
5           SSB-2-MT
6       SSB-relative
7            SSB-E03
8      SSB-E06larvae
9           SSB-3-MT
10          SSB-4-MT
11     SSB-E03pertow
12 SSB-FemaleGonadMT
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;grepl&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;^R&amp;quot;&lt;/span&gt;, tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [7 x 4]

        tsid
1      R-E03
2    R-1-E03
3    R-2-E03
4       R-MT
5 R-relative
6    R-3-E03
7    R-4-E03
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;grepl&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;^TC&amp;quot;&lt;/span&gt;, tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [7 x 4]

      tsid
1    TC-MT
2   TC-E03
3   TC-E00
4 TC-1-E03
5  TC-1-MT
6  TC-2-MT
7 TC-2-E03
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;grepl&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;^TL&amp;quot;&lt;/span&gt;, tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [5 x 4]

     tsid
1   TL-MT
2 TL-1-MT
3 TL-2-MT
4 TL-3-MT
5  TL-E00
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;unit_occurs %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;grepl&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;^CPUE&amp;quot;&lt;/span&gt;, tsid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [10 x 4]

                   tsid
1         CPUE-kgpertow
2       CPUEstand-1-C/E
3       CPUEstand-2-C/E
4         CPUEstand-C/E
5           CPUEraw-C/E
6       CPUEstand-3-C/E
7       CPUEstand-4-C/E
8  CPUEsmooth-E00pertow
9       CPUEstand-5-C/E
10      CPUEstand-6-C/E
Variables not shown: tslong (chr), tsunitsshort (chr), occurs (int)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;values&lt;/code&gt; table appears to be derived from the &lt;code&gt;timeseries&lt;/code&gt; table, presumably standardizing on consistent metrics(?)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;values&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [16,308 x 9]

                        assessid tsyear pt_avail       ssb       r
1  ADFG-HERRPWS-1980-2006-COLLIE   1980        5  48270.35  414070
2  ADFG-HERRPWS-1980-2006-COLLIE   1981        5  51090.88  335200
3  ADFG-HERRPWS-1980-2006-COLLIE   1982        5  47402.54  112300
4  ADFG-HERRPWS-1980-2006-COLLIE   1983        5  56449.01  103740
5  ADFG-HERRPWS-1980-2006-COLLIE   1984        5  64461.28 1062360
6  ADFG-HERRPWS-1980-2006-COLLIE   1985        5  79124.61   99630
7  ADFG-HERRPWS-1980-2006-COLLIE   1986        5  65601.06   74880
8  ADFG-HERRPWS-1980-2006-COLLIE   1987        5  70646.42   84820
9  ADFG-HERRPWS-1980-2006-COLLIE   1988        5  93508.20 1006440
10 ADFG-HERRPWS-1980-2006-COLLIE   1989        5 105135.41  119970
..                           ...    ...      ...       ...     ...
Variables not shown: total (dbl), f (dbl), cpue (dbl), catch_landings
  (dbl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see this by transforming our example:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;NWFSC-COWCODSCAL-1900-2007-BRANCH&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;spread&lt;/span&gt;(tsid, tsvalue) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;ssb=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;SSB-MT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;r =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;R-E03&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;total =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;TB-MT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;f =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;F-1/yr&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;catch_landings =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;TL-MT&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, tsyear, ssb, r, total, f, catch_landings)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which is indeed identical to corresponding assessment in the &lt;code&gt;values&lt;/code&gt; table&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;NWFSC-COWCODSCAL-1900-2007-BRANCH&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(-pt_avail, -cpue)
&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(x,y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what happens when the units differ?&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(tsid==&lt;span class=&quot;st&quot;&gt;&amp;quot;SSB-E03eggs&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;assessid&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [1 x 5]

                               assessid        tsid tsyear  tsvalue
1 TAFI-TASGIANTCRABTAS-1990-2007-JENSEN SSB-E03eggs   1998 188.9256
Variables not shown: &amp;quot;assessid&amp;quot; (chr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;timeseries %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;TAFI-TASGIANTCRABTAS-1990-2007-JENSEN&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;spread&lt;/span&gt;(tsid, tsvalue) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;ssb=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;SSB-E03eggs&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;)

y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(assessid ==&lt;span class=&quot;st&quot;&gt; &amp;quot;TAFI-TASGIANTCRABTAS-1990-2007-JENSEN&amp;quot;&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(ssb)
&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(x,y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No transformation has been done, hence the units of the &lt;code&gt;values&lt;/code&gt; columns vary depending on the assessment id. Nonetheless it is quite useful to have the metrics split into their corresponding 5 types rather than as 93 unique subtypes. As long as we are not comparing magnitudes across different assessments directly though, this should not be an issue.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;It would probably be useful to reconstruct the code to generate the &lt;code&gt;values&lt;/code&gt; table from the timeseries table directly. One might hope that the mappings between &lt;code&gt;tsid&lt;/code&gt; values and the five column headings in the &lt;code&gt;values&lt;/code&gt; table would be defined in the database, e.g. in perhaps the &lt;code&gt;tscategory&lt;/code&gt; column of &lt;code&gt;tsmetrics&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;unique&lt;/span&gt;(tsmetrics$tscategory)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;FISHING MORTALITY&amp;quot;                                                            
[2] &amp;quot;TOTAL BIOMASS&amp;quot;                                                                
[3] &amp;quot;TIME UNITS&amp;quot;                                                                   
[4] &amp;quot;SPAWNING STOCK BIOMASS or CPUE&amp;quot;                                               
[5] &amp;quot;RECRUITS (NOTE: RECRUITS ARE OFFSET IN TIME SERIES BY THE AGE OF RECRUITMENT)&amp;quot;
[6] &amp;quot;CATCH or LANDINGS&amp;quot;                                                            
[7] &amp;quot;OTHER TIME SERIES DATA&amp;quot;                                                       &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but alas this does not quite appear to be the case (e.g. CPUE and SSB are a single category.) Some combination of this information and splitting on the &lt;code&gt;tsid&lt;/code&gt; strings would probably suffice.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ts &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;meta %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(assessid, commonname) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;right_join&lt;/span&gt;(values)&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Rfishbase Notes</title>
   <link href="http://www.carlboettiger.info/2015/04/28/rfishbase-notes.html"/>
   <updated>2015-04-28T00:00:00+00:00</updated>
   <id>/04/28/rfishbase-notes</id>
   <content type="html">&lt;h3 id=&quot;kalman-filtering&quot;&gt;kalman filtering&lt;/h3&gt;
&lt;h3 id=&quot;updates-to-drat-repo&quot;&gt;updates to drat repo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;rescript personal deploy.R script&lt;/li&gt;
&lt;li&gt;pull request&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;rfishbase&quot;&gt;rfishbase&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rfishbase&lt;/code&gt; queries from users: getting “Resilience,” “Vulnerability” and “Price Category” data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;species_info&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fields =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SpecCode&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Vulnerability&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;PriceCateg&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It so happens that “Resilience” is not in that table, but in the “stocks” table instead:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stocks&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fields=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SpecCode&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Resilience&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now merge the results:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;merge&lt;/span&gt;(x,y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In general, you can see a list of all the columns in a given table by just omitting the “fields” argument:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;species_info&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the nearly 100 columns don’t fit in the page, the function just summarizes the column names for the ones that don’t fit. You can read through that list and spot the words “Vulnerability” and “PriceCateg”, and then use them in the ‘fields’ argument to just get those results.&lt;/p&gt;
&lt;p&gt;Note that all of these functions can take a long list of species names instead of a single species, and thus will return a table with a row for each species and the desired columns.&lt;/p&gt;
&lt;p&gt;Also note that we use “SpecCode”, the species code, to identify a species on fishbase. You can use the function “speciesnames” to transform this numeric code into a species name; e.g.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;data$SpecCode &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;speciesnames&lt;/span&gt;(data$SpecCode)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Improved sql helper script recipe.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;searching-sql-for-a-field&quot;&gt;searching SQL for a field&lt;/h4&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt; table_name &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.columns &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; column_name &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;st&quot;&gt;&amp;#39;Resilience&amp;#39;&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; table_schema=&lt;span class=&quot;st&quot;&gt;&amp;#39;fbapp&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then we can do the usual&lt;/p&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;describe stocks&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes</title>
   <link href="http://www.carlboettiger.info/2015/04/28/notes.html"/>
   <updated>2015-04-28T00:00:00+00:00</updated>
   <id>/04/28/notes</id>
   <content type="html">&lt;h3 id=&quot;updates-to-drat-repo&quot;&gt;updates to drat repo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;rescript personal deploy.R script&lt;/li&gt;
&lt;li&gt;pull request&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;rfishbase&quot;&gt;rfishbase&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rfishbase&lt;/code&gt; queries from users: getting “Resilience,” “Vulnerability” and “Price Category” data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;species_info&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fields =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SpecCode&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Vulnerability&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;PriceCateg&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It so happens that “Resilience” is not in that table, but in the “stocks” table instead:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stocks&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fields=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SpecCode&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Resilience&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can now merge the results:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;merge&lt;/span&gt;(x,y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In general, you can see a list of all the columns in a given table by just omitting the “fields” argument:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;species_info&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Labroides bicolor&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since the nearly 100 columns don’t fit in the page, the function just summarizes the column names for the ones that don’t fit. You can read through that list and spot the words “Vulnerability” and “PriceCateg”, and then use them in the ‘fields’ argument to just get those results.&lt;/p&gt;
&lt;p&gt;Note that all of these functions can take a long list of species names instead of a single species, and thus will return a table with a row for each species and the desired columns.&lt;/p&gt;
&lt;p&gt;Also note that we use “SpecCode”, the species code, to identify a species on fishbase. You can use the function “speciesnames” to transform this numeric code into a species name; e.g.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;data$SpecCode &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;speciesnames&lt;/span&gt;(data$SpecCode)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Improved sql helper script recipe.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;searching-sql-for-a-field&quot;&gt;searching SQL for a field&lt;/h4&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;distinct&lt;/span&gt; table_name &lt;span class=&quot;kw&quot;&gt;from&lt;/span&gt; information_schema.columns &lt;span class=&quot;kw&quot;&gt;where&lt;/span&gt; column_name &lt;span class=&quot;kw&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;st&quot;&gt;&amp;#39;Resilience&amp;#39;&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;and&lt;/span&gt; table_schema=&lt;span class=&quot;st&quot;&gt;&amp;#39;fbapp&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then we can do the usual&lt;/p&gt;
&lt;pre class=&quot;sourceCode sql&quot;&gt;&lt;code class=&quot;sourceCode sql&quot;&gt;describe stocks&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Open Science Post Doc</title>
   <link href="http://www.carlboettiger.info/2015/04/20/open-science-post-doc.html"/>
   <updated>2015-04-20T00:00:00+00:00</updated>
   <id>/04/20/open-science-post-doc</id>
   <content type="html">&lt;p&gt;This post is a response to the query posted by Titus Brown on &lt;a href=&quot;http://ivory.idyll.org/blog/2015-how-to-find-openscience-advisor.html&quot;&gt;advice for doing an Open Science Post doc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Open Science is a broad tent, and I believe there are many ways to engage in open science without crossing boundaries of collaborators or PIs. Some of the most valuable open science practices are those least likely to cross boundaries: in particular, those practices associated with post-publication of academic papers. Many widely regarded journals, including &lt;em&gt;Nature&lt;/em&gt; and &lt;em&gt;Science&lt;/em&gt;, have relatively strong data publication requirements, increasingly strong code publication expectations, and are compatible with the use of pre-print archives. Yes, their are those who would hesitate even to comply with the most minimal interpretation of these expectations; but there are many more who, given the expectation to do this at all, would appreciate your knowledge and effort on doing these things well and consistent with best practices. Using data repositories instead of supplemental material; exhibiting good management of data and code; providing good metadata in consistent formats; citing software and data appropriately.&lt;/p&gt;
&lt;p&gt;Many of the practices promoted by open scientists work almost as well in a setting that is closed until you ‘flip the switch’ to make them public; even if that is long after publication. Good data management, a private Github repository, or a private electronic lab notebook are all ways to leverage best practices tools and approaches in a setting that can either be shared securely or made open later. Attitudes to post-publication sharing are rarely black-and-white, and having everything curated and ready to go ahead of time can help nudge collaborators in the direction of best practices.&lt;/p&gt;
&lt;p&gt;I’ve been a post-doc for just over 2 years while enjoying a relatively open-science approach to my research: I’ve kept an open lab notebook, posted my papers ahead of publication on pre-print archives, released code, data, and knitr versions of my papers, discuss my work on social media, sign reviews, shared grant applications, contributed open source software and been active in open science communities.&lt;/p&gt;
&lt;p&gt;I was fortunate to have independent funding for most but not all of my post-doc, and to work in a field where researchers are often given substantial independence and in which open practices are common. Nonetheless these were not practices shared by either of my two excellent co-advisers, who gave only a neutral or vaguely positive response to these ideas.&lt;/p&gt;
&lt;p&gt;Nevertheless, I learned more about &lt;em&gt;old-school&lt;/em&gt; open science from them than I had ever imagined. When I sent Marc the first draft of our paper, I had buried almost all of the equations in a curt appendix with minimal and jargon-laden supporting text. No sir, those equations not only had to appear in the main text, but I must endeavor to explain the meaning and relevance of each one in a language clear and concise enough for any ecologist to follow. I won’t claim to have succeeded, but boy did continuous integration on my unit tests feel like a low bar for openness by comparison.&lt;/p&gt;
&lt;p&gt;Meanwhile, I also felt I had the support and mentorship of an online community of open scientists even without going to work for one of them. I am thankful that my mentors have always been tolerant of my open science experimentation, but I would have enjoyed working with them even if it had been otherwise. There was much to learn from them, much to learn from the open science community, and after all, a post-doc position doesn’t last forever.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Misc Notes On Cloud Providers</title>
   <link href="http://www.carlboettiger.info/2015/04/15/misc-notes-on-cloud-providers.html"/>
   <updated>2015-04-15T00:00:00+00:00</updated>
   <id>/04/15/misc-notes-on-cloud-providers</id>
   <content type="html">&lt;p&gt;&lt;em&gt;ongoing notes comparing computing resources&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Comparing compute resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS EC2, DigitalOcean, and Google Compute Engine look significantly cheaper than Rackspace, Azure, etc. (The Economist has estimated that AWS EC2 prices are roughly 3% &lt;em&gt;below&lt;/em&gt; cost).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DigitalOcean tends to have the lowest price point for on-demand use of a given set of resources; usually comparable to the Amazon or EC2 persistent (e.g. monthly) use. All-inclusive pricing (storage, networking etc) and limited options make choices simple and total costs easy to anticipate, though lack the flexibility to fine-tune a configuration to pay for exactly what you need.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google offers the best rate for higher-cpu instances, (e.g. 16 cores); primarily by provisioning them with less memory (0.9 GB/core) than DO or EC2.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google configures disk space separately from instance type. Cost of $0.04 per GB for spinning disk storage, is quite a bit cheaper than the ~ $0.10/GB for AWS EBS, and in fact nearly S3 price ~ $0.03. This makes it a potentially compelling platform for high storage, low compute instances.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Presumably this is non-local storage like EBS, since they also offer a (very expensive) local SSD option (limited to 375 GB increments, each inc at $81.75 / mo). Though if the non-local nature creates a significant latency, it isn’t clear why one would buy non-local SSD option for $0.17/GB.&lt;/p&gt;
&lt;h2 id=&quot;using-google-compute-engine&quot;&gt;Using Google Compute Engine&lt;/h2&gt;
&lt;p&gt;Web interface is cleaner but much less flexible than Amazon’s, most tasks must be done with the commandline SDK tool instead, &lt;code&gt;gcloud&lt;/code&gt; (such as modifying firewall settings other than port 80 and port 443). For instance, &lt;a href=&quot;https://developer.ubuntu.com/en/snappy/start/#snappy-google&quot;&gt;this tutorial&lt;/a&gt; on running an Ubuntu Snappy Core image instead of the usual defaults.&lt;/p&gt;
&lt;p&gt;Docker-machine makes this a bit easier, as usual. The user needs to create a project name and project id on the Google Cloud Engine web interface. Only the project-name is required as an argument to docker-machine (e.g. no authentication token), auth must be done interactively through a web terminal. It doesn’t seem that there is a way to turn on &lt;code&gt;http&lt;/code&gt; port or otherwise configure the firewall. By default, all inbound ports are shut. By mapping to port &lt;code&gt;80&lt;/code&gt; and checking ‘allow http’ in the web interface one can still access an app like RStudio-server (my mapping docker ports appropriately), but there doesn’t seem to be any way to automate this. (In contrast, with Amazon EC2, docker-machine automatically attaches a ‘security-group’ called &lt;code&gt;docker-machine&lt;/code&gt;, so a user can customize the ports permitted on that security group to have, e.g. 8787 open by default.)&lt;/p&gt;
&lt;h2 id=&quot;performance-comparisons&quot;&gt;Performance comparisons&lt;/h2&gt;
&lt;p&gt;CPU performance varies within a single provider.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DO CPUs appear 2.3 - 2.4 Ghz with ~ 15MB cache,&lt;/li&gt;
&lt;li&gt;Google CPUs around 2.6 Ghz with ~ 20MB cache,&lt;/li&gt;
&lt;li&gt;Amazon ~ 2.8 Ghz with ~ 25 MB cache&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;network i/o speeds seem reasonable on all.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;using-resources-with-docker-machine&quot;&gt;Using resources with docker-machine&lt;/h2&gt;
&lt;p&gt;docker-machine with docker save: after committing the container, this saves the container locally rather than on the host. With even reasonable download speeds ~ 0.5MB/s this is quite slow. DigitalOcean download speeds are ~ 680 Mb/s, and upload about half that. Better yet, pushing the container back to the Hub only pushes the changed layers anyway, so is nearly instantaneous. The Hub also provides a private repo for free.&lt;/p&gt;
&lt;p&gt;This provides a pretty compelling workflow of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-machine create ...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run &amp;lt;...&amp;gt; user/private&lt;/code&gt; and do stuff&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker commit container user/private&lt;/code&gt;, &lt;code&gt;docker push user/private&lt;/code&gt;, &lt;code&gt;docker-machine rm -f ...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;in order to deploy one’s work on temporary machine with appropriate power, and then save the work and close the machine. Using docker instead of the standard image ‘snapshots’ is probably faster and nicely independent of the machine and provider; and in this case the snapshot storage is free of cost as well.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Data Science Regional Hubs</title>
   <link href="http://www.carlboettiger.info/2015/04/10/data-science-regional-hubs.html"/>
   <updated>2015-04-10T00:00:00+00:00</updated>
   <id>/04/10/data-science-regional-hubs</id>
   <content type="html">&lt;h2 id=&quot;agenda&quot;&gt;Agenda&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Goal&lt;/li&gt;
&lt;li&gt;Who &amp;amp; what we have&lt;/li&gt;
&lt;li&gt;imagine and design the hub&lt;/li&gt;
&lt;li&gt;engage, govern, sustain&lt;/li&gt;
&lt;li&gt;structure a proposal&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;nsf-overview&quot;&gt;NSF overview&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What does NSF mean by hub? Consortium/network with regional focus&lt;/li&gt;
&lt;li&gt;why regional? face time. regional issues&lt;/li&gt;
&lt;li&gt;NSF thinking it will fund for 9-10 years (in 3 phases). next phase will be &amp;lt; 3 years after first&lt;/li&gt;
&lt;li&gt;phase 1: hub (executive director)&lt;/li&gt;
&lt;li&gt;phase 2: spokes (priority areas)&lt;/li&gt;
&lt;li&gt;phase 3: nodes (sustaining partner organizations)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Volunteer steering council advises ED, executive staff partner organizations (beyond steering council) (model like the CRA)&lt;/p&gt;
&lt;p&gt;Foundational Research example: Berkeley AMPlab (NSF, DARPA, DOE, AWS, Google, SAP) -&amp;gt; apache open source: spark, mesos, tachyon&lt;/p&gt;
&lt;p&gt;Education example: Schmidt family foundation funds U Chicago run Data Science for Social Good&lt;/p&gt;
&lt;p&gt;Applications: Healthcare: industry using open clinicaltrials.gov data, tidy up/visual interface (Novartis, Pfizer, Eli Lillu)&lt;/p&gt;
&lt;p&gt;NSF will fund the logistics, not the research (other NSF programs do that)&lt;/p&gt;
&lt;p&gt;networking (meeting, staff) dynamic: grow over time Collaboration rather than competition: NSF prefers one proposal per region!! Must represent the entire region. West is the largest geographic region.&lt;/p&gt;
&lt;p&gt;spokes can be regional areas as well as topical.&lt;/p&gt;
&lt;p&gt;phase 1 somewhat of a planning grant&lt;/p&gt;
&lt;h2 id=&quot;charratte-outcome-goals&quot;&gt;Charratte outcome goals&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;priority applications&lt;/li&gt;
&lt;li&gt;technical or research topics&lt;/li&gt;
&lt;li&gt;societal big data issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Volunteer to organize next steps in coalescing regional stakeholders and advancing the region’s proposal&lt;/p&gt;
&lt;p&gt;How will hubs interact? 2.5 day workshop at DC will talk about that after regionally focused hubs are created. Successful pilot (e.g. education) can spread nationally.&lt;/p&gt;
&lt;p&gt;Coordination between federal agencies.&lt;/p&gt;
&lt;p&gt;this group selected based on their white papers.&lt;/p&gt;
&lt;p&gt;Networking&lt;/p&gt;
&lt;p&gt;Content for the proposal from the western region&lt;/p&gt;
&lt;p&gt;by hands, looks like 50% academic, 50% govt/non-profit (6)/for profit (6) in equal bit&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;table breakout. environmental science strong at my table:&lt;/p&gt;
&lt;p&gt;Mark Tompkins (Berkeley industry), Anne Wilson (Colorado), Jeremy Franklin, Philip Tarrant&lt;/p&gt;
&lt;p&gt;Brainstorm 2: listing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Existing hubs and partnerships&lt;/li&gt;
&lt;li&gt;Data Sources&lt;/li&gt;
&lt;li&gt;Analysis Capabilities&lt;/li&gt;
&lt;li&gt;User and Uses&lt;/li&gt;
&lt;li&gt;Education &amp;amp; workforce development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Breakout 2: Services the hub can provide&lt;/p&gt;
&lt;p&gt;see our sticky. i make case for demographic diversity (&amp;amp; geographic)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;plenary&lt;/p&gt;
&lt;p&gt;staff, workshops. Not funding for infrastructure, not funding research, not funding education.&lt;/p&gt;
&lt;p&gt;Could fund a workshop to create an NSF call for infrastructure.&lt;/p&gt;
&lt;p&gt;structure: could rotate between campuses. could be led by a .org.&lt;/p&gt;
&lt;p&gt;(us-ignite.org spun off. hub could spin off into a .org)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Breakout 3: discuss very different images for what hub would look like&lt;/p&gt;
&lt;p&gt;To encourage diversity of approaches, rooms were given different metaphors:&lt;/p&gt;
&lt;p&gt;how could the hub be like a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;weather&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Goals: foster research; education Matchmaking. tools + domains + data Standards. data trust. metadata. Buisness services: data management. sustainability Functions: workshops. events/hackathons. forum for curriculum development. data carpentry boot camps. standardization, containers. Governance: rotating board, transition to member funded&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;brain&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;body does the work.&lt;br /&gt; Facilitate communication. Directory of resources. Advocacy of best practices they must come to you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;building&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;modular diversity values: openness, collaboration, equality, agile built on existing infrastructure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ecosystem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;larger purpose/values. activities: student fellows, matchmaking, workshops spokes: natural resources, ag, natural hazards, healthcare, transportation leadership: ED. 18 person steering committee. spoke working groups Select steering committee: via an interim steering committee from the proposal.&lt;/p&gt;
&lt;p&gt;Feedback: plus, potential, critique,&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Take volunteers for co pis (google doc)&lt;/p&gt;
&lt;p&gt;Take volunteers for host institution (5 volunteer: UCSD Supercomputing Center, USC (ISI), UC Berkeley (BIDS), Federation for Earth Systems, state of Utah)&lt;/p&gt;
&lt;p&gt;host institution volunteers meet to select host. Agreement by consensus on Federation for Earth Systems.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Following further discussion with NSF, FES agrees to a UCSD-UCB-UW led.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gpdd And Kalman Exploration Continued</title>
   <link href="http://www.carlboettiger.info/2015/04/09/gpdd-and-kalman-exploration-continued.html"/>
   <updated>2015-04-09T00:00:00+00:00</updated>
   <id>/04/09/gpdd-and-kalman-exploration-continued</id>
   <content type="html">&lt;p&gt;Load libraries and data as before&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knitcitations&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;rgpdd&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;FKF&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;parallel-version-of-dplyrdo&quot;&gt;Parallel version of &lt;code&gt;dplyr::do&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;do_parallel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df, f, ...){

  &lt;span class=&quot;co&quot;&gt;# supports only one group for now&lt;/span&gt;

  &lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;parallel&amp;quot;&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;lazyeval&amp;quot;&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;reshape2&amp;quot;&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mc.cores =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;detectCores&lt;/span&gt;())

  grps &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;groups&lt;/span&gt;(df)
  ids &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(grps, function(i) &lt;span class=&quot;kw&quot;&gt;unique&lt;/span&gt;(df[[&lt;span class=&quot;kw&quot;&gt;as.character&lt;/span&gt;(i)]]))
  &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(ids) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.character&lt;/span&gt;(ids)
  ## turn grouped data.frame to a list of data.frames by MainID
  list_data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(ids, 
                      function(id){ 
                        .dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;interp&lt;/span&gt;(~y ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x, &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; grps[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]], &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; id)))
                        &lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(df, &lt;span class=&quot;dt&quot;&gt;.dots =&lt;/span&gt; .dots)
                      })

  ## Actually do the fitting in parallel
  list_out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mclapply&lt;/span&gt;(list_data, f, ...)

  ## reshape outputs back to a data.frame
  &lt;span class=&quot;kw&quot;&gt;melt&lt;/span&gt;(list_out, &lt;span class=&quot;dt&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(list_out[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]])) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename_&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;.dots =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;setNames&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;L1&amp;quot;&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;as.character&lt;/span&gt;(grps[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]])) ) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;              &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as_data_frame&lt;/span&gt;()
}&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;prepare-data&quot;&gt;Prepare data&lt;/h2&gt;
&lt;p&gt;Prepare data, as before: we filter on the stated criteria&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpdd_main %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(SamplingProtocol ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Count&amp;quot;&lt;/span&gt;,
         SourceDimension %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Count&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;), 
         SamplingFrequency ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt;,
         DatasetLength &amp;gt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;arrange&lt;/span&gt;(MainID) -&amp;gt;
filtered&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and select data matching this filter. We add a column for the log of the population size and group by data ID:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpdd_data %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;filtered$MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(MainID, Population, SampleYear) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;logN =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(Population)) -&amp;gt;
df&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lastly, we replace &lt;code&gt;-Inf&lt;/code&gt; (introduced from &lt;code&gt;log(0)&lt;/code&gt; terms) with smallest finite values observed. (arbitrary, authors do not specify how these values are handled.)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;i &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(df$logN ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;-&lt;span class=&quot;ot&quot;&gt;Inf&lt;/span&gt;)
df$logN[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(df$logN[-i])-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We may test on a subset of the data first:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#not run&lt;/span&gt;
some &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sample&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;unique&lt;/span&gt;(df$MainID), &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;some) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;df&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;import-function-definitions&quot;&gt;Import function definitions&lt;/h2&gt;
&lt;p&gt;We import our previous model definitions:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;downloader::&lt;span class=&quot;kw&quot;&gt;download&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;https://github.com/ropensci/rgpdd/raw/master/inst/scripts/knape-de-valpine.R&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;knape-de-valpine.R&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;source&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knape-de-valpine.R&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;unlink&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knape-de-valpine.R&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;simulating&quot;&gt;Simulating&lt;/h2&gt;
&lt;p&gt;FKF package doesn’t bother to define a simulation method, so we can simply define one directly from the state equations. Though a C implementation would be preferrable, fitting will always be much more rate-limiting. (We will also ignore the multi-variate definition for simplicity here).&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;use &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, default){
  if(&lt;span class=&quot;kw&quot;&gt;is.null&lt;/span&gt;(x))
    default
  else
    x
}

sim_fkf &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(fit){
  n &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;]]
  dt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;dt&amp;quot;&lt;/span&gt;]]
  HHt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]]
  Tt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;use&lt;/span&gt;(fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;Tt&amp;quot;&lt;/span&gt;]], &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
  GGt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;use&lt;/span&gt;(fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]], &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
  a0 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fit[[&lt;span class=&quot;st&quot;&gt;&amp;quot;a0&amp;quot;&lt;/span&gt;]]
  ct &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
  Zt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
  
  a &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(n)
  y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(n)
  eta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(n, dt, &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(HHt))
  epsilon &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(n, ct, &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(GGt))
  a[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;a0
    for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(n&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
      a[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Tt *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;a[t] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eta[t]
      y[t] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Zt *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;a[t] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;epsilon[t]
    }
        y[n] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Zt *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;a[n] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;epsilon[n]
  y
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The study also creates simulated datasets based on the real data but explicitly making the assumption of either density independence (DI) or density dependence (DD). For each dataset, a density-independent simulated dataset is created by simulating under the SSRW model that was fit. The density-dependent model is created by explicitly fixing the density dependent parameter (&lt;span class=&quot;math&quot;&gt;\(c\)&lt;/span&gt; in the language of the paper, &lt;code&gt;Tt&lt;/code&gt; in FKF notation) to 0.8 and estimating the other parameters of this modified SSG model. We can define this model analgously to the others, only this time fixing &lt;code&gt;Tt = 0.8&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fit_dd &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(y, 
                   &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)),
                   ...){
    
    o &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optim&lt;/span&gt;(init,
                 &lt;span class=&quot;dt&quot;&gt;fn =&lt;/span&gt;  function(par, ...)
                   -&lt;span class=&quot;kw&quot;&gt;fkf&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])), 
                        &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])), ...)$logLik,
                 &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.8&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;P0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), 
                 &lt;span class=&quot;dt&quot;&gt;ct =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Zt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;yt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(y), 
                 &lt;span class=&quot;dt&quot;&gt;check.input =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, ...)
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]])
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]])
  &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y)))
   
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The script adds a method for this to &lt;code&gt;robust_fit()&lt;/code&gt; as well; though given the computational cost it is not clear if a robust fit is actually used in generating the data.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sim_di &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df) &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;logN =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sim_fkf&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, df$logN, &lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)))
sim_dd &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df) &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;logN =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sim_fkf&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dd&amp;quot;&lt;/span&gt;, df$logN, &lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(sim_di) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DI
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
123.079   7.039   8.836 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(sim_dd) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DD
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
120.578   5.209   8.023 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can then use these two collections of datasets just as before:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  DD %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(kalman, &lt;span class=&quot;dt&quot;&gt;method =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;BFGS&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DD_fits
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
9218.572  248.985  324.883 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  DI %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(kalman, &lt;span class=&quot;dt&quot;&gt;method =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;BFGS&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DI_fits
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
8074.330  230.513  280.989 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and from before:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(kalman, &lt;span class=&quot;dt&quot;&gt;method =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;BFGS&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fits
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
7761.519  201.922  256.863 &lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;figure-2&quot;&gt;Figure 2&lt;/h4&gt;
&lt;p&gt;From these simulations and corresponding parameter estimates of the density-dependent parameter, we can create our version of Figure 2:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;order &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;independent&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;dependent&amp;quot;&lt;/span&gt;)

combined &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(
  DD_fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Tt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dependent&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;levels=&lt;/span&gt;order)),
  
  DI_fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Tt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;independent&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;levels=&lt;/span&gt;order)),
  
  fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Tt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;levels=&lt;/span&gt;order))) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ungroup&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;transmute&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;uncertainty =&lt;/span&gt; 
              plyr::&lt;span class=&quot;kw&quot;&gt;revalue&lt;/span&gt;(model, 
                            &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;ssg =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;accounting for uncertainty&amp;quot;&lt;/span&gt;,
                              &lt;span class=&quot;dt&quot;&gt;g =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ignoring uncertainty&amp;quot;&lt;/span&gt;)),
            type, value, MainID)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(combined) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_histogram&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;binwidth=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_grid&lt;/span&gt;(uncertainty ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;type) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_vline&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;xintercept =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value)), &lt;span class=&quot;dt&quot;&gt;lwd=&lt;/span&gt;.&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_vline&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;xintercept =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;median&lt;/span&gt;(value)), &lt;span class=&quot;dt&quot;&gt;lwd=&lt;/span&gt;.&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;grey&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlim&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.1&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;1.1&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;c value&amp;quot;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-09-gpdd-and-kalman-exploration-continued/Figure2-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/h2&gt;
&lt;p&gt;With fitting and simulating functions in place, defining the bootstrap is straight forward. We define these separately for the state-space Gompertz (ssg; i.e. the model with both density dependence and observational errors) and the Gompertz (g; density dependence, no observational error). We compare in each case to the simulations of the corresponding model without density dependence.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;bootstrap &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df, &lt;span class=&quot;dt&quot;&gt;null_model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;test_model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;){
  y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;df$logN
  
  ssg &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(test_model, y)
  ssrw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(null_model, y)
  sims &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;replicate&lt;/span&gt;(N, &lt;span class=&quot;kw&quot;&gt;sim_fkf&lt;/span&gt;(ssrw))))
  
  &lt;span class=&quot;co&quot;&gt;# We use a relaxed version of robust_fit, with N=3&lt;/span&gt;
  sims %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rowwise&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(null_model, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as.numeric&lt;/span&gt;(.), &lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(mloglik) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;null
  
  &lt;span class=&quot;co&quot;&gt;# compute p value of observed LR statistic relative to null distribution&lt;/span&gt;
  lr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(ssrw$mloglik -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;ssg$mloglik)
  null_dist &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(null$mloglik -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;ssg$mloglik) 
  &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;p =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(null_dist &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;lr)/N)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these functions defined, we can perform the actual analysis.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;ssg_p_values
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     user    system   elapsed 
18552.515   509.365   630.503 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;g_p_values
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
7958.974  215.100  259.174 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can also do the bootstrapping for the simulated data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
 DD %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;dd_ssg_p_values
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     user    system   elapsed 
20739.616   533.335   704.335 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
 DD %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;dd_g_p_values
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
9970.254  285.473  332.748 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
 DI %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;di_ssg_p_values
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     user    system   elapsed 
18631.331   479.485   622.542 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  DI %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do_parallel&lt;/span&gt;(bootstrap, &lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;di_g_p_values
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    user   system  elapsed 
8021.423  227.704  264.113 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;P &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(
  ssg_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;),
  g_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;),
  di_ssg_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;DI&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;),
  di_g_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;DI&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;),
  dd_g_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;),
  dd_ssg_p_values %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;DD&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;))


&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(P) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_histogram&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(p)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_grid&lt;/span&gt;(model ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;data) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-09-gpdd-and-kalman-exploration-continued/Figure3-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Gpdd Explore</title>
   <link href="http://www.carlboettiger.info/2015/04/06/gpdd-explore.html"/>
   <updated>2015-04-06T00:00:00+00:00</updated>
   <id>/04/06/gpdd-explore</id>
   <content type="html">&lt;h3 id=&quot;setup&quot;&gt;setup&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;rgpdd&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;FKF&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Working through &lt;a href=&quot;http://doi.org/10.1111/j.1461-0248.2011.01702.x&quot;&gt;10.1111/j.1461-0248.2011.01702.x&lt;/a&gt; provides a nice way to play around with the GPDD data and Kalman filtering. More interested in exploring the data and methods than in just replicating the results, which are important but also rather intuitive and thus I expect rather robust – as we add (observational) uncertainty, or indeed, any additional parameters that must be ended, we should expect to have less power to pin down a particular parameter associated with density dependence, as the paper illustrates rather nicely.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;data-preparation&quot;&gt;Data preparation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;627 time series with population indices obtained from the GPDD (NERC Centre for Population Biology 1999). Data sets were filtered out from the database by removing harvest and non-index based data, data sampled at non-annual intervals and time series taking less than 15 unique values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Excluding time-series shorter than a minimum length is intuitive. Excluding harvest data makes some sense, as these aren’t scientific samples; in particular, they do not necessarily reflect a uniform sampling effort over time. Not quite clear why one would exclude non-annual intervals. Not really clear what “non-index based data” even means. Note that this 2012 paper still cites the original 1999 version instead of the 2010 version, which adds 123 datasets (for a total of 5,156).&lt;/p&gt;
&lt;p&gt;Anyway, we can roughly infer what these filters mean in terms of the columns and values defined in the “MAIN” table of the GPDD, as described in the &lt;a href=&quot;http://www3.imperial.ac.uk/cpb/databases/gpdd&quot;&gt;GPDD User Manual&lt;/a&gt;. &lt;code&gt;dplyr&lt;/code&gt; makes it quick to implement these filters in R:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpdd_main %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(SamplingProtocol ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Count&amp;quot;&lt;/span&gt;,
         SourceDimension %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Count&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;), 
         SamplingFrequency ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt;,
         DatasetLength &amp;gt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;arrange&lt;/span&gt;(MainID) -&amp;gt;
filtered&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we might imagine different selection criteria, looking a bit more closely at the relevant fields.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Unfortunately these don’t quite align with the paper, even allowing for the 123 additional datasets. Most obviously, we have 1749 matches instead of 627. Not only have we somehow grabbed more datasets than expected, but the Knape et al list includes quite a few datasets that do not meet these criteria:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;source&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;http://ropensci.github.io/rgpdd/data/knape.R&amp;quot;&lt;/span&gt;)
gpdd_main %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;knape_ids) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(MainID, SamplingProtocol, SourceDimension, SamplingFrequency, DatasetLength)  %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;arrange&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.tbl&lt;/span&gt;() -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;knape_data

&lt;span class=&quot;kw&quot;&gt;tail&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;table&lt;/span&gt;(knape_data$SourceDimension)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
Count (estimated)        Mean Count             Index 
                5                 8                15 
          Density Transformed Count             Count 
               20               110               459 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;tail&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sort&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;table&lt;/span&gt;(knape_data$SamplingProtocol)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
    Count (millions)              Harvest              Unknown 
                   1                    1                    1 
  Index of abundance Index of territories                Count 
                   2                    6                  616 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Those summaries show data with attributes we excluded, including Harvest as a sampling protocol. We see over 100 such data sets:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpdd_main %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;knape_ids) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(SamplingProtocol ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Count&amp;quot;&lt;/span&gt;,
         SourceDimension %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Count&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;), 
         SamplingFrequency ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt;,
         DatasetLength &amp;gt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;15&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 468  25&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The reason for this discrepancy isn’t clear, but we can proceed with our filtered data instead.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Selecting the time-series identified by our filter, we also add a column for &lt;span class=&quot;math&quot;&gt;\(\log(N)\)&lt;/span&gt; population:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;gpdd_data %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;filtered$MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(MainID, Population, SampleYear) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(MainID) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;logN =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(Population)) -&amp;gt;
df&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interestingly there are no missing data reported:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(df$Population, is.na))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(Population &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;# -9999 is elsewhere used for missing data&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [0 x 4]
Groups: MainID

Variables not shown: MainID (int), Population (dbl), SampleYear
  (int), logN (dbl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but some population values are equal to 0, creating some &lt;code&gt;-Inf&lt;/code&gt; terms in our log data, which will create trouble in fitting the models. The authors don’t say how they handled this case. We will manually set them to the smallest value observed:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;i &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(df$logN ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;-&lt;span class=&quot;ot&quot;&gt;Inf&lt;/span&gt;)
df$logN[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(df$logN[-i])-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gompertz-model&quot;&gt;Gompertz model&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We use the stochastic Gompertz population model to analyse the strength of density dependence in the data.The model is defined through&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[N_{t+1} = N_t \exp(a - b \log N_t + \epsilon_t)\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;where &lt;span class=&quot;math&quot;&gt;\(N_t\)&lt;/span&gt; is population density or size in year &lt;span class=&quot;math&quot;&gt;\(t\)&lt;/span&gt;, &lt;span class=&quot;math&quot;&gt;\(a\)&lt;/span&gt; is an intercept, &lt;span class=&quot;math&quot;&gt;\(b\)&lt;/span&gt; is a measure of the strength of density dependence and &lt;span class=&quot;math&quot;&gt;\(\eta\)&lt;/span&gt; is normally distributed process error with mean zero and standard deviation &lt;span class=&quot;math&quot;&gt;\(\tau\)&lt;/span&gt;. By log transforming the population abundance and putting &lt;span class=&quot;math&quot;&gt;\(x_t = \log N_t\)&lt;/span&gt; this simplifies to&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[x_{t+1} = a + c x_t + \epsilon_t\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;where &lt;span class=&quot;math&quot;&gt;\(c = 1 - b\)&lt;/span&gt; is the lag 1 autocorrelation of the log transformed population abundance when the process is stationary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and uncertainty in measurements, &lt;span class=&quot;math&quot;&gt;\(y_t\)&lt;/span&gt; are simply normal random variates around &lt;span class=&quot;math&quot;&gt;\(x_t\)&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[y_t = x_t + \eta_t \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&quot;math&quot;&gt;\(\eta_t \sim N(0,\sigma^2)\)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;kalman-filtering&quot;&gt;Kalman Filtering&lt;/h2&gt;
&lt;p&gt;Since the model is linear we can compute the likelihood directly by means of a Kalman filter. There are various ways of going about this, and the paper provides some general details:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Kalman filter was initiated by assuming a wide prior distribution on the initial state centred around the first observation, &lt;span class=&quot;math&quot;&gt;\(x_1 \sim N( y_1, 10)\)&lt;/span&gt;. For each model and data set the numerical maximisation (using the BFGS algorithm implemented in the optim function) was repeated for 50 random starting values to ensure that we found the global optimum&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some useful detail here, but still a bit vague for our purposes, or are things we might have done differently.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Doesn’t state which Kalman filter (their are a few algorithms and several packages, but the differences seem quite small: &lt;a href=&quot;http://www.jstatsoft.org/v39/i02&quot;&gt;this JSS paper&lt;/a&gt; has a good overview.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Not clear that we wouldn’t want to scale the prior variance by the data sample, e.g. &lt;code&gt;var(y)&lt;/code&gt;, but since we’re on a log scale &lt;code&gt;10&lt;/code&gt; is indeed pretty wide.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;BFGS&lt;/code&gt; doesn’t seem as robust as some alternatives; (e.g. gives a rather different result than Nelder-Meade or &lt;code&gt;StructTS()&lt;/code&gt; model on the classic Nile data set example from the FKF package).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also challenging are the “50 random starting values”, which does not tell us from what distribution they were drawn. Too wide a distribution will start to include values for which the likelihood cannot be evaluated, while too narrow serves little purpose. –Moreover it is unclear if this is really preferable to simply using fewer starting points and a more robust algorithm. For simplicity, we’ll ignore this and just choose justifiable starting conditions.– we’ll add this as well.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Four variants of the model defined by (1) and (2) were fitted to each data set; a full model with both uncertainty about population abundance and density dependence denoted by SSG (state space Gompertz), a model with uncertainty about population abundance, but no density dependence (c fixed to one) denoted SSRW (state space random walk), a model with density dependence, but no uncertainty about population abundance (r2 fixed to zero) denoted G (Gompertz) and a model with neither uncertainty about population abundance nor density dependence (c fixed to one and r2 fixed to zero) denoted RW (random walk)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is both clear and straight forward, we define each of the models as described. Note that we define the models here in the notation of FKF:&lt;/p&gt;
&lt;p&gt;State transition equation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[\alpha_{t+1} = d_t + T_t \alpha_t + H_t \eta_t\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Observation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[y_t = c_t + Z_t \alpha_t + G_t \eta_t\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Which has the following correspondence with to the Gompertz model given before:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[\begin{align*}
c &amp;amp;\to&amp;amp; T_t \\
a &amp;amp;\to&amp;amp; d_t \\
\sigma^2 &amp;amp;\to&amp;amp; G_t&amp;#39;G_t \\
\tau^2 &amp;amp;\to&amp;amp; H_t&amp;#39;H_t 
\end{align*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So here we define these models in R code just as described above. Using the &lt;code&gt;FKF&lt;/code&gt; package we define each model by an optimization routine that returns the parameters that maximize the likelihood for the given model.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fit_ssg &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(y, 
                    &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
                             &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)),
                    ...){
    o &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optim&lt;/span&gt;(init,
                 &lt;span class=&quot;dt&quot;&gt;fn =&lt;/span&gt;  function(par, ...)
                   -&lt;span class=&quot;kw&quot;&gt;fkf&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]),
                        &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]),
                        &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])), 
                        &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])), 
                        ...)$logLik,   
                 &lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], 
                 &lt;span class=&quot;dt&quot;&gt;P0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), 
                 &lt;span class=&quot;dt&quot;&gt;ct =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;),
                 &lt;span class=&quot;dt&quot;&gt;Zt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), 
                 &lt;span class=&quot;dt&quot;&gt;yt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(y), 
                 &lt;span class=&quot;dt&quot;&gt;check.input =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, 
                 ...)
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]])
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]])
  &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y)))
}

fit_ssrw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(y, 
                     &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
                              &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)), 
                     ...){
    o &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optim&lt;/span&gt;(init,
                 &lt;span class=&quot;dt&quot;&gt;fn =&lt;/span&gt;  function(par, ...)
                   -&lt;span class=&quot;kw&quot;&gt;fkf&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])), 
                        &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])), ...)$logLik,   
                 &lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;P0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ct =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;),
                 &lt;span class=&quot;dt&quot;&gt;Zt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;yt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;check.input =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, ...)
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]])
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;GGt&amp;quot;&lt;/span&gt;]])
  &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y)))
}

fit_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(y, &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;Tt=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y))), ...){
  o &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optim&lt;/span&gt;(init,
                 &lt;span class=&quot;dt&quot;&gt;fn =&lt;/span&gt;  function(par, ...)
                   -&lt;span class=&quot;kw&quot;&gt;fkf&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), 
                        &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])), ...)$logLik,   
                 &lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;P0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ct =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;),
                 &lt;span class=&quot;dt&quot;&gt;Zt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;yt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;check.input =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, ...)
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]])  
  &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y)))
}

fit_rw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(y, &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y))), ...){
 o &amp;lt;-&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;optim&lt;/span&gt;(init, 
                 &lt;span class=&quot;dt&quot;&gt;fn =&lt;/span&gt;  function(par, ...)
                   -&lt;span class=&quot;kw&quot;&gt;fkf&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), 
                        &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(par[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])), ...)$logLik,   
                 &lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;P0 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ct =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;),
                 &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Zt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;),
                 &lt;span class=&quot;dt&quot;&gt;yt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;check.input =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, ...)
  o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(o$par[[&lt;span class=&quot;st&quot;&gt;&amp;quot;HHt&amp;quot;&lt;/span&gt;]])
  &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a0 =&lt;/span&gt; y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y)))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;fkf&lt;/code&gt; will return finite (even “optimal”) log likelihoods for negative values of &lt;code&gt;HHt&lt;/code&gt; and &lt;code&gt;GGt&lt;/code&gt;, so we have log-transformed these parameters. Using &lt;code&gt;L-BFGS-B&lt;/code&gt; with a &lt;code&gt;0&lt;/code&gt; lower bound still causes &lt;code&gt;optim&lt;/code&gt; to error with non-finite log-likelihoods. It isn’t clear how the authors dealt with this constraint, though &lt;code&gt;log&lt;/code&gt;-transform trick has advantages and drawbacks.&lt;/p&gt;
&lt;p&gt;Once we have defined the optimization routines to fit each model, we can define a summary function that runs each model on a given data set and collects the results into a &lt;code&gt;data.frame&lt;/code&gt;. This could be made a bit more general and elegant as discussed later. We will also define this function such that it will fit each model &lt;span class=&quot;math&quot;&gt;\(N = 50\)&lt;/span&gt; times and take the best fit, as the authors suggest for having a better chance of finding the global optimum. (We’ll look at the variation in MLE estimates in these models as footnote as well).&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;robust_fit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;), y, &lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;all =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, ...){
  
  ## Set the model and the mean initial condition
  m &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;switch(model,
              &lt;span class=&quot;dt&quot;&gt;ssg =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fit =&lt;/span&gt; fit_ssg, 
                         &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
                                 &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))),
              &lt;span class=&quot;dt&quot;&gt;ssrw =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fit =&lt;/span&gt; fit_ssrw, 
                          &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
                                   &lt;span class=&quot;dt&quot;&gt;GGt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))),
              &lt;span class=&quot;dt&quot;&gt;g =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fit =&lt;/span&gt; fit_g, 
                       &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;Tt =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))),
              &lt;span class=&quot;dt&quot;&gt;rw =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fit =&lt;/span&gt; fit_rw, 
                        &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(y)/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))))  
  
  
  ## Create the inital conditions
  inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(m$init, 
                      function(m) &lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(N, m, &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(m)) ) ))
  
  ## Attempt the requested fit or return NAs
  f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(init){
    o &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;tryCatch&lt;/span&gt;(
      m$&lt;span class=&quot;kw&quot;&gt;fit&lt;/span&gt;(y, &lt;span class=&quot;dt&quot;&gt;init =&lt;/span&gt; init), 
      &lt;span class=&quot;dt&quot;&gt;error =&lt;/span&gt; function(e) &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;par =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dt =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;Tt=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;HHt =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;GGt=&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;),
                               &lt;span class=&quot;dt&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;convergence=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;n=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y), &lt;span class=&quot;dt&quot;&gt;a0=&lt;/span&gt;y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
    &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(o$par, &lt;span class=&quot;dt&quot;&gt;mloglik =&lt;/span&gt; o$value, &lt;span class=&quot;dt&quot;&gt;converge =&lt;/span&gt;
                   &lt;span class=&quot;kw&quot;&gt;as.numeric&lt;/span&gt;(o$convergence), &lt;span class=&quot;dt&quot;&gt;n=&lt;/span&gt;o$n, &lt;span class=&quot;dt&quot;&gt;a0=&lt;/span&gt;o$a0)))
  }
  
  ## Apply the function to each initial condition, 
  inits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rowwise&lt;/span&gt;() %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(.)) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;output
  
  if(!all) ## drop unconverged, and select only the best scoring run
    output %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(converge ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;slice&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;which.min&lt;/span&gt;(mloglik)) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;output
  
  output
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;kalman &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(df, ...){
  y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;df$logN
  ssg &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, y, ...) 
  ssrw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, y, ...) 
  g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;, y, ...) 
  rw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;, y, ...)
  &lt;span class=&quot;kw&quot;&gt;options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;stringsAsFactors=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
  &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(ssg, parameter, value)),
        &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(ssrw, parameter, value)),
        &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(g, parameter, value)),
        &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;rw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(rw, parameter, value)))
                              
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having defined a function that takes and returns a &lt;code&gt;data.frame&lt;/code&gt;, &lt;code&gt;dplyr::do&lt;/code&gt; gives us a consise syntax to apply this by group (recall &lt;code&gt;df&lt;/code&gt; is already &lt;code&gt;group_by(MainID)&lt;/code&gt;.) As the authors note, the robust fitting procedure is computationally intensive, though easily parallelized.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;kalman&lt;/span&gt;(., &lt;span class=&quot;dt&quot;&gt;method =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;BFGS&amp;quot;&lt;/span&gt;)) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fits
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;     user    system   elapsed 
11652.039   278.562 11956.545 &lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;Unfortunately &lt;code&gt;dplyr&lt;/code&gt; does not as yet directly support parallelization (despite the documentation of &lt;code&gt;dplyr::init_cluster()&lt;/code&gt; describing parallel &lt;code&gt;dplyr::do()&lt;/code&gt; use, this feature is not actually implemented yet). Most parallelization packages for R wrap around &lt;code&gt;apply&lt;/code&gt; functions, and thus are not trivially adapted to the &lt;code&gt;dplyr&lt;/code&gt; grammar. If many cores are available it may still be faster to devolve the &lt;code&gt;group_by()&lt;/code&gt; &lt;code&gt;data.frame&lt;/code&gt; into a list of data frames and then apply in parallel; e.g.:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# not run&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(parallel)
&lt;span class=&quot;kw&quot;&gt;options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mc.cores =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;detectCores&lt;/span&gt;())

## turn grouped data.frame to a list of data.frames by MainID
list_data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mclapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;unique&lt;/span&gt;(df$MainID), function(id) &lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(df, &lt;span class=&quot;dt&quot;&gt;.dots =&lt;/span&gt; ~MainID==id))

## Actually do the fitting in parallel
fits_list &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mclapply&lt;/span&gt;(list_data, kalman, &lt;span class=&quot;dt&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;BFGS&amp;quot;&lt;/span&gt;)

## reshape outputs back to a data.frame
fits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;reshape2::&lt;span class=&quot;kw&quot;&gt;melt&lt;/span&gt;(fits_list, &lt;span class=&quot;dt&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(fits_list[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]])) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rename&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;MainID =&lt;/span&gt; L1) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as_data_frame&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;We now have a nice table of parameter estimates and likelihoods by model for each data set:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fits&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [45,727 x 4]
Groups: MainID

   MainID model parameter         value
1       3   ssg        dt  3.466916e+00
2       3   ssg        Tt -1.334051e-01
3       3   ssg       HHt  6.394019e-02
4       3   ssg       GGt  1.765346e-01
5       3   ssg   mloglik  2.050357e+01
6       3   ssg  converge  0.000000e+00
7       3   ssg         n  2.700000e+01
8       3   ssg        a0  2.484907e+00
9       3  ssrw        dt  7.431723e-04
10      3  ssrw       HHt  3.562612e-09
..    ...   ...       ...           ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and here is our version then of Figure 1b, comparing the estimate of the density-dependence coefficent with and without the uncertainty in observations:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Tt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;spread&lt;/span&gt;(model, value) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(g, ssg)) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;intercept =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;slope =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;labs&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;c estimates&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/figure1b-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Likewise we can compute a version of Figure 1a; which calculates the absolute value of the difference between the estimates of density-dependence with and without the uncertainty, and then plots how frequently we observe a difference larger than a given amount in the data. (The paper finds around 20% having a difference larger than 0.5)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;Tt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;spread&lt;/span&gt;(model, value) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mutate&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;difference =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(g-ssg)) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(difference) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;diffs
  
s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
difference &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(s, function(s_i) &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(diffs$difference &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s_i))
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(s, difference) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Difference bewteen estimates&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Proportion of data sets&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/figure1a-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fits %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(model %in%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;ssrw&amp;quot;&lt;/span&gt;), parameter ==&lt;span class=&quot;st&quot;&gt; &amp;quot;GGt&amp;quot;&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(model, value, MainID) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;spread&lt;/span&gt;(model, value) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(ssg, ssrw)) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;intercept=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;slope=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;labs&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;sigma^2 (obs error)&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/unnamed-chunk-12-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;aside-further-exploring-numerical-issues&quot;&gt;Aside: further exploring numerical issues&lt;/h2&gt;
&lt;p&gt;Numerical optimization can be tricky, particularly in this unsupervised manner. The robust (multiple) fitting strategy goes some ways to addressing this; though ideally one would at least show that the resulting estimates change little if N is increased further.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID==&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;,  &lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;.$logN, &lt;span class=&quot;dt&quot;&gt;all=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(dt, Tt, HHt, GGt, mloglik) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;tidyr::&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(parameter, value, -MainID) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;all

&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(all) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_histogram&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~parameter, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(MainID==&lt;span class=&quot;dv&quot;&gt;1998&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;,  &lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;.$logN, &lt;span class=&quot;dt&quot;&gt;all=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(dt, Tt, HHt, GGt, mloglik) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;tidyr::&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(parameter, value, -MainID) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;all

&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(all) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_histogram&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~parameter, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/unnamed-chunk-14-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Also compare also to the classic example used in most Kalman filter packages, the Nile river flows time series:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;robust_fit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ssg&amp;quot;&lt;/span&gt;,  &lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;Nile, &lt;span class=&quot;dt&quot;&gt;all=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;) %&amp;gt;%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;select&lt;/span&gt;(dt, Tt, HHt, GGt, mloglik) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;tidyr::&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(parameter, value) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;all
&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(all) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_histogram&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~parameter, &lt;span class=&quot;dt&quot;&gt;scales=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-04-06-gpdd-explore/unnamed-chunk-15-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;side-note-on-coding-strategy&quot;&gt;Side note on coding strategy&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;dplyr&lt;/code&gt; makes the data filtering steps fast, consise, and clear. Dealing with model outputs here is actually far less straight forward than cleaning the raw data. For instance, I have collected the output of each model fit into it’s own row. The models have different numbers of parameters, so I must add the fixed parameters to avoid rows of different length; but clearly this does not generalize to the case where the different models can have arbitrarily different parameters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dgrtwo&quot;&gt;David Robinson&lt;/a&gt; has done an excellent job in starting to tackle this thorny problem in a package called &lt;code&gt;broom&lt;/code&gt; with much the same elegance and care that Hadley has done with &lt;code&gt;dplyr&lt;/code&gt;. David argues very persuasively that it makes more sense to summarize parameter estimates from each model fit in two columns - a column for parameter names and a column for values. He has now added support for &lt;code&gt;optim()&lt;/code&gt; output to the &lt;code&gt;broom::tidy()&lt;/code&gt; function, which does just that.&lt;/p&gt;
&lt;p&gt;This doesn’t translate immediately to my use case here, since I need to keep track of the likelihood and convergence which are not captured by &lt;code&gt;broom::tidy()&lt;/code&gt;. As these are scalar valued outputs of the model fit, instead of a vector like parameters, they are extracted and summarized in &lt;code&gt;broom::glance()&lt;/code&gt; as a single row. An easy generalization would just be to &lt;code&gt;cbind&lt;/code&gt; the outputs of &lt;code&gt;glance()&lt;/code&gt; and &lt;code&gt;tidy()&lt;/code&gt;; though David argues for a different approach in which we defer any manipulation of model output. Instead, he suggests an &lt;code&gt;expand.grid&lt;/code&gt; over the names of the groups (models and datasets):&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# not run&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;expand.grid&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;model =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(models),
            &lt;span class=&quot;dt&quot;&gt;dataset =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(datasets)) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(model, dataset) %&amp;gt;%
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;o =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;optim_func&lt;/span&gt;(.$model, .$dataset)) -&amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;david&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where &lt;code&gt;optim_func&lt;/code&gt; uses the name of the model and name of the dataset to apply &lt;code&gt;optim()&lt;/code&gt;, rather than passing the data explicitly. We can then use &lt;code&gt;glance&lt;/code&gt; and &lt;code&gt;tidy&lt;/code&gt; on the resulting output, though we would need to &lt;code&gt;inner_join&lt;/code&gt; the results instead of &lt;code&gt;cbind&lt;/code&gt;. This is indeed an elegant, more generic approach. Still, neither of us much like the need to defer the tidy step to the complex object at the end.&lt;/p&gt;
&lt;p&gt;Here, I have ended up adopting the column-wise parameter, value, approach, though for a reason not just related to elegance. My &lt;code&gt;robust_fit()&lt;/code&gt; error-handling seems to end up very occassionally with some kind of race conditions&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; that cause some of the sub-models to report an NA for one of their fixed parameters, instead of ommitting the parameter entirely. When adding the fixed value back in to keep rows of a uniform length, this meant I might get some rows with a duplicated column, such as a &lt;code&gt;GGt&lt;/code&gt; column with value &lt;code&gt;NA&lt;/code&gt; and another, appended column with the fixed value &lt;code&gt;0&lt;/code&gt; in the &lt;code&gt;g&lt;/code&gt; or &lt;code&gt;rw&lt;/code&gt; models. The columnwise structure avoids this and prevents the code execution from failing.&lt;/p&gt;
&lt;section class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;I could only ever reproduce this by re-running large batch jobs – isolating the examples where error occurred and re-running had no effect, hence my worry about some race conditions between the error reporting. However, the stochastic initial conditions might also contribute to this, as I didn’t standardize seed over the parallelization; though in priciple any unusual initial conditions should only generate fit failures that are already handled in the error handling.&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
 </entry>
 
 <entry>
   <title>Ropensci Unconf Teaching Session</title>
   <link href="http://www.carlboettiger.info/2015/03/26/ropensci-unconf-teaching-session.html"/>
   <updated>2015-03-26T00:00:00+00:00</updated>
   <id>/03/26/ropensci-unconf-teaching-session</id>
   <content type="html">&lt;h2 id=&quot;panel-on-effective-teaching-with-r&quot;&gt;Panel on Effective teaching with R&lt;/h2&gt;
&lt;p&gt;Panel:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Tracy Teal - Data Carpentry&lt;/li&gt;
&lt;li&gt;Hadley Wickhan - undergrads at Rice, R master classes for RStudio&lt;/li&gt;
&lt;li&gt;Mine, Prof Stats, Duke, also MOOC&lt;/li&gt;
&lt;li&gt;Roger Peng Prof Biostats, John Hopkins&lt;/li&gt;
&lt;li&gt;Jenny Bryan, Prof Stats, UBC.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Ben Marwick, Prof Archaelogy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How do you engage new users? (Or what doesn’t work?)&lt;/p&gt;
&lt;p&gt;Hadley: Start with visualization. +1 Jenny Jenny: Making an HTML page with .Rmd (+1 Mine), scaling/aggregation Roger: these days, they come to me excited about R Mine: I have to convince social scientists to use computers at all. Visualization, faceting etc helps, Rmd helps.&lt;br /&gt;Ben: Reproducible scripts, not click trails (Excel).&lt;/p&gt;
&lt;p&gt;What’s the worst way to start?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;teaching data structures / programming first.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;teach loops, control structures?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;later / no. Mine teaches loops with index cards.&lt;/li&gt;
&lt;li&gt;Hadley aims to to get people to re-invent lapply as a common pattern…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keeping people engaged? (Break-out session to develop reading lists, user groups)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mine data hack weekend. (PhD students mentoring, undergrads doing).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Roger: capstone project. Track alumni (via linked-in, other ideas?)&lt;/li&gt;
&lt;li&gt;Tracy: Pointing people to courses like Roger’s MOOC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Engaging later-stage students?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Working with own data and problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;R’s horrible gotchas (recycling, NA stuff, factor stuff, dropping columns/names)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadley: 1) set the expectations that R has frustrations. 2) room / chance to fail safely, how to debug (google error).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Roger: 10 examples of annoying things in R&lt;/li&gt;
&lt;li&gt;Jenny: user str and fear factors.&lt;/li&gt;
&lt;li&gt;Ben: getting help&lt;/li&gt;
&lt;li&gt;Roger: students with programming experience need different kind of help.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;R &amp;amp; Github?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadley, Mine – nope. Hadley - I didn’t commit to teaching it. Don’t try it at the end.&lt;/li&gt;
&lt;li&gt;Roger – it’s better (though students think git == github). Avoid why git is awesome, just teach it in a narrow sense!&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Jenny – intensive use of Github whole time, starting with it up front.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Ben: not with undergrads, yes with grads. takes time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Markdown, Github – if you’re gonna do it, commit and do everything in it from the beginning.&lt;/p&gt;
&lt;p&gt;Hadley: If something feels painful, do it more often. (git, R CMD check).&lt;/p&gt;
&lt;p&gt;Writing functions: need to learn eventually, but it’s really hard to teach. Hadley’s book exercises for the reader. Over time course gets simpler.&lt;/p&gt;
&lt;p&gt;When do you teach data cleaning?&lt;/p&gt;
&lt;p&gt;Jenny: a data-cleaning script itself cannot be clean. It’s an advanced topic I teach it midway.&lt;br /&gt;Jenny, Roger: includes teaching regex.&lt;/p&gt;
&lt;p&gt;Find outside dataset mid-way, sudo-messy data.&lt;/p&gt;
&lt;p&gt;Hadley: Hardest part is that students don’t know what the goal is, while I see it instantly. Takes a super long time to learn how to do this and to articulate this.&lt;/p&gt;
&lt;p&gt;Data shouldn’t be too real, should be Disney-real (more real than reality). individual/personal they put in the time, so do a kaggle competition to clean data, top 3 winners get automatic A’s, opt out of final&lt;/p&gt;
&lt;p&gt;Starting with spreadsheets and data entry!&lt;/p&gt;
&lt;p&gt;Infrastructure for package building:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;takes time, possibly &amp;gt; 30 min 1:1.&lt;/li&gt;
&lt;li&gt;Mine: students run on cloud, I can replicate. but cannot run on own computer.&lt;/li&gt;
&lt;li&gt;Roger: Better to live through the cli bs, once it’s done it’s done. VM’s not how the real world works. Hosting service for 1000s of people too expensive.&lt;/li&gt;
&lt;li&gt;Jenny: pain is only when we need build environment&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ben: Use &lt;em&gt;local&lt;/em&gt; Docker, replicates his own research. A slight taste of shell, but avoids CLI BS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install challenges is the opposite of a motivator / win. Luckily doesn’t bite early.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Evaluate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;peer review&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;Breakouts / products:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Listing follow-up resources&lt;/li&gt;
&lt;li&gt;Iris data sets&lt;/li&gt;
&lt;li&gt;dependencies &amp;amp; scaling&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Docker Machine Notes</title>
   <link href="http://www.carlboettiger.info/2015/03/24/docker-machine-notes.html"/>
   <updated>2015-03-24T00:00:00+00:00</updated>
   <id>/03/24/docker-machine-notes</id>
   <content type="html">&lt;p&gt;Docker recently released &lt;code&gt;docker-machine&lt;/code&gt; to make managing multiple remote machines locally easier. Docker distributes binaries of &lt;code&gt;docker-machine&lt;/code&gt; for most major architectures ready-to-go, potentially making it easier to get started on Windows and Mac as well.&lt;/p&gt;
&lt;p&gt;Set credentials in environmental variables so we don’t have to pass them on the command line each time:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;DIGITALOCEAN_ACCESS_TOKEN&lt;/span&gt; = XXX&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and create the docker-machine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine create --driver digitalocean --digitalocean-size &amp;quot;1gb&amp;quot; server-name&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;server-name&lt;/code&gt; is any name you want to give your server and &lt;code&gt;DO_PAT&lt;/code&gt; is your access token (say, saved as an environmental variable). Here we launch a 1GB instance, the default is 512MB on digitalocean. Many other providers work just as well (including virtualbox). You need to set your terminal to use the active &lt;code&gt;docker-machine&lt;/code&gt; for all &lt;code&gt;docker&lt;/code&gt; commands, instead of the local &lt;code&gt;docker&lt;/code&gt; installation:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;docker-machine&lt;/span&gt; env server-name&lt;span class=&quot;ot&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;sets three environmental variables that point your &lt;code&gt;docker&lt;/code&gt; commands to the new remote machine, &lt;code&gt;server-name&lt;/code&gt;. Wow. We can now launch any service of interest:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run -d -p 8787:8787 -e PASSWORD=something rocker/hadleyverse&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and it will run on the server. Get the IP address of the active machine with &lt;code&gt;docker-machine ip&lt;/code&gt;, e.g. open the server in the browser (from a Ubuntu-based client)&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;xdg-open&lt;/span&gt; http://&lt;span class=&quot;kw&quot;&gt;`docker-machine&lt;/span&gt; ip&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;:8787&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When we’re finished with the instance, we can destroy the machine so we will no longer be billed, using the same syntax as we would for a container:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker-machine&lt;/span&gt; rm -f server-name&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we have a locally installed docker instance, we may also want to unset the environmental variables set by machine:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;DOCKER_TLS_VERIFY&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;DOCKER_CERT_PATH&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;unset&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;DOCKER_HOST&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see a list of active machines with &lt;code&gt;docker-machine ls&lt;/code&gt; and switch between machines with &lt;code&gt;docker-machine env&lt;/code&gt; as shown above.&lt;/p&gt;
&lt;p&gt;Spawning a new machine adds a bit more overhead than launching a container on an existing local or remote server instance, but not much; and is easily scripted. Of course the latency is higher too: the start-up time for the DO instance takes two minutes, and pulling a sizable image onto DO machine takes another two minutes or so. &lt;code&gt;docker-machine&lt;/code&gt; actually prints the start-up time in seconds as it brings up the machine, in case you want to compare between services.&lt;/p&gt;
&lt;h2 id=&quot;docker-compose&quot;&gt;Docker Compose&lt;/h2&gt;
&lt;p&gt;Docker compose is just fig, which is just a yaml config file / wrapper for (some of) the &lt;code&gt;docker run&lt;/code&gt; command-line options. As with &lt;code&gt;docker-machine&lt;/code&gt;, this simplicity is definitely a strength. Rather intuitively, &lt;code&gt;docker-machine&lt;/code&gt; respects &lt;code&gt;docker-compose&lt;/code&gt;, in that after setting the environmental variables as described above, &lt;code&gt;docker-compose up&lt;/code&gt; runs on the remote machine, just like &lt;code&gt;docker run&lt;/code&gt; does.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;docker-swarm&quot;&gt;Docker swarm&lt;/h2&gt;
&lt;p&gt;Docker swarm is rather analogous to CoreOS; it’s essential feature being a discovery service that allows the cluster to form. Swarm is mostly easily set up using docker-machine, though in my googling most tutorials fail to mention this. The &lt;a href=&quot;https://docs.docker.com/machine/#using-docker-machine-with-docker-swarm&quot;&gt;official docker-machine docs&lt;/a&gt; are probably the best reference on this.&lt;/p&gt;
&lt;p&gt;Docker swarm provides rather limited functionality so far. A nice &lt;a href=&quot;http://blog.docker.com/2015/02/scaling-docker-with-swarm/&quot;&gt;docker blog post on swarm&lt;/a&gt; In particular, it doesn’t yet support two key features found in CoreOS scheduling: fault-tolerant scheduling; which can move a container to another host if a machine goes down; nor does it yet support Master election; so the swarm breaks if the master goes down.&lt;/p&gt;
&lt;p&gt;It currently provides only relatively obvious scheduling – a bin-packing algorithm if you put constraints on resources a container can use, affinities to make sure &lt;code&gt;--link&lt;/code&gt;, &lt;code&gt;--volumes-from&lt;/code&gt; and other such containers end up on the same instance. Instances can be annotated with labels that can be used as constraints, such as &lt;code&gt;storage=ssd&lt;/code&gt;, though it’s &lt;a href=&quot;https://github.com/docker/machine/issues/1002&quot;&gt;not clear&lt;/a&gt; how to add these from docker-machine. As long as swarm does not support fault-tolerant scheduling and master election though, these features are not as essential. Dynamically moving a container when a machine has failed means that no human is around to consider what resources the swarm has and where to schedule the container. But for merely adding a new container to an existing swarm, it’s not particularly hard for a human to look at the existing resources and just pick manually where to stick the container without the help of swarm’s algorithms.&lt;/p&gt;
&lt;p&gt;Swarm doesn’t really understand docker-compose yet either, in that compose is essentially written as a single-host tool.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Simpler Nimble Dai Model</title>
   <link href="http://www.carlboettiger.info/2015/03/09/simpler-nimble-dai-model.html"/>
   <updated>2015-03-09T00:00:00+00:00</updated>
   <id>/03/09/simpler-nimble-dai-model</id>
   <content type="html">&lt;h2 id=&quot;a-simpler-nimble-model&quot;&gt;A simpler Nimble model&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;regimeshifts&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;lsn-version&quot;&gt;LSN version&lt;/h2&gt;
&lt;p&gt;A further simplified version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fix &lt;code&gt;sigma_x&lt;/code&gt; to unity and &lt;code&gt;theta&lt;/code&gt; to zero, reflecting the detrending and scaling.&lt;/li&gt;
&lt;li&gt;constrain &lt;code&gt;sigma_y&lt;/code&gt; with a tight prior&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
&lt;span class=&quot;co&quot;&gt;# sigma_x ~ dunif(1e-10, 1e2)&lt;/span&gt;
  
  ## highly constrained
  sigma_y ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;)

  ## Uninformative
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;) 

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i]
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) 
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[N], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_y) 
    
  }
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate the test data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;)
N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;N) &lt;span class=&quot;co&quot;&gt;# schedule for env degredation (increased dilution)&lt;/span&gt;
x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(N)   
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# initial density&lt;/span&gt;
   
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
 x[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dai&lt;/span&gt;(x[day], &lt;span class=&quot;dt&quot;&gt;DF =&lt;/span&gt; DF[day])
}

raw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detrend:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;raw$t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N
detrend &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;loess&lt;/span&gt;(x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t, raw)
sigma &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(detrend$residuals))
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; detrend$residuals/sigma)
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(raw$t, data$x, &lt;span class=&quot;dt&quot;&gt;geom=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-09-simpler-nimble-dai-model/detrend-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; .&lt;span class=&quot;dv&quot;&gt;01&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
thin &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;
n_iter &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;

Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;thin)
  
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(n_iter)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(inits) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

      key        mean        std
1       m -0.02118436 0.02327253
2 sigma_y  0.01001409 0.00316794&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample_n&lt;/span&gt;(df, &lt;span class=&quot;fl&quot;&gt;2e2&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-09-simpler-nimble-dai-model/unnamed-chunk-6-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-09-simpler-nimble-dai-model/unnamed-chunk-7-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;block-sampler&quot;&gt;Block sampler&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; .&lt;span class=&quot;dv&quot;&gt;01&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;thin)
mcmcspec$&lt;span class=&quot;kw&quot;&gt;addSampler&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;RW_block&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;targetNodes=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;#39;sigma_y&amp;#39;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;adaptInterval=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[53] RW_block sampler;   targetNodes: m, sigma_y,  adaptive: TRUE,  adaptScaleOnly: FALSE,  adaptInterval: 100,  scale: 1,  propCov: identity&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(n_iter)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(inits)-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)

df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;lsn, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error in eval(expr, envir, enclos): could not find function &amp;quot;my_mcmc&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-1&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

      key         mean         std
1       m -0.025367634 0.027055911
2 sigma_y  0.009965489 0.003102902&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-1&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample_n&lt;/span&gt;(df, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-09-simpler-nimble-dai-model/unnamed-chunk-10-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-1&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-09-simpler-nimble-dai-model/unnamed-chunk-11-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.1.3 RC (2015-03-06 r67947)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 8 (jessie)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] methods   stats     graphics  grDevices utils     datasets 
[7] base     

other attached packages:
[1] dplyr_0.4.1             ggplot2_1.0.0          
[3] tidyr_0.2.0             regimeshifts_0.0.0.9000
[5] nimble_0.3-1            yaml_2.1.13            
[7] knitr_1.9              

loaded via a namespace (and not attached):
 [1] assertthat_0.1   codetools_0.2-11 colorspace_1.2-6
 [4] DBI_0.3.1        digest_0.6.8     evaluate_0.5.5  
 [7] formatR_1.0      grid_3.1.3       gtable_0.1.2    
[10] igraph_0.7.1     labeling_0.3     lazyeval_0.1.10 
[13] magrittr_1.5     MASS_7.3-39      munsell_0.4.2   
[16] parallel_3.1.3   plyr_1.8.1       proto_0.3-10    
[19] Rcpp_0.11.5      reshape2_1.4.1   scales_0.2.4    
[22] stringr_0.6.2    tools_3.1.3     &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Gp Nimble Explore</title>
   <link href="http://www.carlboettiger.info/2015/03/04/GP-nimble-explore.html"/>
   <updated>2015-03-04T00:00:00+00:00</updated>
   <id>/03/04/GP-nimble-explore</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;MASS&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;mcmc&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gp-model&quot;&gt;GP Model&lt;/h2&gt;
&lt;p&gt;A successful specification looks like this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({

   l ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) 
   sigma.n ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
   Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;diff[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]
   y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(Mu[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N])  

})&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
                   &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))

N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
diff &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(obs$x, obs$x, function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;diff =&lt;/span&gt; diff, &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can simulate parameters from the prior:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel$l&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;simulate&lt;/span&gt;(Rmodel, &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;)
Rmodel$l&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 10.37676&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Other nodes and likelihoods are updated to reflect the new value only after we run &lt;code&gt;calculate()&lt;/code&gt;, so this is the logProb of &lt;code&gt;l&lt;/code&gt; originally:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel$logProb_l&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After we run &lt;code&gt;calculate()&lt;/code&gt;, the &lt;code&gt;logProb&lt;/code&gt; is updated to reflect our simulated value of &lt;code&gt;l&lt;/code&gt;, as are the dependent terms (like the Sigma matrix)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Sigma &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Rmodel$Sigma
&lt;span class=&quot;kw&quot;&gt;calculate&lt;/span&gt;(Rmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] -29.81744&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(Sigma, Rmodel$Sigma)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel$logProb_l&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] -2.122469&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interestingly, we don’t seem to be able to simulate actual data from the model in this way:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel$y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] -2  0  1  2 -1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;simulate&lt;/span&gt;(Rmodel, &lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;)
Rmodel$y&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] -2  0  1  2 -1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(Rmodel$y, Rmodel$origData[[&lt;span class=&quot;st&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;]])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that &lt;code&gt;y&lt;/code&gt; remaines fixed to the original data values. We have to do this manually:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mvrnorm&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mu =&lt;/span&gt; constants$Mu, &lt;span class=&quot;dt&quot;&gt;Sigma =&lt;/span&gt; Rmodel$Sigma) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1]  -7.498019 -20.999389   4.939137  11.751509  -8.123005&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define our mcmc procedure in Nimble&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Rmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
  2.411   0.021   2.434 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-04-GP-nimble-explore/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Note that &lt;code&gt;simulate&lt;/code&gt; continues to draw from the prior, not the posterior:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sigmas &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;replicate&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e4&lt;/span&gt;, {
  &lt;span class=&quot;kw&quot;&gt;simulate&lt;/span&gt;(Rmodel, &lt;span class=&quot;st&quot;&gt;&amp;quot;sigma.n&amp;quot;&lt;/span&gt;)
  Rmodel$sigma.n
  })
&lt;span class=&quot;kw&quot;&gt;hist&lt;/span&gt;(sigmas)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-04-GP-nimble-explore/unnamed-chunk-14-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;(Also note this isn’t a particularly efficient way to simulate). Conveniently drawing data, &lt;span class=&quot;math&quot;&gt;\(y\)&lt;/span&gt;, from the posterior is even less obvious.&lt;/p&gt;
&lt;h2 id=&quot;comparison&quot;&gt;Comparison&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt; lpriors &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(pars){
      &lt;span class=&quot;kw&quot;&gt;dgamma&lt;/span&gt;(pars[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]], &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;log =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(pars[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]], &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;log =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;) 
  }
  
  posterior &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(pars, x, y){ 
    l &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pars[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    sigma.n &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pars[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]

    SE &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(Xi,Xj, l) &lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(Xi -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Xj) ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
    cov &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(X, Y) &lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(X, Y, SE, l)
    I &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(x))
    K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cov&lt;/span&gt;(x, x) 
  
    loglik &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(y) %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;solve&lt;/span&gt;(K +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I) %*%&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y -
&lt;span class=&quot;st&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;det&lt;/span&gt;(K +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I)) -
&lt;span class=&quot;st&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(y) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pi) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;
    
    loglik +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lpriors&lt;/span&gt;(pars)
  }&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;metrop&lt;/span&gt;(posterior, &lt;span class=&quot;dt&quot;&gt;initial =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;nbatch =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)  
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   user  system elapsed 
 36.485   0.442  37.202 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;burnin &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;
thin &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cbind&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;index=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:out$nbatch, &lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(out$batch)))
s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(burnin&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;, out$nbatch, &lt;span class=&quot;dt&quot;&gt;by=&lt;/span&gt;thin)
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;df[s,]
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;df[-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;co&quot;&gt;# drop index&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(df) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(out$initial)
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_log10&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-04-GP-nimble-explore/unnamed-chunk-18-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Gp Nimble Setup</title>
   <link href="http://www.carlboettiger.info/2015/03/03/GP-nimble-setup.html"/>
   <updated>2015-03-03T00:00:00+00:00</updated>
   <id>/03/03/GP-nimble-setup</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;nimble&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;tidyr&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;dmnorm-example&quot;&gt;dmnorm example&lt;/h2&gt;
&lt;p&gt;from Daniel, who notes we need to be explicit about vector/matrix sizes on both LHS and RHS,&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
    mu ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    sigma ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    rho ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    muVec[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;mu *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;onesVector[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]
    Cov[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-dist[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]/rho)
    g[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(muVec[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Cov[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N])
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N) {
        y[i] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dpois&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(g[i]))
    }
})
constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;, 
                  &lt;span class=&quot;dt&quot;&gt;onesVector =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;), 
                  &lt;span class=&quot;dt&quot;&gt;dist =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nrow=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ncol=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;))
y =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rpois&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;# vector of 148 observations (counts)&lt;/span&gt;
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;y)

inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mu =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
              &lt;span class=&quot;dt&quot;&gt;sigma =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, 
              &lt;span class=&quot;dt&quot;&gt;rho =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;, 
              &lt;span class=&quot;dt&quot;&gt;g =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;148&lt;/span&gt;))
m &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gp-model-original-specification&quot;&gt;GP Model, original specification&lt;/h2&gt;
&lt;p&gt;This model definition doesn’t work, since we do not define sizes explicitly&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   l ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;1e4&lt;/span&gt;)
   sigma.n ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e4&lt;/span&gt;) 
   Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;diff /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I
   y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(Mu, &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Sigma)  
})
obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
                   &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))

N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
diff &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(obs$x, obs$x, function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;diff =&lt;/span&gt; diff, &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)
m &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error in x$parentNodeExprs[[iV]][[iDim + 2]]: object of type &amp;#39;symbol&amp;#39; is not subsettable&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gp-model-v2&quot;&gt;GP Model, v2&lt;/h2&gt;
&lt;p&gt;This model definition still doesn’t work, even though it appears to be more explicit&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({

   l ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
   sigma.n ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
   SE &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(xi,xj, l) &lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(xi -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;xj) ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
   Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], SE, l) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]
   y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(Mu[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N])  

})
obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
                   &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)
&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Error in replaceConstantsRecurse(x, constEnv, constNames): Error, hit end&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;gp-model&quot;&gt;GP Model&lt;/h2&gt;
&lt;p&gt;A successful specification looks like this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;code &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({

   l ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;# dgamma(5, 5)&lt;/span&gt;
   sigma.n ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;# dgamma(5, 5) &lt;/span&gt;
   Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;diff[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sigma.n ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N]
   y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dmnorm&lt;/span&gt;(Mu[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N], &lt;span class=&quot;dt&quot;&gt;cov =&lt;/span&gt; Sigma[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N])  

})&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;),
                   &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, -&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))

N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
diff &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(obs$x, obs$x, function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;diff =&lt;/span&gt; diff, &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)
m &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define our mcmc procedure in Nimble&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;my_mcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(code, constants, data, inits, &lt;span class=&quot;dt&quot;&gt;n_iter=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;thin =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;){  
  Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
  Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
  mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;thin)
  Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
  Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
  Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(n_iter)
  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
  &lt;span class=&quot;co&quot;&gt;#samples &amp;lt;- samples[,1:(length(inits)-1)]&lt;/span&gt;
  &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits, &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

      key         mean          std
1       l 49845.347322 29128.275365
2 sigma.n     2.188315     1.372436&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample_n&lt;/span&gt;(df,&lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-03-GP-nimble-setup/unnamed-chunk-10-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-03-GP-nimble-setup/unnamed-chunk-11-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;time-series-example&quot;&gt;Time-series example&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function (x, p){ x *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(p[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]) }
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)
z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)
T &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;

&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1234&lt;/span&gt;)
x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(T)
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;

for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(T&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;))
  x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;z_g&lt;/span&gt;() *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x[t], &lt;span class=&quot;dt&quot;&gt;p=&lt;/span&gt;p)

&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(x), x)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x=&lt;/span&gt;x)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-03-GP-nimble-setup/unnamed-chunk-12-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;model-setup&quot;&gt;model setup&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;obs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x=&lt;/span&gt;x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(T&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)], &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; x[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:T])
N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(obs$x)
diff &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;outer&lt;/span&gt;(obs$x, obs$x, function(xi, xj) (xi-xj)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
constants =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; obs$x, &lt;span class=&quot;dt&quot;&gt;Mu =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,N), &lt;span class=&quot;dt&quot;&gt;diff =&lt;/span&gt; diff, &lt;span class=&quot;dt&quot;&gt;I =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;diag&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;l =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma.n =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; obs$y)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;estimate-gp-bm-mcmc-with-nimble&quot;&gt;Estimate GP bm MCMC with Nimble&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits, &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-1&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

      key      mean        std
1       l 3.8059775 0.60843921
2 sigma.n 0.3641306 0.04565619&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-1&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sample_n&lt;/span&gt;(df,&lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-03-GP-nimble-setup/unnamed-chunk-16-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-1&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-03-03-GP-nimble-setup/unnamed-chunk-17-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes</title>
   <link href="http://www.carlboettiger.info/2015/03/02/notes.html"/>
   <updated>2015-03-02T00:00:00+00:00</updated>
   <id>/03/02/notes</id>
   <content type="html">&lt;h2 id=&quot;misc-tricks&quot;&gt;Misc tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docker X11 sharing&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run  -ti --rm -e DISPLAY=&lt;span class=&quot;ot&quot;&gt;$DISPLAY&lt;/span&gt; -v /tmp/.X11-unix:/tmp/.X11-unix:ro r-base&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;devtools::install_version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;devtools::use_readme_rmd&lt;/code&gt; (with git commit hooks)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to specify a custom action for the knit button: add &lt;code&gt;knit: (function(inputFile, encoding) ...)&lt;/code&gt; to the top-level YAML header; e.g. to control output directory:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;rmarkdown::&lt;span class=&quot;kw&quot;&gt;render&lt;/span&gt;(inputFile, 
                  &lt;span class=&quot;dt&quot;&gt;encoding =&lt;/span&gt; encoding, 
                  &lt;span class=&quot;dt&quot;&gt;output_file =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;paste0&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;dirname&lt;/span&gt;(inputFile),
                                       &lt;span class=&quot;kw&quot;&gt;basename&lt;/span&gt;(inputFile), 
                                       &lt;span class=&quot;st&quot;&gt;&amp;quot;.pdf&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Nimble On Dai Model</title>
   <link href="http://www.carlboettiger.info/2015/02/25/nimble-on-dai-model.html"/>
   <updated>2015-02-25T00:00:00+00:00</updated>
   <id>/02/25/nimble-on-dai-model</id>
   <content type="html">&lt;h2 id=&quot;testing-nimble-method-on-dai-model&quot;&gt;Testing nimble method on Dai model&lt;/h2&gt;
&lt;p&gt;(shorter data series)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;devtools::&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;cboettig/regimeshifts&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Define our mcmc procedure in Nimble&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;my_mcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(code, constants, data, inits, &lt;span class=&quot;dt&quot;&gt;n_iter=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;thin =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;){
  Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
  Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
  mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;thin)
  Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
  Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
  Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(n_iter)
  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(inits)-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]
  &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate the test data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;)
max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;max_days) &lt;span class=&quot;co&quot;&gt;# schedule for env degredation (increased dilution)&lt;/span&gt;
x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)   
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# initial density&lt;/span&gt;
   
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
 x[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dai&lt;/span&gt;(x[day], &lt;span class=&quot;dt&quot;&gt;DF =&lt;/span&gt; DF[day])
}

raw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:max_days, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detrend:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(raw$x)
raw$t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N
detrend &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;loess&lt;/span&gt;(x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t, raw)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; detrend$residuals/&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(detrend$residuals)))
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(raw$t, data$x, &lt;span class=&quot;dt&quot;&gt;geom=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/detrend-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;ou-model&quot;&gt;OU Model&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ou &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
       r ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;20.0&lt;/span&gt;)
   sigma ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)

  for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu[t] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[t] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;r *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[t]) 
    x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu[t], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma) 
  }
})

ou_constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N)
ou_inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;r =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e-3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the mcmc&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;ou, ou_constants, data, ou_inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

    key      mean       std
1     r 0.7866844 0.1600235
2 sigma 1.0375633 0.1113334&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-8-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-9-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-version&quot;&gt;LSN version&lt;/h2&gt;
&lt;p&gt;A modified version of the LSN model to explicitly model the changing parameter as a hidden variable changing at constant rate&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
 sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;) 

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i]) 
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x) 
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[N] 
    
  }
})

constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;lsn, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-1&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [3 x 3]

      key        mean        std
1       m -0.02060616 0.02779506
2 sigma_x  1.03148569 0.11158787
3   theta -0.03136262 0.18565435&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-1&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-1&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-14-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-stochastic-hidden-variable&quot;&gt;LSN, stochastic hidden variable&lt;/h2&gt;
&lt;h4 id=&quot;define-and-model-and-run-mcmc&quot;&gt;Define and model and run MCMC&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
   sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
   sigma_y ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i])
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x)
    mu_y[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[N]
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_y[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_y) 
  }
})

constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;lsn, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-2&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [4 x 3]

      key         mean        std
1       m -0.008170135 0.06970863
2 sigma_x  1.023650010 0.11068862
3 sigma_y  0.171747380 0.14767809
4   theta -0.025881301 0.18058435&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-2&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-18-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-2&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-25-nimble-on-dai-model/unnamed-chunk-19-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.1.2 (2014-10-31)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] methods   stats     graphics  grDevices utils     datasets 
[7] base     

other attached packages:
[1] dplyr_0.4.1             ggplot2_1.0.0          
[3] tidyr_0.2.0             regimeshifts_0.0.0.9000
[5] nimble_0.3              yaml_2.1.13            
[7] knitr_1.9              

loaded via a namespace (and not attached):
 [1] assertthat_0.1   bitops_1.0-6     codetools_0.2-10
 [4] colorspace_1.2-4 DBI_0.3.1        devtools_1.7.0  
 [7] digest_0.6.8     evaluate_0.5.5   formatR_1.0     
[10] grid_3.1.2       gtable_0.1.2     httr_0.6.1      
[13] igraph_0.7.1     labeling_0.3     lazyeval_0.1.10 
[16] magrittr_1.5     MASS_7.3-39      munsell_0.4.2   
[19] parallel_3.1.2   plyr_1.8.1       proto_0.3-10    
[22] Rcpp_0.11.4      RCurl_1.95-4.5   reshape2_1.4.1  
[25] scales_0.2.4     stringr_0.6.2    tools_3.1.2     &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Nimble On Dai Model</title>
   <link href="http://www.carlboettiger.info/2015/02/24/nimble-on-dai-model.html"/>
   <updated>2015-02-24T00:00:00+00:00</updated>
   <id>/02/24/nimble-on-dai-model</id>
   <content type="html">&lt;h2 id=&quot;testing-nimble-method-on-dai-model&quot;&gt;Testing nimble method on Dai model&lt;/h2&gt;
&lt;p&gt;(long data series)&lt;/p&gt;
&lt;p&gt;Define our mcmc procedure in Nimble&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;my_mcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(code, constants, data, inits, &lt;span class=&quot;dt&quot;&gt;n_iter=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;thin =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;){
  Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; code, &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
  Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)
  mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;thin)
  Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
  Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)
  Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(n_iter)
  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
  samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(inits)-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]
  &lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate the test data:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;)
max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;max_days) &lt;span class=&quot;co&quot;&gt;# schedule for env degredation (increased dilution)&lt;/span&gt;
x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)   
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# initial density&lt;/span&gt;
   
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
 x[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dai&lt;/span&gt;(x[day], &lt;span class=&quot;dt&quot;&gt;DF =&lt;/span&gt; DF[day])
}

raw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:max_days, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Detrend:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(raw$x)
raw$t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N
detrend &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;loess&lt;/span&gt;(x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t, raw)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; detrend$residuals/&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(detrend$residuals)))
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(raw$t, data$x, &lt;span class=&quot;dt&quot;&gt;geom=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/detrend-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;ou-model&quot;&gt;OU Model&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ou &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
       r ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;20.0&lt;/span&gt;)
   sigma ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)

  for(t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu[t] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[t] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;r *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[t]) 
    x[t&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu[t], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma) 
  }
})

ou_constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N)
ou_inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;r =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1e-3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the mcmc&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;ou, ou_constants, data, ou_inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [2 x 3]

    key      mean        std
1     r 0.2075146 0.02739447
2 sigma 0.6156283 0.01975407&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-7-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-8-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-version&quot;&gt;LSN version&lt;/h2&gt;
&lt;p&gt;A modified version of the LSN model to explicitly model the changing parameter as a hidden variable changing at constant rate&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
 sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;) 

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i]) 
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x) 
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[N] 
    
  }
})

constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;lsn, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-1&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [3 x 3]

      key         mean          std
1       m -0.003984249 0.0005859252
2 sigma_x  0.575993873 0.0185972953
3   theta -0.010341240 0.0410488393&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-1&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-12-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-1&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-13-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-stochastic-hidden-variable&quot;&gt;LSN, stochastic hidden variable&lt;/h2&gt;
&lt;h4 id=&quot;define-and-model-and-run-mcmc&quot;&gt;Define and model and run MCMC&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
   sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
   sigma_y ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i])
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x)
    mu_y[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i] /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[N]
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_y[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_y) 
  }
})

constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)
inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;my_mcmc&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code=&lt;/span&gt;lsn, constants, data, inits)&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;summary-statistics-2&quot;&gt;Summary statistics&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summarise&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;group_by&lt;/span&gt;(df, key), &lt;span class=&quot;dt&quot;&gt;mean=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), &lt;span class=&quot;dt&quot;&gt;std=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(value)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Source: local data frame [4 x 3]

      key         mean         std
1       m -0.003001092 0.004531153
2 sigma_x  0.563929151 0.020224310
3 sigma_y  0.048817421 0.036018516
4   theta  0.010243795 0.045674221&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;traces-2&quot;&gt;Traces&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-17-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h4 id=&quot;posteriors-2&quot;&gt;Posteriors&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-24-nimble-on-dai-model/unnamed-chunk-18-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;hr /&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.2.1 (2015-06-18)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux stretch/sid

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] methods   stats     graphics  grDevices utils     datasets 
[7] base     

other attached packages:
[1] dplyr_0.4.2             ggplot2_1.0.1          
[3] tidyr_0.2.0             regimeshifts_0.0.0.9000
[5] nimble_0.4              yaml_2.1.13            
[7] knitr_1.10.5           

loaded via a namespace (and not attached):
 [1] igraph_1.0.1     Rcpp_0.12.0      magrittr_1.5    
 [4] MASS_7.3-43      munsell_0.4.2    colorspace_1.2-6
 [7] R6_2.1.0         stringr_1.0.0    plyr_1.8.3      
[10] tools_3.2.1      parallel_3.2.1   grid_3.2.1      
[13] gtable_0.1.2     DBI_0.3.1        lazyeval_0.1.10 
[16] digest_0.6.8     assertthat_0.1   reshape2_1.4.1  
[19] formatR_1.2      codetools_0.2-14 evaluate_0.7    
[22] labeling_0.3     stringi_0.5-5    scales_0.2.5    
[25] proto_0.3-10    &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Question-and-Answer-post on my use of Docker in research</title>
   <link href="http://www.carlboettiger.info/2015/02/24/docker-science-question-and-answer.html"/>
   <updated>2015-02-24T00:00:00+00:00</updated>
   <id>/02/24/docker-science-question-and-answer</id>
   <content type="html">&lt;p&gt;I received an interesting email from an academic computing unit regarding the use of Docker in my research:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We’ve been reading, listing, and prototyping best practices for building base images, achieving image composition, addressing interoperability, and standardizing on common APIs. When I read your paper, I thought you might have some opinions on the subject.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Would you be willing to share your experiences using Docker for research with our team? It doesn’t have to be a formal presentation. In fact, we generally prefer interactive conversations over slides, abstracts, etc. I appreciate that you must be terribly busy with your postdoc fellowship and rOpenScience responsibilities. If you’re not able to speak, perhaps you can answer a few questions about your use of Docker.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here are some quick answers in reply; though like the questions themselves my replies are on the technical end and don’t give a useful overview of how I’m actually using Docker. Maybe that’s a subject for another post some time.&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;Are you currently still using Docker for your research? If so, how are you integrating that into your more demanding computational needs?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yes. Docker helps me quickly provision and deploy a temporary compute environment on a cloud server with resources appropriate to the computation. This model much more accurately reflects the nature of computational research in a discipline such as ecology than does the standard HPC cluster model. My research typically involves many different tasks that can be easily separated and do not need the specialized architecture of a supercomputer, but do rely on a wide range of existing software tools and frequently also rely on internet connectivity for accessing certain data resources, etc. Because Docker makes it very easy for me to deploy customized software environments locally and on cloud computing resources, it facilitates my process of testing, scaling and distributing tasks to the appropriate computational resources quickly, while also increasing the portability &amp;amp; reproducibility of my work by colleagues who can benefit from the prebuilt environment provided by the container.&lt;/p&gt;
&lt;ol start=&quot;2&quot; type=&quot;1&quot;&gt;
&lt;li&gt;How/do you make use of data containers?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I rarely make use of data containers. I find they, and container orchestration more generally, are very well suited for deploying a service app (such as an API), but are less natural for composing scientific research environments which requires orchestrating volumes instead of tcp links. For instance, at present, there is no interface in &lt;code&gt;--volumes-from&lt;/code&gt; to mount the shared volume at a different mount point in the different container. Thus one cannot just link libraries from different containers with a &lt;code&gt;-v /usr/lib&lt;/code&gt; or &lt;code&gt;-v /usr/bin&lt;/code&gt;, as this would clobber the existing libraries.&lt;/p&gt;
&lt;p&gt;Also, it’s rather a nuisance that on the current Debian/Ubuntu kernels at least, &lt;code&gt;docker rm&lt;/code&gt; does not fully clean up space from data containers (though we now have &lt;code&gt;docker rm -v&lt;/code&gt;)&lt;/p&gt;
&lt;ol start=&quot;3&quot; type=&quot;1&quot;&gt;
&lt;li&gt;What are you using to run your containers in production?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Production is a diverse notion in scientific research – from a software perspective scientific work is almost 100% development and 0% production. For containers running public, always-on services, I tend to run from a dedicated, appropriately resourced cloud server such as Digital Ocean. I don’t write such services very often (though we have been doing this to deploy public APIs for data recently), so this is the closest I get to ‘production’. I run my development environment and all my research code out of containers as well, both locally and on various cloud servers.&lt;/p&gt;
&lt;p&gt;In all cases, I tend to run containers using the Docker CLI. I’ve found fig places larger resource requirements to run the same set of containers – so much so that it will fail to start on a machine that can run the containers fine from CLI or Fleet. fig also feels immature; it does not provide anything close to parity with the Docker CLI options.&lt;/p&gt;
&lt;p&gt;Further, while I find orchestration a powerful concept that is well suited for certain use-cases (our recent API uses five containers), for many academic research uses I find that orchestration is both unnecessary and a barrier to use. Orchestration works really well for professionally designed, web native, open source stack: our recent API deployment uses Redis, MySQL, NGINX, Sinatra, Unicorn, Logstash, ElasticSearch and Kibana – services that are all readily composed from official Docker containers into an existing application. Most scientific work looks nothing like this – the common elements tend to be shared libraries that are not well adapted to the same abstraction into separate services.&lt;/p&gt;
&lt;ol start=&quot;4&quot; type=&quot;1&quot;&gt;
&lt;li&gt;How are you sharing them aside from the Docker Hub?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Primarily through making the Dockerfiles available on Github. This makes it easy for others to build the images locally, and also fork and modify the Dockerfile directly. I maintain a private Docker registry as well but rarely have need for it.&lt;/p&gt;
&lt;ol start=&quot;5&quot; type=&quot;1&quot;&gt;
&lt;li&gt;Do you have practical experience and advice about achieving real portability with Docker across hosting environments (ie. stick with X as an OS, use a sidekick and data container for data backups and snapshotting, etc)?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Overall this hasn’t been much of an issue. Sharing volumes with the host machine on hosts that require virtualization/boot2docker was an early problem, though this has been much better since Docker 1.3. In a similar vein, getting &lt;code&gt;boot2docker&lt;/code&gt; running on older hardware can be problematic. And of course docker isn’t really compatible with 32 bit machines.&lt;/p&gt;
&lt;p&gt;After spending some time with CoreOS, I tend to use Ubuntu machines when running in the cloud: ‘highly available’ isn’t much of a priority in the research context, where few things are at a scale where hardware failure is an issue. I found CoreOS worked poorly on individual machines or cluster sizes that might shrink below 2; while the new OS model was a barrier to entry for myself and for collaborators. I suspect this situation will improve dramatically as these tools gain polish and abstraction that requires less manual tooling for common patterns (I find that ambassador containers, sidekick containers, etc place too many OS-level tasks on the shoulders of the user). Of course there is a large ecosystem of solutions in this space, which also needs time to harden into standards.&lt;/p&gt;
&lt;p&gt;Perhaps my comments re: CLI vs fig in Q3 are also relevant here?&lt;/p&gt;
&lt;ol start=&quot;6&quot; type=&quot;1&quot;&gt;
&lt;li&gt;Have the computational requirements of your research codes outgrown a physical node?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Not at the present. I’ve run prior work on clusters on a campus and at the DOE’s Carver machine at NERSC, though at this time I can almost always meet computational needs with the larger single instances of a service like EC2 or DigitalOcean. Much more often I have the need to run many different codes (sometimes related things that could be parallelized in a single command but are better off distributed, but much more often unrelated tasks) at the same time. Being able to deploy these in isolated, pre-provisioned environments on one or multiple machines using Docker has thus been a huge gain in both my efficiency and realized computational performance. If any particular task becomes too intensive, Docker makes it very easy to move over to a new cloud instance with more resources that will not interfere with other tasks.&lt;/p&gt;
&lt;ol start=&quot;7&quot; type=&quot;1&quot;&gt;
&lt;li&gt;Do you have a workflow for versioning and releasing images comparable to GitFlow?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nope, though maybe this would be a good idea. I work almost exclusively with automated builds and hardly ever use &lt;code&gt;docker commit&lt;/code&gt;. Though the Dockerfiles themselves are versioned, obviously the software that is installed between different automated builds can differ substantially, and there is in general no way to recover an earlier build. Using a &lt;code&gt;docker commit&lt;/code&gt; workflow instead would provide this more versioned history and greater stability of the precise binaries installed, but also feels more like a black box as the whole thing cannot then be reproduced from scratch.&lt;/p&gt;
&lt;ol start=&quot;8&quot; type=&quot;1&quot;&gt;
&lt;li&gt;Do you version your Dockerfile/image/source code separately?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I version all my Dockerfiles with git. I version my images as needed but more rarely, and in a way that reflects the version of the predominant software they install (e.g. r-base:3.1.2).&lt;/p&gt;
&lt;ol start=&quot;9&quot; type=&quot;1&quot;&gt;
&lt;li&gt;Do you prefer using the entrypoint or command to run your containers by default?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I prefer command (&lt;code&gt;CMD&lt;/code&gt;), as it is more semantic, easier to alter the default and can take longer strings (no need for a flag).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dai Model</title>
   <link href="http://www.carlboettiger.info/2015/02/12/dai-model.html"/>
   <updated>2015-02-12T00:00:00+00:00</updated>
   <id>/02/12/dai-model</id>
   <content type="html">&lt;h2 id=&quot;a-first-go-at-implementing-the-dai-et-al-model&quot;&gt;A first go at implementing the Dai et al model&lt;/h2&gt;
&lt;p&gt;From the supplement to &lt;a href=&quot;http://doi.org/10.1126/science.1219805&quot;&gt;10.1126/science.1219805&lt;/a&gt;, we have:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[n_{t+1} = n_t g(n_t + \epsilon n_t, \theta)\]&lt;/span&gt; &lt;span class=&quot;math&quot;&gt;\[g(n_t) = \frac{n_{t+1}}{n_t}\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This model is based on two phases of daily growth: a slow exponential growth phase at low cell densities, followed by a logistic growth phase with a higher per capita growth rate at intermediate cell densities. This model has 5 parameters: T lag is the lag time before yeast cells start to grow after being transferred into new media (the total time for daily growth is 23 hours). In the slow exponential phase, the population grows with a constant per capita growth rate γ low . After the population reaches a threshold density N c , the subsequent logistic growth is determined by γ high (γ high &amp;gt;γ low ) and the carrying capacity K&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[\frac{1}{N}\frac{dN}{dt} = 
    \left\{
      \begin{array}{ll}
        \gamma_{\textrm{low}} &amp;amp; N &amp;lt; N_c \\
        \gamma_{\textrm{high}} \left(1 - \frac{N}{K}\right) &amp;amp;  N_c &amp;lt;= N &amp;lt; K 
      \end{array}
    \right.\]&lt;/span&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;A bit surprised by the model formulation here, particularly that a threshold response is built in at a critical density &lt;span class=&quot;math&quot;&gt;\(N_c\)&lt;/span&gt;. Seems like this could emerge by explicitly modeling the positive density dependence due to the cooperative break-down of sugar, which should result in a smoother dependence between growth and density. A discontinuous growth model isn’t particularly satisfying as and cannot arise very directly from an individual-based description. Anyway, onwards.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Okay, a bit of work is needed before we can simulate this from the description. Integrating this over time gives us exponential growth below &lt;span class=&quot;math&quot;&gt;\(N_c\)&lt;/span&gt; and something Beverton-Holt-esque above &lt;span class=&quot;math&quot;&gt;\(N_c\)&lt;/span&gt;,&lt;/p&gt;
&lt;p&gt;The ODE we can integrate analytically, &lt;span class=&quot;math&quot;&gt;\[x_t = K \exp(r t + K c_1) / (\exp(r t + K c_1) - 1)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And solve for the constant if integration using the initial condition,&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[\begin{align*} 
&amp;amp; N_0 =  K \exp( K c_1) / (\exp( K c_1) - 1) \\
&amp;amp; N_0 (\exp( K c_1) - 1) =  K \exp( K c_1) \\
&amp;amp; K \exp( K c_1) - N_0 \exp( K c_1) + N_0 = 0 \\
&amp;amp; \exp( K c_1)( K  - N_0) + N_0 = 0 \\
&amp;amp; \exp(K c_1) = N_0 / (K - N_0) \\
&amp;amp; \exp(K c_1) = 1/(K/N_0 - 1) =: B
\end{align*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So substituting for the IC we have,&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math&quot;&gt;\[\begin{align*} 
x_t &amp;amp; = K B \exp(r t )  / (B \exp(r t) - 1) \\
    &amp;amp; = K \exp(r t )  / (\exp(r t) - 1/B)  \\
    &amp;amp;  = K \exp(r t )  / (\exp(r t) - 1 + K/N_0) \\
    &amp;amp;  = K / (1 +   (K/N_0 - 1) \exp( - r t) ) 
\end{align*}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;From here we define the function as described, using parameters from Table S1&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(n_t, 
              &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# Hours between serial dilutions&lt;/span&gt;
              &lt;span class=&quot;dt&quot;&gt;epsilon =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.15&lt;/span&gt;), 
              &lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;gamma_high =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.439&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
                        &lt;span class=&quot;dt&quot;&gt;gamma_low =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.309&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
                        &lt;span class=&quot;dt&quot;&gt;T_lag =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.97&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr&lt;/span&gt;
                        &lt;span class=&quot;dt&quot;&gt;N_c =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.76e2&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# cells/μl&lt;/span&gt;
                        &lt;span class=&quot;dt&quot;&gt;K =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt;),  &lt;span class=&quot;co&quot;&gt;# cells/μl&lt;/span&gt;
              &lt;span class=&quot;dt&quot;&gt;DF =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;600&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;# dilution factor&lt;/span&gt;
{
  ## avoid referencing these repeatedly for readability and speed
  gamma_high &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[[&lt;span class=&quot;st&quot;&gt;&amp;quot;gamma_high&amp;quot;&lt;/span&gt;]]
  gamma_low &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[[&lt;span class=&quot;st&quot;&gt;&amp;quot;gamma_low&amp;quot;&lt;/span&gt;]]
  T_lag &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[[&lt;span class=&quot;st&quot;&gt;&amp;quot;T_lag&amp;quot;&lt;/span&gt;]]
  N_c &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[[&lt;span class=&quot;st&quot;&gt;&amp;quot;N_c&amp;quot;&lt;/span&gt;]]
  K &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;theta[[&lt;span class=&quot;st&quot;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;]]
  
  
  ## Dilute and start growing. (Stochasticity enters only via the dilution process)
  n_t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t  *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;epsilon) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DF
  
  &lt;span class=&quot;co&quot;&gt;# Lag phase, could have been scaled out of the model&lt;/span&gt;
  if(t &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;T_lag)
    n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t
  
  ## Numerical happiness
  if(n_t &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e-20&lt;/span&gt;)
    n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
  
  ## Actual model
  else {
    
    if(n_t &amp;lt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N_c){ &lt;span class=&quot;co&quot;&gt;# Needs to switch once n &amp;gt; N_c&lt;/span&gt;
      
      ## Analytically find out how long before we leave the low-growth regime
      t_c &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(N_c /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t) /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;gamma_low +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;T_lag
      
      ## Um, now this should just be equal to N_c
      n_low &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;((t_c -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;T_lag) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;gamma_low) 
      
      ## Spend remaining time in &amp;gt; N_c growth regime:      
      tau &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t_c        
      n_t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_low
      n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;K  /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(K /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;gamma_high *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tau))
    
      
    } else if(n_t &amp;gt;=&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N_c){
      ## simpler if we&amp;#39;re always in the high-growth regime:
      tau &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;T_lag
      n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;K /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(K /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;gamma_high *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tau))
      
    }
  }
  &lt;span class=&quot;co&quot;&gt;# And now we can return n_{t+1}&lt;/span&gt;
  n_t1
}&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;Aside from whether or not I’ve gotten the math right, there’s a bit of guesswork here as to whether this matches the author’s implementation of the model. Numerical issues worth thinking about include what form gives best floating-point stability, not just most consise, way to represent these; e.g. are these numerically identical:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;K /(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(K /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_low -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;gamma_high *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tau))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;n_t1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;K *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(gamma_high *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tau )  /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(n_t *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(gamma_high *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;tau) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n_t +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;K)&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;model-simulations&quot;&gt;Model simulations&lt;/h2&gt;
&lt;p&gt;We can demonstrate alternative stable states from this configuration, starting from similar initial densities:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;30&lt;/span&gt;
n &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)
x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)
n[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;
x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;5e2&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;123&lt;/span&gt;)
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
  n[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;g&lt;/span&gt;(n[day])
  x[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;g&lt;/span&gt;(x[day])
}

df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:max_days, &lt;span class=&quot;dt&quot;&gt;n =&lt;/span&gt; n, &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x)

&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(df) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(t, n), &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(t, x), &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_log10&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-12-dai-model/unnamed-chunk-3-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;regime-shift&quot;&gt;Regime Shift&lt;/h2&gt;
&lt;p&gt;We simulate the experiment presented in the orginal paper by gradually increasing the dilution factor over time:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Stepwise changes&lt;/span&gt;
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.numeric&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;), rep, &lt;span class=&quot;dv&quot;&gt;40&lt;/span&gt;))

&lt;span class=&quot;co&quot;&gt;# continuous linear increase&lt;/span&gt;
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)

max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(DF)
y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)

y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt;
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
  y[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;g&lt;/span&gt;(y[day], &lt;span class=&quot;dt&quot;&gt;DF =&lt;/span&gt; DF[day])
}

&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(y), y)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-12-dai-model/unnamed-chunk-4-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Decreasing K should model decreasing sucrose I think?&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;K_0 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# continuous linear increase&lt;/span&gt;
sucrose &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(K_0, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)

max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(sucrose)
y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)

y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
  theta =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;gamma_high =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;gamma_low =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;T_lag =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.97&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;N_c =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.76e2&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# cells/μl&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;K =&lt;/span&gt; sucrose[day])
  y[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;g&lt;/span&gt;(y[day], &lt;span class=&quot;dt&quot;&gt;theta=&lt;/span&gt;theta)
}

&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(y), y) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_hline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;yintercept=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;2.76e2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-12-dai-model/unnamed-chunk-5-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Turn down the noise and increase &lt;span class=&quot;math&quot;&gt;\(N_c\)&lt;/span&gt; for a slightly more visible critical transition:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;N_c &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;2e3&lt;/span&gt;
K_0 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1.76e5&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# continuous linear increase&lt;/span&gt;
sucrose &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(K_0, .&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N_c, &lt;span class=&quot;dt&quot;&gt;length=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e3&lt;/span&gt;)

max_days &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(sucrose)
y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(max_days)

y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;1e5&lt;/span&gt;
for(day in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(max_days&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
  theta =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;gamma_high =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;gamma_low =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr^-1&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;T_lag =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;2.97&lt;/span&gt;, &lt;span class=&quot;co&quot;&gt;# hr&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;N_c =&lt;/span&gt; N_c, &lt;span class=&quot;co&quot;&gt;# cells/μl&lt;/span&gt;
            &lt;span class=&quot;dt&quot;&gt;K =&lt;/span&gt; sucrose[day])
  y[day&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;g&lt;/span&gt;(y[day], &lt;span class=&quot;dt&quot;&gt;theta=&lt;/span&gt;theta, &lt;span class=&quot;dt&quot;&gt;epsilon=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,.&lt;span class=&quot;dv&quot;&gt;01&lt;/span&gt;))
}

&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(y), y) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_hline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;yintercept =&lt;/span&gt; N_c, &lt;span class=&quot;dt&quot;&gt;lty=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-02-12-dai-model/unnamed-chunk-6-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Much more to do: Would be nice to add simulations of the computation of the bifucation using replicates run a different fixed dilution regimes.&lt;/p&gt;
&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;
&lt;p&gt;[1] L. Dai, D. Vorselen, K. S. Korolev, et al. “Generic Indicators for Loss of Resilience Before a Tipping Point Leading to Population Collapse”. In: &lt;em&gt;Science&lt;/em&gt; 336.6085 (May. 2012), pp. 1175-1177. DOI: 10.1126/science.1219805. &lt;URL:
http://dx.doi.org/10.1126/science.1219805&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fun Standardizing Non Standard Evaluation</title>
   <link href="http://www.carlboettiger.info/2015/02/06/fun-standardizing-non-standard-evaluation.html"/>
   <updated>2015-02-06T00:00:00+00:00</updated>
   <id>/02/06/fun-standardizing-non-standard-evaluation</id>
   <content type="html">&lt;p&gt;Using &lt;code&gt;dplyr&lt;/code&gt; calls on the back-end of the &lt;code&gt;rfishbase&lt;/code&gt; re-write means working around the non-standard evaluation (NSE), as described in the &lt;a href=&quot;&quot;&gt;&lt;code&gt;dplyr&lt;/code&gt; vignette&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Grab the data I was using for this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;dplyr&amp;quot;&lt;/span&gt;)
downloader::&lt;span class=&quot;kw&quot;&gt;download&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;https://github.com/cboettig/2015/raw/fc0d9185659e7976927d0ec91981912537ac6018/assets/data/2015-02-06-taxa.csv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;taxa.csv&amp;quot;&lt;/span&gt;)
all_taxa &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;taxa.csv&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Consider a simple NSE &lt;code&gt;dplyr&lt;/code&gt; call:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter&lt;/span&gt;(all_taxa, Family ==&lt;span class=&quot;st&quot;&gt; &amp;#39;Scaridae&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The best SE version of this just needs to use the formula expression, &lt;code&gt;~&lt;/code&gt;, the &lt;code&gt;_&lt;/code&gt; SE version of the function and it’s &lt;code&gt;.dots&lt;/code&gt; argument:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;.dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(~Family ==&lt;span class=&quot;st&quot;&gt; &amp;#39;Scaridae&amp;#39;&lt;/span&gt;)
x1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(all_taxa, &lt;span class=&quot;dt&quot;&gt;.dots=&lt;/span&gt;.dots)

&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(x, x1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This lets us treat the arguments (e.g. values of the factor on which we filter) as variables:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;family &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;#39;Scaridae&amp;#39;&lt;/span&gt;
.dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(~Family ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;family)
x2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(all_taxa, &lt;span class=&quot;dt&quot;&gt;.dots=&lt;/span&gt;.dots)
&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(x, x2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we want both the key and value to vary, we need to get pretty fancy to subvert the non-standard evaluation:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(lazyeval)
family &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;#39;Scaridae&amp;#39;&lt;/span&gt;
field &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;#39;Family&amp;#39;&lt;/span&gt;
.dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;interp&lt;/span&gt;(~y ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x, 
                     &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as.name&lt;/span&gt;(field), &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; family)))
x3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(all_taxa, &lt;span class=&quot;dt&quot;&gt;.dots=&lt;/span&gt;.dots)
&lt;span class=&quot;kw&quot;&gt;identical&lt;/span&gt;(x, x3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At bit more fun to wrap this into a function where we take arbitrary number of arguments as name-value pairs:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;query &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Family =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;Scaridae&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;SpecCode =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5537&lt;/span&gt;)
dots &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(query), function(level){
    value &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;query[[level]]
    &lt;span class=&quot;kw&quot;&gt;interp&lt;/span&gt;(~y ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x, 
                &lt;span class=&quot;dt&quot;&gt;.values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;as.name&lt;/span&gt;(level), &lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; value))
  })
  
x3 &amp;lt;-&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;filter_&lt;/span&gt;(all_taxa, &lt;span class=&quot;dt&quot;&gt;.dots =&lt;/span&gt; dots) &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Dockerizing Fishbase Api</title>
   <link href="http://www.carlboettiger.info/2015/02/03/dockerizing-fishbase-api.html"/>
   <updated>2015-02-03T00:00:00+00:00</updated>
   <id>/02/03/dockerizing-fishbase-api</id>
   <content type="html">&lt;h3 id=&quot;dockerized-mysql-background&quot;&gt;Dockerized MySQL background&lt;/h3&gt;
&lt;p&gt;Figuring out using an external MySQL docker container for the in-development fishbase API.&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run --name some-mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run --rm -ti --link some-mysql:mysql ubuntu:latest bash&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we’re inside the ubuntu container we can see linked environment:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;env&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;shows&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HOSTNAME=57fd2b08094a
MYSQL_ENV_MYSQL_ROOT_PASSWORD=mysecretpassword
TERM=xterm
MYSQL_PORT_3306_TCP_PORT=3306
MYSQL_PORT_3306_TCP=tcp://172.17.0.32:3306
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PWD=/
MYSQL_ENV_MYSQL_VERSION=5.6.22
SHLVL=1
HOME=/root
MYSQL_NAME=/some-app/mysql
MYSQL_PORT_3306_TCP_PROTO=tcp
MYSQL_PORT_3306_TCP_ADDR=172.17.0.32
LESSOPEN=| /usr/bin/lesspipe %s
MYSQL_ENV_MYSQL_MAJOR=5.6
MYSQL_PORT=tcp://172.17.0.32:3306
LESSCLOSE=/usr/bin/lesspipe %s %s
_=/usr/bin/env&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great. Now we need a mysql client to access the host:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; update &lt;span class=&quot;kw&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;apt-get&lt;/span&gt; install -y mysql-client-core-5.6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we cannot simply do:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mysql&lt;/span&gt; --password=&lt;span class=&quot;ot&quot;&gt;$MYSQL_ENV_MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which gives the error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ERROR 2002 (HY000): Can&amp;#39;t connect to local MySQL server through socket &amp;#39;/var/run/mysqld/mysqld.sock&amp;#39; (2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instead, we must also specify the protocol and port of the server:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mysql&lt;/span&gt; --host=&lt;span class=&quot;ot&quot;&gt;$MYSQL_PORT_3306_TCP_ADDR&lt;/span&gt; --protocol=&lt;span class=&quot;ot&quot;&gt;$MYSQL_PORT_3306_TCP_PROTO&lt;/span&gt; --password=&lt;span class=&quot;ot&quot;&gt;$MYSQL_ENV_MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; It’s much better to use the hostname provided by the linked container in &lt;code&gt;/etc/hosts&lt;/code&gt;. This automatically binds the name used in the link &lt;code&gt;mysql&lt;/code&gt; to the linked container’s IP address, so we can simply do: &lt;code&gt;mysql =--host=mysql --password=$MYSQL_ENV_MYSQL_ROOT_PASSWORD&lt;/code&gt; (protocol, like the port, is guessed implicitly from host). Unlike the env var solution, the &lt;code&gt;/etc/hosts&lt;/code&gt; file is updated if the &lt;code&gt;mysql&lt;/code&gt; container restarts.&lt;/p&gt;
&lt;p&gt;and we’re good to go:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Warning: Using a password on the command line interface can be insecure.
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 5
Server version: 5.6.22 MySQL Community Server (GPL)

Copyright (c) 2000, 2014, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the current input statement.

mysql&amp;gt; &lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;applying-this-in-fishbaseapi&quot;&gt;Applying this in fishbaseapi&lt;/h3&gt;
&lt;p&gt;Scott has put together a nice start to the fishbase API built on Ruby’s &lt;code&gt;sinatra&lt;/code&gt; gem.&lt;/p&gt;
&lt;p&gt;First step is to import the SQL database archive.&lt;/p&gt;
&lt;p&gt;For our database to persist even if our container is destroyed, we link it to a local volume. So we start a &lt;code&gt;mysql&lt;/code&gt; container with a local volume link, e.g. to &lt;code&gt;/opt/fishbase/data&lt;/code&gt; on the server:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sudo&lt;/span&gt; mkdir -p /opt/fishbase/data
&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run --name mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d -v /opt/fishbase/data:/var/lib/mysql mysql&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now need to import the data from the &lt;code&gt;fbapp.sql&lt;/code&gt; file as a one-off event. We’ll use a temporary &lt;code&gt;mysql&lt;/code&gt; container to do this, linked to the persistent image we just launched. For this container, we’ll start a bash container that is linked to the &lt;code&gt;fbapp.sql&lt;/code&gt; file directly (note that docker volume linking works for files too):&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run --rm -ti --link mysql:mysql -v /path/to/fbapp.sql:/data/fbapp.sql -w /data mysql bash&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This drops us into a bash session on the container where we can launch a linked &lt;code&gt;mysql&lt;/code&gt; session and import our tables:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mysql&lt;/span&gt; --host=&lt;span class=&quot;ot&quot;&gt;$MYSQL_PORT_3306_TCP_ADDR&lt;/span&gt; --protocol=&lt;span class=&quot;ot&quot;&gt;$MYSQL_PORT_3306_TCP_PROTO&lt;/span&gt; --password=&lt;span class=&quot;ot&quot;&gt;$MYSQL_ENV_MYSQL_ROOT_PASSWORD&lt;/span&gt; fbapp &lt;span class=&quot;kw&quot;&gt;&amp;lt;&lt;/span&gt; fbapp.sql&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: if this gives us an error about being unable to write the table, we may need to adjust the permissions of the linked file appropriately.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker exec -ti mysql bash
chown -R mysql:mysql /var/lib/mysql&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From here, the database is set up and ready to be linked to our app.&lt;/p&gt;
&lt;h3 id=&quot;dockerizing-the-sinatra-app&quot;&gt;Dockerizing the Sinatra app&lt;/h3&gt;
&lt;p&gt;This is straight-forward, noting only that we need to again use the environmental variables shown for the &lt;code&gt;mysql&lt;/code&gt; credentials inside our ruby script:&lt;/p&gt;
&lt;pre class=&quot;sourceCode ruby&quot;&gt;&lt;code class=&quot;sourceCode ruby&quot;&gt;  client = &lt;span class=&quot;dt&quot;&gt;Mysql2&lt;/span&gt;::&lt;span class=&quot;dt&quot;&gt;Client&lt;/span&gt;.new(&lt;span class=&quot;st&quot;&gt;:host&lt;/span&gt; =&amp;gt; &lt;span class=&quot;dt&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;#39;MYSQL_PORT_3306_TCP_ADDR&amp;#39;&lt;/span&gt;], 
                             &lt;span class=&quot;st&quot;&gt;:port&lt;/span&gt; =&amp;gt; &lt;span class=&quot;dt&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;#39;MYSQL_PORT_3306_TCP_PORT&amp;#39;&lt;/span&gt;], 
                             &lt;span class=&quot;st&quot;&gt;:password&lt;/span&gt; =&amp;gt; &lt;span class=&quot;dt&quot;&gt;ENV&lt;/span&gt;[&lt;span class=&quot;st&quot;&gt;&amp;#39;MYSQL_ENV_MYSQL_ROOT_PASSWORD&amp;#39;&lt;/span&gt;],
                             &lt;span class=&quot;st&quot;&gt;:username&lt;/span&gt; =&amp;gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;, 
                             &lt;span class=&quot;st&quot;&gt;:database&lt;/span&gt; =&amp;gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;fbapp&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and that we need to execute our ruby app with host &lt;code&gt;0.0.0.0&lt;/code&gt; instead of the default &lt;code&gt;localhost&lt;/code&gt; so that the port will be accessible outside the docker container, like so:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ruby&lt;/span&gt; api.rb -o 0.0.0.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could get away with just a 2-line Dockerfile using the &lt;code&gt;onbuild&lt;/code&gt; flavor of the official Ruby containers, which has rather clever triggers for installing dependencies listed in the Gemfile when the image is built, see &lt;a href=&quot;https://registry.hub.docker.com/_/ruby/&quot;&gt;DockerHub/ruby&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since one still needs to build a new Docker image either way, I’ve opted for a slightly more explicit (and smaller) &lt;a href=&quot;https://github.com/ropensci/fishbaseapi/blob/master/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt; based on Debian instead. This installs the ruby dependencies (including gems and associated libraries, which would all have been automated by the Ruby Dockerfile), and sets up a default run command to launch the app running the sinatra API.&lt;/p&gt;
&lt;p&gt;Just run this container linked to the database and we’re good to go:&lt;/p&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;kw&quot;&gt;docker&lt;/span&gt; run -d -p 4567:4567 --link mysql:mysql ropensci/rfishbase&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes</title>
   <link href="http://www.carlboettiger.info/2015/01/28/notes.html"/>
   <updated>2015-01-28T00:00:00+00:00</updated>
   <id>/01/28/notes</id>
   <content type="html">&lt;h2 id=&quot;mdptoolbox-testing&quot;&gt;&lt;code&gt;MDPToolbox&lt;/code&gt; testing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Debugging &lt;a href=&quot;http://rpubs.com/cboettig/55260&quot;&gt;RPub record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fails even if we restrict R to be finite (&lt;code&gt;h &amp;lt; 1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Different error if we try the optimal harvest&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;reading&quot;&gt;Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Operating Systems Review reproducibility special issue now out; (includes my article on Docker). &lt;a href=&quot;http://dl.acm.org/citation.cfm?id=2723872&amp;amp;picked=prox&amp;amp;cfid=475356683&amp;amp;cftoken=29119830&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;reviewing&quot;&gt;Reviewing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PNAS review: done (2015-01-26).&lt;/li&gt;
&lt;li&gt;Bioinformatics review.&lt;/li&gt;
&lt;li&gt;JSS review: done.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;
&lt;h3 id=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/h3&gt;
&lt;p&gt;Finally a way to run generic docker images on free CI: &lt;a href=&quot;https://circleci.com/docs/docker&quot;&gt;circle-ci&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adding private keys to Travis requires too much of a dance (encrypting credentials into &lt;code&gt;.travis.yml&lt;/code&gt;; on Circle-CI, like Drone, these can just be configured through the Circle-CI web interface. Travis has no way to restart a stochastically failed build without another commit, doesn’t display the logs in a convenient summary, and doesn’t support deploying as first-class configuration step (though easy enough to hack it of course)&lt;/p&gt;
&lt;p&gt;Sample configuration:&lt;/p&gt;
&lt;pre class=&quot;sourceCode yaml&quot;&gt;&lt;code class=&quot;sourceCode yaml&quot;&gt;&lt;span class=&quot;fu&quot;&gt;machine:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;services:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; docker

&lt;span class=&quot;fu&quot;&gt;dependencies:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;override:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; docker info
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; docker build -t circleci/elasticsearch .

&lt;span class=&quot;fu&quot;&gt;test:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;override:&lt;/span&gt;
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;docker run -d -p 9200:&lt;/span&gt;9200 circleci/elasticsearch; sleep 10
    &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;fu&quot;&gt;curl --retry 10 --retry-delay 5 -v http:&lt;/span&gt;//localhost:9200

&lt;span class=&quot;fu&quot;&gt;deployment:&lt;/span&gt;
  &lt;span class=&quot;fu&quot;&gt;hub:&lt;/span&gt;
    &lt;span class=&quot;fu&quot;&gt;branch:&lt;/span&gt; master
    &lt;span class=&quot;fu&quot;&gt;commands:&lt;/span&gt;
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      &lt;span class=&quot;kw&quot;&gt;-&lt;/span&gt; docker push circleci/elasticsearch&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Mdptoolbox Ex</title>
   <link href="http://www.carlboettiger.info/2015/01/23/mdptoolbox-ex.html"/>
   <updated>2015-01-23T00:00:00+00:00</updated>
   <id>/01/23/mdptoolbox-ex</id>
   <content type="html">&lt;p&gt;Testing this out using &lt;code&gt;MDPtoolbox&lt;/code&gt;, but not working yet…&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(MDPtoolbox)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h, p){ 
  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h
  p[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;{&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x}  
}
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)

profit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h) &lt;span class=&quot;kw&quot;&gt;pmin&lt;/span&gt;(x,h) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h  &lt;span class=&quot;co&quot;&gt;# vectorized for x&lt;/span&gt;
x_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;151&lt;/span&gt;)
h_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
delta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;
sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.01&lt;/span&gt;
z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)
pdfn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(P, s) &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(P, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;M &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pdgControl::&lt;span class=&quot;kw&quot;&gt;determine_SDP_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g, pdfn)
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pdgControl::&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(M, x_grid, h_grid, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Building the transition probability matrix:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;transition_matrix &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(f, p, x_grid, h_grid, sigma_g,
                                 &lt;span class=&quot;dt&quot;&gt;pdfn=&lt;/span&gt;function(P, s) &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(P, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s)){
  n_x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(x_grid)
  n_h &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(h_grid)
  SDP_matrix &amp;lt;-&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(x_grid), &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(x_grid),&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(h_grid)))
  
  for(h_i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:n_h){
    h &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h_grid[h_i]
    &lt;span class=&quot;co&quot;&gt;# Cycle over x values&lt;/span&gt;
    for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:n_x){ 
      ## Calculate the expected transition  
      x1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x_grid[i]
      x2_expected &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;f&lt;/span&gt;(x1, h, p)
      ## If expected 0, go to 0 with probabilty 1
      if( x2_expected ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) 
        SDP_matrix[i,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,h_i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  
      else {
        &lt;span class=&quot;co&quot;&gt;# relative probability of a transition to that state&lt;/span&gt;
        ProportionalChance &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x_grid /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x2_expected
        Prob &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pdfn&lt;/span&gt;(ProportionalChance, sigma_g)
        
        if(&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(Prob) &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
        &lt;span class=&quot;co&quot;&gt;# Store normalized probabilities in row&lt;/span&gt;
          SDP_matrix[i,,h_i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Prob/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(Prob)
        else 
          SDP_matrix[i,,h_i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;numeric&lt;/span&gt;(n_x&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;))
        
        if(&lt;span class=&quot;kw&quot;&gt;anyNA&lt;/span&gt;(SDP_matrix[i,,h_i]))
          &lt;span class=&quot;kw&quot;&gt;recover&lt;/span&gt;()
      }
    }
  }
  SDP_matrix
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Building the reward matrix:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# [S, A] array&lt;/span&gt;

R &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x_grid, function(x)
  &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(h_grid, function(h)
  &lt;span class=&quot;kw&quot;&gt;profit&lt;/span&gt;(x,h)
)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that in &lt;span class=&quot;math&quot;&gt;\(f\)&lt;/span&gt; we must define the harvesting take place before the population recruits.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;P &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;transition_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g, pdfn)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x0 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(p[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]]-&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)/p[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]]
i &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;which.min&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(x_grid-x0))

V0 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(x_grid))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;mdp_check&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;P=&lt;/span&gt;P,&lt;span class=&quot;dt&quot;&gt;R=&lt;/span&gt;R)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mdp_value_iteration&lt;/span&gt;(P, R, &lt;span class=&quot;dt&quot;&gt;discount =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;delta), &lt;span class=&quot;dt&quot;&gt;epsilon=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.001&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;max_iter =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;5e3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;V0=&lt;/span&gt;V0)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;MDP Toolbox: iterations stopped by maximum number of iteration condition&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;policy &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;out$policy

&lt;span class=&quot;co&quot;&gt;#out &amp;lt;- mdp_finite_horizon(P, R, discount=1 / (1 + delta), 10)&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#policy &amp;lt;- out$policy[,1]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whoops, this doesn’t look right:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(x_grid, h_grid[policy])&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-23-mdptoolbox-ex/unnamed-chunk-9-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Sdp Reed Controls Comparisons</title>
   <link href="http://www.carlboettiger.info/2015/01/22/sdp-Reed-controls-comparisons.html"/>
   <updated>2015-01-22T00:00:00+00:00</updated>
   <id>/01/22/sdp-Reed-controls-comparisons</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(knitr)
opts_chunk$&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.width=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.height=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;results=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;hide&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.show=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;hold&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(pdgControl)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;reed-solution-harvest-control&quot;&gt;Reed solution; harvest control&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h, p){ 
  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x) &lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(x-h,&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;))
  p[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;{&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x} 
}
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)
profit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h) &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, min, h) &lt;span class=&quot;co&quot;&gt;# vectorized for x&lt;/span&gt;
x_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
h_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
delta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;
OptTime &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;
xT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;
z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)
pdfn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(P, s) &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(P, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that in &lt;span class=&quot;math&quot;&gt;\(f\)&lt;/span&gt; we must define the harvesting take place before the population recruits.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;SDP_Mat &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;determine_SDP_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g, pdfn)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;opt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(SDP_Mat, x_grid, h_grid, OptTime, xT, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(x_grid, h_grid[opt$D]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Stock size&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Harvest&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(x_grid, x_grid -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h_grid[opt$D]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Stock size&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-01-22-sdp-Reed-controls-comparisons/unnamed-chunk-3-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-01-22-sdp-Reed-controls-comparisons/unnamed-chunk-3-2.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;reed-solution-with-effort-based-control&quot;&gt;Reed solution with effort-based control&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h, p){
  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x
  p[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;{&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x}
  }
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)
h_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
profit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h) &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x) x *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h) &lt;span class=&quot;co&quot;&gt;# vectorized for x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;SDP_Mat &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;determine_SDP_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g, pdfn)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;opt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(SDP_Mat, x_grid, h_grid, OptTime, xT, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(x_grid, h_grid[opt$D]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Stock size&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fishing Effort&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(x_grid, x_grid -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x_grid *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h_grid[opt$D]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Stock size&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Escapement&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/2015/assets/figures/posts/2015-01-22-sdp-Reed-controls-comparisons/unnamed-chunk-7-1.png&quot; /&gt; &lt;img src=&quot;/2015/assets/figures/posts/2015-01-22-sdp-Reed-controls-comparisons/unnamed-chunk-7-2.png&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Invasives Sdp</title>
   <link href="http://www.carlboettiger.info/2015/01/22/invasives-sdp.html"/>
   <updated>2015-01-22T00:00:00+00:00</updated>
   <id>/01/22/invasives-sdp</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(knitr)
opts_chunk$&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.width=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.height=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;results=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;hide&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.show=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;hold&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(pdgControl)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We propose a state model consistent with &lt;a href=&quot;http://10.2139/ssrn.421007&quot;&gt;10.2139/ssrn.421007&lt;/a&gt;; in this case a simple Beverton-Holt model. Note that in defining &lt;span class=&quot;math&quot;&gt;\(f\)&lt;/span&gt; we have assumed the harvesting take place before the population recruits.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h, p){ 
  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h 
  p[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;{&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p[[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x}  
}
p &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This meets Olson’s three assumptions. We must also define our cost/reward function to meet assumptions 4 &amp;amp; 5:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;damage &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;
profit &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(x, h) &lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(x, function(x)  -damage *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h /&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;h) ) &lt;span class=&quot;co&quot;&gt;# vectorized for x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;x_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)
h_grid &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;length =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;)
delta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.05&lt;/span&gt;
OptTime &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1000&lt;/span&gt;
xT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;co&quot;&gt;# not used&lt;/span&gt;
sigma_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;
z_g &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function() &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rlnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, sigma_g)
pdfn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(P, s) &lt;span class=&quot;kw&quot;&gt;dlnorm&lt;/span&gt;(P, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;SDP_Mat &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;determine_SDP_matrix&lt;/span&gt;(f, p, x_grid, h_grid, sigma_g, pdfn)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;opt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;value_iteration&lt;/span&gt;(SDP_Mat, x_grid, h_grid, OptTime, xT, profit, delta)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(x_grid, h_grid[opt$D]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Invasive population size&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Control effort&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-22-invasives-sdp/unnamed-chunk-5-1.png&quot; /&gt;
&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Detrend Example</title>
   <link href="http://www.carlboettiger.info/2015/01/13/detrend-example.html"/>
   <updated>2015-01-13T00:00:00+00:00</updated>
   <id>/01/13/detrend-example</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(knitr)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(nimble)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(earlywarning)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(tidyr)
opts_chunk$&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dev=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.width=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;fig.height=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;results=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;hide&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;some sample data from earlywarning:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;123&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;data&lt;/span&gt;(ibms)
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(ibm_critical)
raw &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(ibm_critical)
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(raw) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;quot;x&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-13-detrend-example/data-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Rather than explicitly modeling the trend element predicted by the linearization, let us simply remove it:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(raw$x)
raw$t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N
detrend &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;loess&lt;/span&gt;(x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t, raw)
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; detrend$residuals/&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;var&lt;/span&gt;(detrend$residuals)))
&lt;span class=&quot;kw&quot;&gt;qplot&lt;/span&gt;(raw$t, data$x, &lt;span class=&quot;dt&quot;&gt;geom=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-13-detrend-example/detrend-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-version&quot;&gt;LSN version&lt;/h2&gt;
&lt;p&gt;Modify the LSN model to explicitly model the changing parameter as a hidden, stochastic variable&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
   theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
   sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
   sigma_y ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
       m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
    x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
    y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i]) 
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x) 
    mu_y[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i]
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_y[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_y) 
  }
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Constants in the model definition are the length of the dataset, &lt;span class=&quot;math&quot;&gt;\(N\)&lt;/span&gt; and the time points of the sample. Note we’ve made time explicit, we’ll assume uniform spacing here.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; raw$t)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Initial values for the parameters&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and here we go:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; lsn, 
                      &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, 
                      &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, 
                      &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;2e2&lt;/span&gt;)
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and examine results&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 5000   84&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]
long &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(samples, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;            m       sigma_x       sigma_y         theta 
 0.0003790592  1.0792385676  0.1920288851 -0.0150533955 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(long) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-13-detrend-example/trace-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(long) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-13-detrend-example/histogram-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.1.2 (2014-10-31)
Platform: x86_64-pc-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] methods   stats     graphics  grDevices utils     datasets 
[7] base     

other attached packages:
[1] tidyr_0.2.0        ggplot2_1.0.0      earlywarning_0.0-1
[4] nimble_0.3         yaml_2.1.13        knitr_1.9         

loaded via a namespace (and not attached):
 [1] codetools_0.2-10 colorspace_1.2-4 deSolve_1.11    
 [4] digest_0.6.8     evaluate_0.5.5   formatR_1.0     
 [7] grid_3.1.2       gtable_0.1.2     igraph_0.7.1    
[10] labeling_0.3     MASS_7.3-39      mnormt_1.5-1    
[13] munsell_0.4.2    parallel_3.1.2   plyr_1.8.1      
[16] proto_0.3-10     psych_1.5.1      Rcpp_0.11.4     
[19] reshape2_1.4.1   scales_0.2.4     stringr_0.6.2   
[22] tools_3.1.2     &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Automated Knitr In Jekyll</title>
   <link href="http://www.carlboettiger.info/2015/01/07/automated-knitr-in-jekyll.html"/>
   <updated>2015-01-07T00:00:00+00:00</updated>
   <id>/01/07/automated-knitr-in-jekyll</id>
   <content type="html">&lt;h2 id=&quot;combining-knitr-jeykll-using-servr&quot;&gt;Combining knitr &amp;amp; jeykll using &lt;code&gt;servr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Yihui Xie, author &amp;amp; maintainer of &lt;code&gt;knitr&lt;/code&gt;, has a nice little package out called &lt;a href=&quot;http://github.com/yihui/servr&quot;&gt;servr&lt;/a&gt; for serving websites from R. It includes a handy &lt;code&gt;jekyll&lt;/code&gt; function which streamlines the process of first running &lt;code&gt;knitr&lt;/code&gt; on any &lt;code&gt;.Rmd&lt;/code&gt; posts before running Jekyll. Having broken my &lt;a href=&quot;http://www.carlboettiger.info/2015/01/01/notebook-maintenance-and-scaling.html&quot;&gt;notebook into volumes&lt;/a&gt;, my setup is now ready to take advantage of this approach.&lt;/p&gt;
&lt;h3 id=&quot;configuring-knitr-with-the-build.r-script&quot;&gt;Configuring &lt;code&gt;knitr&lt;/code&gt; with the &lt;code&gt;build.R&lt;/code&gt; script&lt;/h3&gt;
&lt;p&gt;The R build process can be tuned using a custom &lt;code&gt;build.R&lt;/code&gt; script. In particular, it can be useful to set up some default knitr package and chunk options such as how to handle caching, figures, and messages. See &lt;a href=&quot;https://github.com/cboettig/2015/blob/4ce767965a0015ca2890023aa6adfb1109b6f94c/_build.R&quot;&gt;my build.R script&lt;/a&gt; at the time of writing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Caching: By turning caching on I avoid having to make the server re-run all the unchanged R code from scratch each time. I simply point the cache to a directory, &lt;code&gt;_cache&lt;/code&gt; in the repository root that is ignored both by git and jekyll.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Figures: I’m still not completely decided how to best to handle figures. Two questions in particular.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m undecided if it is better to embed them in the html (as data uris or embedded svg) or link as external files? Embedding avoids the risk of broken paths to the images, and means we can view the history of the file by rendering the committed html with sites like &lt;code&gt;http://rawgit.com/&lt;/code&gt;. Perhaps for the reasons it seems to be the default setting in RStudio’s &lt;code&gt;rmarkdown::render&lt;/code&gt;. On the other hand it makes it harder to diff the images themselves when they aren’t committed as stand-alone files. Note that never need to commit the figures to the source branch, or commit the intermediate &lt;code&gt;.md&lt;/code&gt; file produced by &lt;code&gt;knitr&lt;/code&gt;, thus embedding data URI’s isn’t so cumbersome (i.e. doesn’t create cumbersome markdown, though it makes the HTML even less readable). I’ve currently configured this to handle both cases, though some care must be taken in setting the paths correctly (e.g. &lt;code&gt;baseurl&lt;/code&gt;) if images are only linked.&lt;/p&gt;
&lt;p&gt;My other question is whether to rely on png or svg images. svg images tend to look better and can result in very small file sizes for certain plots, but can also get much too large on others. svg files are text based and so play nicely with git, whether they are embedded in the HTML or linked externally. Meanwhile, pngs can be diff’d by Github now, and provide more reliable file sizes even on plots with tons of points, so I am using them as the default setting.&lt;/p&gt;
&lt;h2 id=&quot;automated-deploy-with-drone&quot;&gt;Automated deploy with Drone&lt;/h2&gt;
&lt;p&gt;A nice feature of jekyll has always been the ability for Github to build the pages automatically whenever changes to the source files are pushed to the repository. Since Github’s jekyll doesn’t support plugins such as the one needed to use pandoc as a markdown parser, I have long worked around this using travis CI to run jekyll with pandoc installed. Unfortunately, adding knitr to the mix is too much for travis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The R commands of any or all posts may exceed the 50 minute max build time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A few other difficulties also arise for travis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;we would need to install the complete R environment, pandoc, and the complete jekyll+ruby gems environment necessary to build the site (also within the 50 minute time, unless these could be cached externally too).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;we couldn’t easily store the knitr cache (would have to push and pull this from some remote)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;we have to encrypt the credentials to push to Github, use the twitter API, etc (on a per-repository basis).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The simplest alternative is simply to build the site locally. While this is always a viable option and often preferable (one will usually want to run the script interactively before committing anyway), it precludes the ability to make changes from the online interface or a tablet where the resources to run the code are not immediately available. Having automated build is much nicer.&lt;/p&gt;
&lt;p&gt;Running a Drone instance on a personal server is much more appealing. I already have a small DigitalOcean instance at the moment which runs a variety of services, including Drone. Advantages include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Having drone on a personal server means I can use &lt;em&gt;custom docker images&lt;/em&gt;. In thiw way, I can provide an image with all or most of the software I need already installed. Here’s the &lt;a href=&quot;http://hub.docker.com/u/cboettig/labnotebook&quot;&gt;Dockerfile for cboettig/labnotebook&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging into the Drone instance (secured with a Github application handshake), I can add private environmental variables for credentials and keys without the need to go through the encryption dance on travis.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Running on my own server, Drone keeps a library of docker images (no need to pull each time). Because this image is not automatically pulled a-fresh on each commit, the build is faster and I have more control over when the software environment is updated (which always carries the potential of breaking things).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For the R scripts, the build time can be further speed up by configuring to cache selected files such that the knitr cache and generated figures are available to future builds.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;caching-knitr-files&quot;&gt;Caching knitr files&lt;/h3&gt;
&lt;p&gt;See my &lt;a href=&quot;http://github.com/cboettig/2015/tree/master/.drone.yml&quot;&gt;.drone.yml&lt;/a&gt; for an overview of my configuration. Most of the script is concerned with setting up the caching appropriately, which isn’t yet as streamlined as it might be (see &lt;a href=&quot;http://github.com/drone/drone/issues/147&quot;&gt;drone/147&lt;/a&gt;). The deploy script must also do a bit of a dance to build the site on the &lt;code&gt;master&lt;/code&gt; branch but push the contents of &lt;code&gt;_site&lt;/code&gt; to the &lt;code&gt;gh-pages&lt;/code&gt; branch. Perhaps these can be improved upon.&lt;/p&gt;
&lt;h2 id=&quot;a-docker-image-for-the-labnotebook&quot;&gt;A docker image for the labnotebook&lt;/h2&gt;
&lt;p&gt;Having a docker image with all the software needed to build the notebook also goes a long way to making the notebook more portable. The labnotebook docker images could further be versioned with tags matching the year, such that &lt;code&gt;cboettig/labnotebook:2015&lt;/code&gt; corresponded to a Dockerfile with software environment specific to building the repository. Because such an image contains most of the software I use regularly, it also provides something of a swiss-army knife for common tasks (on any machine where docker is available):&lt;/p&gt;
&lt;p&gt;An R shell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -i -v $(pwd):/data R &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pandoc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -i -v $(pwd):/data pandoc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;jekyll server: (Note that running jekyll or servr from within docker requires changing the default host from &lt;code&gt;127.0.0.1&lt;/code&gt; to &lt;code&gt;0.0.0.0&lt;/code&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d -p 4000:4000 -v $(pwd):/data jekyll serve -H 0.0.0.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;bash:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -i -v $(pwd):/data bash &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;latex:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -i -v $(pwd):/data pdflatex file.tex &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RStudio server (note the &lt;code&gt;-u 0&lt;/code&gt; to launch server as root):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d -p 8787:8787 -u 0 -v $(pwd):/data supervisord&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Lsn Model Considerations</title>
   <link href="http://www.carlboettiger.info/2015/01/06/lsn-model-considerations.html"/>
   <updated>2015-01-06T00:00:00+00:00</updated>
   <id>/01/06/lsn-model-considerations</id>
   <content type="html">&lt;p&gt;Should we model the change in mean explicitly, or rely on detrending?&lt;/p&gt;
&lt;p&gt;One of the first things to deal with in the model setup is whether we ‘detrend’ the data first or not. As you know, in most saddle-node bifurcations the mean also moves since the stable node usually moves a bit to collide with the unstable node rather than just sitting there and waiting for the unstable node to hit it; which results in a gradual decrease of the mean prior to the actual catastrophe. It’s relatively typical to detrend any changes in the mean out (after all, sometimes this will also reflect things like seasonal variation etc., so it’s not a trivial thing to build into the model in a general way). Modeling the rate of change in mean makes it possible for a mean-only change to be sufficient to prefer the model of change over the OU model… However, detrending needs rigorous definition to justify the approach. Transforming the data can distort the signal (particularly obvious with the case of interpolation). I don’t really like detrending since it can be rather arbitrary in how you choose to go about it, but I suppose it’s preferable to specific modeling assumptions that try and capture the trend as well. There’s an interesting comparison of detrending with just a Gaussian filter vs using the exact model in this paper really nice paper on warning signals in epidemiology that I’ve only recently come across; which also does some elegant van Kampen expansions en route: http://doi.org/10.1007/s12080-013-0185-5.&lt;/p&gt;
&lt;!--
Consider the mean changes as a function $f(x(t),t)$, we would want an approach that claims to provide a non-parametric estimate of $f$ such that for our data, $x - f(x)$ approximates to the model we fit (e.g. OU model with time-dependent spring constant term alone).
--&gt;
</content>
 </entry>
 
 <entry>
   <title>Notes</title>
   <link href="http://www.carlboettiger.info/2015/01/05/notes.html"/>
   <updated>2015-01-05T00:00:00+00:00</updated>
   <id>/01/05/notes</id>
   <content type="html">&lt;h2 id=&quot;more-user-craziness-with-docker&quot;&gt;more user craziness with docker&lt;/h2&gt;
&lt;p&gt;Should do something about rstudio script when running as a non-root user…. Fixed! Requires changing user more carefully; we cannot simply delete the existing user.&lt;/p&gt;
&lt;p&gt;When using a docker image with a non-root default user, we can launch a container as root by giving root’s UID instead with the &lt;code&gt;--user 0&lt;/code&gt; flag. (Note that we can do this with other UIDs as well, though it produces a troublesome unnamed user when the userid hasn’t been assigned to a user name).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RStudio image now completely configures default user in the Dockerfile, such that userconf.sh need only configure custom users. See &lt;a href=&quot;https://github.com/rocker-org/rocker/blob/cec3912d3bc40352fc4ca7d7d281db9e25b3dd86/rstudio/userconf.sh&quot;&gt;userconf.sh&lt;/a&gt;. We now do:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;usermod -l rstudio docker \
    &amp;amp;&amp;amp; usermod -m -d /home/rstudio rstudio \
    &amp;amp;&amp;amp; groupmod -n rstudio docker &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;instead of &lt;code&gt;userdel&lt;/code&gt; which causes issues if we launch as that user. Note, this means containers built on &lt;code&gt;rstudio&lt;/code&gt; have only the user &lt;code&gt;rstudio&lt;/code&gt; available and not the &lt;code&gt;docker&lt;/code&gt; user, unless explicitly added/renamed. Avoids issues like multiple home directories/unpredictable home directory name as well (Since RStudio-server wants to open in home dir and not in a user-owned root directory like &lt;code&gt;/data&lt;/code&gt; like most other apps would use.) - RStudio must still be launched as root (see &lt;a href=&quot;https://support.rstudio.com/hc/communities/public/questions/200661923-Does-Rstudio-have-to-run-as-root-&quot;&gt;RStudio issue&lt;/a&gt;), so a Dockerfile with non-root user must use the &lt;code&gt;--user 0&lt;/code&gt; flag or run &lt;code&gt;rserver&lt;/code&gt; or the default &lt;code&gt;supervisord&lt;/code&gt; using &lt;code&gt;sudo&lt;/code&gt;.&lt;br /&gt;- Configure &lt;a href=&quot;https://github.com/rocker-org/rocker/blob/cec3912d3bc40352fc4ca7d7d281db9e25b3dd86/rstudio/supervisord.conf&quot;&gt;supervisord.conf&lt;/a&gt; configuration not to throw erroneous error messages (e.g. &lt;code&gt;userconf.sh&lt;/code&gt; is expected to exit with 0, users explicitly declared, config file explicitly declared to avoid security vulnerability of custom conf in working dir, etc).&lt;/p&gt;
&lt;h2 id=&quot;reading-list-notes&quot;&gt;Reading list notes&lt;/h2&gt;
&lt;p&gt;Sebastian has a very nice reading list for his upcoming seminar on evolution in stochastic environments that I wanted to make note of for my own reference as well.&lt;/p&gt;
&lt;p&gt;Reading: Ruel, Jonathan J., and Matthew P. Ayres. “Jensen’s inequality predicts effects of environmental variation.” Trends in Ecology &amp;amp; Evolution 14.9 (1999): 361-366. Optional Reading: Frank, Steven A., and Montgomery Slatkin. “Evolution in a variable environment.” American Naturalist (1990): 244-260.&lt;/p&gt;
&lt;p&gt;BETWEEN-GENERATION BET-HEDGING&lt;/p&gt;
&lt;p&gt;Week 2: Historical perspective and overview&lt;/p&gt;
&lt;p&gt;Readings: Stearns, Stephen C. “Daniel Bernoulli (1738): evolution and economics under risk.” Journal of biosciences 25.3 (2000): 221-228. Childs, Dylan Z., C. J. E. Metcalf, and Mark Rees. “Evolutionary bet-hedging in the real world: empirical evidence and challenges revealed by plants.” Proceedings of the Royal Society B: Biological Sciences (2010): rspb20100707. Optional Reading: Simons, Andrew M. “Modes of response to environmental change and the elusive empirical evidence for bet hedging.” Proceedings of the Royal Society B: Biological Sciences (2011): rspb20110176.&lt;/p&gt;
&lt;p&gt;Week 3: Seedbanks in annual plants Readings: Venable, D. Lawrence. “Bet hedging in a guild of desert annuals.” Ecology 88.5 (2007): 1086-1090; Gremer, Jennifer R., and D. Lawrence Venable. “Bet hedging in desert winter annual plants: optimal germination strategies in a variable environment.” Ecology letters 17.3 (2014): 380-387.&lt;/p&gt;
&lt;p&gt;Week 4: Stochastic switches, epigenetics, and bacteria&lt;/p&gt;
&lt;p&gt;Readings: Beaumont, Hubertus JE, et al. “Experimental evolution of bet hedging.” Nature 462.7269 (2009): 90-93; Veening, J. et al. “Bistability, Epigenetics, and Bet-Hedging in Bacteria.” Annual Reviews of Microbiology (2008)&lt;/p&gt;
&lt;p&gt;Week 5: Bet-hedging in structured populations&lt;/p&gt;
&lt;p&gt;Potential readings: Carja, Oana, Uri Liberman, and Marcus W. Feldman. “The evolution of phenotypic switching in subdivided populations.” Genetics 196.4 (2014): 1185-1197; Pfister, Catherine A. “Patterns of variance in stage-structured populations: evolutionary predictions and ecological implications.” Proceedings of the National Academy of Sciences 95.1 (1998): 213-218.; Schreiber, Sebastian J. “The evolution of patch selection in stochastic environments.” The American Naturalist 180.1 (2012): 17-34.&lt;/p&gt;
&lt;p&gt;WITHIN-GENERATION BET-HEDGING&lt;/p&gt;
&lt;p&gt;Week 6: The idea and a perspective Readings: Gillespie, John H. “Natural selection for within-generation variance in offspring number.” Genetics 76.3 (1974): 601-606; Hopper, Keith R., et al. “Within-generation bet hedging: a seductive explanation?.” Oikos 101.1 (2003): 219-222.&lt;/p&gt;
&lt;p&gt;Week 7: Multiple matings in wasps and cooperative breeding in birds Readings: Sarhan, Alia, and Hanna Kokko. “Multiple mating in the glanville fritillary butterfly: A case of within-generation bethedging?” Evolution 61.3 (2007): 606-616; Rubenstein, Dustin R “Spatiotemporal environmental variation, risk aversion, and the evolution of cooperative breeding as a bet-hedging strategy.” Proceedings of the National Academy of Sciences 108.Supplement 2 (2011): 10816-10822.&lt;/p&gt;
&lt;p&gt;Week 8: Synthesis of between- and within-generation bet-hedging Readings: Starrfelt, Jostein, and Hanna Kokko. “Bet-hedging: a triple trade-off between means, variances and correlations.” Biological Reviews 87.3 (2012): 742-755; Frank, Steven A. “Natural selection. I. Variable environments and uncertain returns on investment*.&amp;quot; Journal of evolutionary biology 24.11 (2011): 2299-2309.&lt;/p&gt;
&lt;p&gt;RESOURCE VARIATION AND RISK AVERSION&lt;/p&gt;
&lt;p&gt;Week 9: Multiple limiting factors and ovule packaging in angiosperms Readings: Rosenheim, Jay A., Uri Alon, and Guy Shinar. “Evolutionary Balancing of Fitness-Limiting Factors.” The American Naturalist 175.6 (2010): 662-674. Burd, Martin, et al. “Ovule number per flower in a world of unpredictable pollination.” American Journal of Botany 96.6 (2009): 1159-1167.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lsn Model Comparisons</title>
   <link href="http://www.carlboettiger.info/2015/01/04/lsn-model-comparisons.html"/>
   <updated>2015-01-04T00:00:00+00:00</updated>
   <id>/01/04/lsn-model-comparisons</id>
   <content type="html">&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(knitr)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(nimble)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(sde)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(tidyr)
opts_chunk$&lt;span class=&quot;kw&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;dev =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;, 
               &lt;span class=&quot;dt&quot;&gt;fig.width =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, 
               &lt;span class=&quot;dt&quot;&gt;fig.height =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, 
               &lt;span class=&quot;dt&quot;&gt;results =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;#39;hide&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stick with SDE example as a reference point:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;set.seed&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;123&lt;/span&gt;)
d &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;-x))
s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) 
data &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sde.sim&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;X0=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;drift=&lt;/span&gt;d, &lt;span class=&quot;dt&quot;&gt;sigma=&lt;/span&gt;s, &lt;span class=&quot;dt&quot;&gt;T=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;N=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;sigma.x not provided, attempting symbolic derivation.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(data) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(x),x))
N &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(data$x)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-04-lsn-model-comparisons/data-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;lsn-version&quot;&gt;LSN version&lt;/h2&gt;
&lt;p&gt;Modify the LSN model to explicitly model the changing parameter as a hidden, stochastic variable&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lsn &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleCode&lt;/span&gt;({
        theta ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
        sigma_x ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
        sigma_y ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e-10&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;100.0&lt;/span&gt;)
                    m ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1e2&lt;/span&gt;)
             x[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
             y[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dunif&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;) 

  for(i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(N&lt;span class=&quot;dv&quot;&gt;-1&lt;/span&gt;)){
    mu_x[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(theta -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x[i]) 
    x[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_x[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_x) 
    mu_y[i] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;y[i] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;m *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;t[i]
    y[i&lt;span class=&quot;dv&quot;&gt;+1&lt;/span&gt;] ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;dnorm&lt;/span&gt;(mu_y[i], &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; sigma_y) 
  }
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Constants in the model definition are the length of the dataset, &lt;span class=&quot;math&quot;&gt;\(N\)&lt;/span&gt; and the time points of the sample. Note we’ve made time explicit, we’ll assume uniform spacing here.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;constants &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;N =&lt;/span&gt; N, &lt;span class=&quot;dt&quot;&gt;t =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:N)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Initial values for the parameters&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;inits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;theta =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;m =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_x =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sigma_y =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,N))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and here we go:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Rmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nimbleModel&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;code =&lt;/span&gt; lsn, 
                      &lt;span class=&quot;dt&quot;&gt;constants =&lt;/span&gt; constants, 
                      &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data, 
                      &lt;span class=&quot;dt&quot;&gt;inits =&lt;/span&gt; inits)
Cmodel &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;mcmcspec &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;configureMCMC&lt;/span&gt;(Rmodel, &lt;span class=&quot;dt&quot;&gt;print=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;thin=&lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;2e2&lt;/span&gt;)
Rmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;buildMCMC&lt;/span&gt;(mcmcspec)
Cmcmc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;compileNimble&lt;/span&gt;(Rmcmc, &lt;span class=&quot;dt&quot;&gt;project =&lt;/span&gt; Cmodel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cmcmc$&lt;span class=&quot;kw&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e6&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and examine results&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.matrix&lt;/span&gt;(Cmcmc$mvSamples))
&lt;span class=&quot;kw&quot;&gt;dim&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 5000  206&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;samples &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;samples[,&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]
long &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gather&lt;/span&gt;(samples)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(samples, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, mean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;            m       sigma_x       sigma_y         theta 
-1.675333e-05  3.875174e-01  4.066872e-02  1.022867e+01 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(long) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;seq_along&lt;/span&gt;(value), value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-04-lsn-model-comparisons/trace-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(long) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_density&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(value)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~key, &lt;span class=&quot;dt&quot;&gt;scale=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;#39;free&amp;#39;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-04-lsn-model-comparisons/histogram-1.png&quot; /&gt;
&lt;/figure&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.1.3 RC (2015-03-06 r67947)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Debian GNU/Linux 8 (jessie)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats4    splines   methods   stats     graphics  grDevices
[7] utils     datasets  base     

other attached packages:
 [1] tidyr_0.2.0   ggplot2_1.0.0 sde_2.0.13    zoo_1.7-11   
 [5] fda_2.4.4     Matrix_1.1-5  MASS_7.3-39   nimble_0.3-1 
 [9] yaml_2.1.13   knitr_1.9    

loaded via a namespace (and not attached):
 [1] codetools_0.2-11 colorspace_1.2-6 digest_0.6.8    
 [4] evaluate_0.5.5   formatR_1.0      grid_3.1.3      
 [7] gtable_0.1.2     igraph_0.7.1     labeling_0.3    
[10] lattice_0.20-30  munsell_0.4.2    plyr_1.8.1      
[13] proto_0.3-10     Rcpp_0.11.5      reshape2_1.4.1  
[16] scales_0.2.4     stringr_0.6.2    tools_3.1.3     &lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>Notebook Maintenance And Scaling</title>
   <link href="http://www.carlboettiger.info/2015/01/01/notebook-maintenance-and-scaling.html"/>
   <updated>2015-01-01T00:00:00+00:00</updated>
   <id>/01/01/notebook-maintenance-and-scaling</id>
   <content type="html">&lt;p&gt;Electronic notebooks may not run out of pages like a paper notebook, but with five years of entries (963 posts, with a repository size approaching half a gigabyte), together with various files, layouts, experimentation and version history, some thought must be given to scale. Two closely related considerations add to this further: dynamic builds with &lt;code&gt;knitr&lt;/code&gt; from &lt;code&gt;.Rmd&lt;/code&gt; versions and hosting image files directly in the notebook repository rather than uploading to an external site (previously flickr or on the gh-pages of other project repositories). This has several advantages (more on that later) but in the immediate term it makes building the repository potentially slower (though knitr’s caching helps) and increases the repository size more rapidly (even with text-based &lt;code&gt;svg&lt;/code&gt; images).&lt;/p&gt;
&lt;p&gt;The current Jekyll system keeps all posts in a single repository and rebuilds the HTML files for each every time. This is already showing some strains: for instance, for some reason the git hashes when generating the site automatically on Travis cease updating for older posts, though this problem doesn’t occur when building locally. Overall, the Jekyll platform is rather snappy so this isn’t an unmanageable size, but is sufficient to demonstrate that the approach isn’t able to scale indefinitely either.&lt;/p&gt;
&lt;p&gt;So, as with the paper notebook whose pages are filled, it’s time to crack open a new binding and shelve the old notebooks – somewhere handy to be sure, but no longer one voluminous tome on the desk.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;/2015/assets/figures/posts/2015-01-01/notebooks-shelf.jpg&quot; /&gt;
&lt;/figure&gt;
&lt;h2 id=&quot;a-multi-repository-approach&quot;&gt;A multi-repository approach&lt;/h2&gt;
&lt;p&gt;To address this, I’m am trying out breaking the notebook over multiple repositories: using a new repository for each year’s worth of entries, and an additional repository to provide the basic pages (&lt;code&gt;home&lt;/code&gt;, &lt;code&gt;teaching&lt;/code&gt;, &lt;code&gt;vita&lt;/code&gt;, etc. from the navbar) along with the assets used by all the other sites (css, fonts, javascript, etc). This avoids rebuilding the posts of notebooks from all previous years every time the Jekyll site is compiled, keeping the repositories smaller, the site more modular and more easy to scale.&lt;/p&gt;
&lt;p&gt;This raises some challenges such as keeping the layout and appearance consistent without maintaining copies of layout files across multiple repositories; managing URLs and paths across different repositories, and aggregating metadata (posts, tags, categories).&lt;/p&gt;
&lt;h2 id=&quot;repos-paths-and-urls-for-the-multi-notebook&quot;&gt;Repos, Paths, and URLs for the multi-notebook&lt;/h2&gt;
&lt;p&gt;Even with the source files (such as &lt;code&gt;.md&lt;/code&gt; entries, templates, etc.) in different repositories it would be simple enough to combine the generated HTML files from each repository into a single output directory serving the site (on Github or elsewhere). However, GitHub’s &lt;code&gt;gh-pages&lt;/code&gt; provide an elegantly more modular way to do this already. GitHub uses the URL of the user’s repository (the repo named &lt;code&gt;username.github.io&lt;/code&gt;, which also serves as the site URL unless a different domain is specified using a CNAME file) as the root domain for all other &lt;code&gt;gh-pages&lt;/code&gt; branches on the Github repo.&lt;/p&gt;
&lt;p&gt;Thus, I have created repositories named &lt;code&gt;2015&lt;/code&gt;, &lt;code&gt;2014&lt;/code&gt;, etc, which will serve the notebooks for the corresponding year from their own &lt;code&gt;gh-pages&lt;/code&gt; branch. Moving my &lt;code&gt;www.carlboettiger.info&lt;/code&gt; (the use of a subdomain such as &lt;code&gt;www&lt;/code&gt; is required in order to benefit from Github’s CDN, though if it is omitted the domain provider will add it) from my &lt;code&gt;labnotebook&lt;/code&gt; repo to my &lt;code&gt;cboettig.github.io&lt;/code&gt; repository means that the annual repositories now have base URLs such as &lt;code&gt;www.carlboettiger.info/2015&lt;/code&gt;, &lt;code&gt;www.carlboettiger.info/2014&lt;/code&gt;. Adjusting the &lt;code&gt;_config.yml&lt;/code&gt; to omit &lt;code&gt;/year:&lt;/code&gt; from the permalink, since it is already in the base URL, is all that is needed to ensure that the posts of all my old URLs will still resolve to the same pages. Excellent.&lt;/p&gt;
&lt;p&gt;Dealing with the site pages is more tricky than dealing with the posts. Pages come in two variates: some, like &lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;research.html&lt;/code&gt;, &lt;code&gt;vita.html&lt;/code&gt;, contain only content that is independent of whatever is in the notebook pages and thus can live quite happily in the &lt;code&gt;cboettig.github.io&lt;/code&gt; repository. Others, like &lt;code&gt;tags.html&lt;/code&gt;, &lt;code&gt;categories.html&lt;/code&gt;, &lt;code&gt;archive.html&lt;/code&gt;, &lt;code&gt;lab-notebook.html&lt;/code&gt;, &lt;code&gt;atom.xml&lt;/code&gt; and other tag-specific RSS feeds are dynamically generated by Jekyll using the metadata of the posts, and thus need to live in the individual notebook repositories instead.&lt;/p&gt;
&lt;p&gt;This instead of just having the page: &lt;a href=&quot;http://carlboettiger.info/tags&quot;&gt;carlboettiger.info/tags&lt;/a&gt;, each year begins a new notebook with it’s own tags, categories, etc: &lt;a href=&quot;http://carlboettiger.info/2014/tags&quot;&gt;carlboettiger.info/2014/tags&lt;/a&gt;, &lt;a href=&quot;http://carlboettiger.info/2013/tags&quot;&gt;carlboettiger.info/2013/tags&lt;/a&gt;. For tags, categories,it makes some sense to have this information aggregated by year, avoiding the clutter of too many or too stale tags or categories (though perhaps something is lost by not being able to see this in aggregate across all years, at least not without some effort). Likewise for the list of posts by date (previously at &lt;code&gt;archive.html&lt;/code&gt;, now just turned into &lt;code&gt;index.html&lt;/code&gt;) is produced for each annual notebook, such that &lt;a href=&quot;http://carlboettiger.info/2014&quot;&gt;carlboettiger.info/2014&lt;/a&gt; resolves a reverse-chronological list of posts for that year alone.&lt;/p&gt;
&lt;p&gt;I must then address what to do about the original URLs such as &lt;a href=&quot;http://carlboettiger.info/tags&quot;&gt;carlboettiger.info/tags&lt;/a&gt;. Using a Jekyll liquid filter it is easy to define automatic redirects for &lt;code&gt;/tags.html&lt;/code&gt; and &lt;code&gt;/categories.html&lt;/code&gt; that will forward to the current year’s tag’s and categories, though perhaps an aggregated view would be preferable. For &lt;a href=&quot;http://carlboettiger.info/archive&quot;&gt;carlboettiger.info/archive&lt;/a&gt; I have provided manual links to the index of each annual notebook rather than a redirect to the index of only the most current notebook. Likewise for one of my most popular pages, &lt;a href=&quot;http://carlboettiger.info/lab-notebook&quot;&gt;carlboettiger.info/lab-notebook&lt;/a&gt;, I have retained the automated feeds from Github, Twitter, and Mendeley, but replaced the previews of the most recent posts with the less aesthetic link to the notebook by year. Meanwhile, I have provided each notebook with it’s own nine-panel preview page such as &lt;a href=&quot;http://carlboettiger.info/2014/lab-notebook&quot;&gt;carlboettiger.info/2014/lab-notebook&lt;/a&gt;, which has the preview but not the network feeds (Perhaps it would be better to move this to the index page). In this way, the social feeds can be updated merely by updating the &lt;code&gt;cboettig.github.io&lt;/code&gt; repo (since these are rendered as static text rather than javascript, written using the relevant API at the time the site is built.)&lt;/p&gt;
&lt;p&gt;A more tricky case is that of the atom feeds. It doesn’t really make sense to subscribe to a &lt;code&gt;carlboettiger.info/2015/blog.xml&lt;/code&gt; feed that will be inactive in a year. Using HTML redirects in a &lt;code&gt;.xml&lt;/code&gt; file doesn’t make too much sense, so I will try the RSS-flavor redirect:&lt;/p&gt;
&lt;pre class=&quot;sourceCode xml&quot;&gt;&lt;code class=&quot;sourceCode xml&quot;&gt;&lt;span class=&quot;kw&quot;&gt;&amp;lt;newLocation&amp;gt;&lt;/span&gt;
http://www.carlboettiger.info/2015/blog.xml
&lt;span class=&quot;kw&quot;&gt;&amp;lt;/newLocation&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;though this seems less than ideal.&lt;/p&gt;
&lt;h2 id=&quot;automated-deploy&quot;&gt;Automated deploy&lt;/h2&gt;
&lt;p&gt;As I use the &lt;code&gt;jeykll-pandoc&lt;/code&gt; gem to have pandoc render the markdown, along with a few other custom plugins, I cannot take advantage of Github’s automated build for Jekyll and have instead relied on the trick of having Travis-CI build and deploy the site. Adding automated knitr building to the mix will make this too heavy for travis, even for more modular notebooks. Instead, I am relying on local building, together with automated builds from my own server running a Drone CI instance. More on this in a separate post.&lt;/p&gt;
&lt;h2 id=&quot;site-assets-templates&quot;&gt;Site assets, templates&lt;/h2&gt;
&lt;p&gt;Individual notebook repositories are thus much more light-weight. All css assets are in the root &lt;code&gt;cboettig.github.io&lt;/code&gt; repository or already provided by external CDNs (such as the FontAwesome icons or MathJax, and Bootstrap javascript). However, it is necessary that both all annual notebook repositories and the base repo have the Jekyll &lt;code&gt;_layouts&lt;/code&gt; and &lt;code&gt;_includes&lt;/code&gt; files required to template and build the pages. This is unfortunate, since it means maintaining multiple copies of the same file, but I haven’t figured out an easy way around it.&lt;/p&gt;
&lt;h2 id=&quot;pruning-history&quot;&gt;Pruning history&lt;/h2&gt;
&lt;p&gt;In breaking &lt;code&gt;labnotebook&lt;/code&gt; into component repos by year, I only want to preserve the history of that year, thus keeping the repositories small. This is particularly important for the root repo, &lt;code&gt;cboettig.github.io&lt;/code&gt;, since it will remain active.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edit &lt;code&gt;_config.yml&lt;/code&gt; to remove &lt;code&gt;/:year&lt;/code&gt; from &lt;code&gt;_config.yml&lt;/code&gt; (the repository name will automatically be used as part of the URL)&lt;/li&gt;
&lt;li&gt;delete all posts from different years (preferable to just wait until deleting their history, which will remove the files as well), e.g. for 2014:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;sourceCode bash&quot;&gt;&lt;code class=&quot;sourceCode bash&quot;&gt;&lt;span class=&quot;ot&quot;&gt;files=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`echo&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;{_posts/2008-*,_posts/2009-*,_posts/2010-*,_posts/2011-*,_posts/2012-*,_posts/2013-*}&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;git&lt;/span&gt; filter-branch --index-filter &lt;span class=&quot;st&quot;&gt;&amp;quot;git rm -rf --cached --ignore-unmatch &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;$files&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt; HEAD&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and remove the temporary backups immediately so that repository actually shrinks in size:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git update-ref -d refs/original/refs/heads/master
git reflog expire --expire=now --all
git gc --prune=now&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is more important in the root repository, since this will remain active. If the annual notebook entry repositories have some extra stuff in their &lt;code&gt;.git&lt;/code&gt; history it isn’t such an issue since they no longer need to grow or be moved around as much. (See this &lt;a href=&quot;http://stackoverflow.com/questions/2100907&quot;&gt;SO on rewriting git history&lt;/a&gt;.)&lt;/p&gt;
&lt;h2 id=&quot;my-progress-notes-during-the-remapping&quot;&gt;My progress notes during the remapping:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[x] delete the CNAME file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] delete all the relatively static pages files that will be hosted directly from &lt;code&gt;cboettig.github.io&lt;/code&gt; (&lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;research.md&lt;/code&gt;, etc., but not dynamically created &lt;code&gt;tags.html&lt;/code&gt; etc).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] adjust &lt;code&gt;repo:&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt; to match the repository year. This will automatically fix the sha and history links in the sidebar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Other tweaks to the sidebar: &lt;code&gt;site.repo&lt;/code&gt; liquid must be added to categories, tags, next, and previous links.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Automated deploy for active and root repositories.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Plan for &lt;code&gt;labnotebook&lt;/code&gt; repo. History is preserved, but issues, github stars, etc. Use as template for the new years?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Activate! Remove CNAME from &lt;code&gt;labnotebook&lt;/code&gt; repo, add &lt;code&gt;www&lt;/code&gt; CNAME to &lt;code&gt;cboettig.github.io&lt;/code&gt;. Consider removing &lt;code&gt;gh-pages&lt;/code&gt; branch of lab-notebook?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Fix / workaround for the root atom feeds.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[x] Syncing assets, layout, and deploy scripts? Perhaps it is best to allow these to diverge and newer notebooks to look different than older ones?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 


</feed>
